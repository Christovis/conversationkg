      In the discussion of navigation bars on this list, it has been noted,  correctly, that further work is needed in this area, both in the PF group  and in respect of the interfaces provided by HTML user agents. It would  however seem clear that some means of isolating the HTML block comprising  the navigation bar is needed, such as the use of the DIV element with  CLASS="navbar". Perhaps this could be introduced into the guidelines as a  "new" and "recommended" item.    Also, it may be preferable for authors to use the LINK element within the  head section of the document, together with the link types listed in  section 6.12 of the HTML specification, whenever practical, as a  substitute for a navigation bar in the body of the document. The rendering  of the LINK element is left entirely to the user agent, and this maximises  the availability of presentation (braille or speech-based software could  provide a user interface option that offers access to the list of links in  the head of the document, rather than presenting them at the start of the  document itself). This strategy would of course require complementary work  within the UI group to ensure that visual user agents provide a common and  acceptable rendering of LINK elements.        

      While reading the full text of the Trace Centre's guidelines, version 8.0,  the following comments came to mind. As the subject line of this message  indicates, these are only first impressions, based on a quick review of  the document.    1. All of the comments which I made with respect to the quick summary of  the guidelines, apply to the full document as well.    2. Terminology: as noted in the HTML specification, there is an important  distinction to be made between two related terms which both refer to  aspects of markup, namely, "tag" and "element". The term "element", as I  understand it, refers to the entire construct, including its start tag,  its content, and, if relevant, its end tag. The term "tag" refers either  to the start tag or end tag. The Trace guidelines consistently use the  word "tag" (as in "tags affected"). This usage should be checked for  correctness, and the word "element" substituted in those cases in which  the demands of precision so require it.    Also, the term "screen reader" is used throughout the document to refer  not only to conventional screen reading software, but also to assistive  technologies that are actually "aware" of the markup of the HTML document  and can process style sheets. Daniel Dardailler's dichotomy of screen  readers as contrasted with "markup aware" access agents or assistive  technologies, is I think an important distinction, as it marks the  division between the predominant solutions of today and those that will be  relied upon in the future. T.V. Raman's Emacspeak is no doubt an excellent  example of the latter approach. Thus, the terminology used in the  guidelines could be reviewed in this respect.    3. Language and directionality: investigations should be conducted into  whether HTTP headers will provide sufficient information to a "markup  aware" braille or speech access product concerning the language in which  each HTML document is written, or whether authors should be advised to  include the HTML 4.0 LANG attribute in the header of each document. In any  case, authors should be advised to use the LANG attribute whenever a  phrase or passage of text within the document is written in a different  language from the main body of the text. Both speech synthesizers and  braille translation software need to apply language-specific rules.    4. Image maps: the last example of an accessible image map takes advantage  of the OBJECT element and uses the TITLE attribute of each anchor to  convey a textual alternative for each active region of the map. In this  illustration however, the anchor elements have no end tags, and nor do  they have any content. This seems to be incorrect. In the DTD fragment  given in section 13.2 of the HTML 4.0 specification, both the start and  end tags of the A element are marked as required.    Also, the OBJECT element enables quite sophisticated long descriptions,  containing embedded links, to be written as the content of an OBJECT. It  was this flexibility which persuaded the WAI working group to argue  persistently, and ultimately with success, for the retention of the SHAPES  attribute in OBJECT and the COORDS attribute of the anchor element. The  guidelines should reflect the full potential of OBJECT to provide fully  formatted long descriptions, rather than just a list of links such as can  be created by the ALT attribute of AREA.    5. Once the final HTML 4.0 specification has been released, all references  in the guidelines to specific HTML elements should be linked to the  corresponding definitions in the specification.    6. In general, it is important to emphasise that the guidelines are  excellent as they stand, and it is evident that much effort has been  expeded in their development and maintenance.        

      Thus, Charles' proposed kludge amounts to the following:    <object data="symphony.au"> Mahler's first symphony <embed [attribute  referring to symphony.au]> </object>    Whereas, a standard-compliant solution would use an anchor element instead  of EMBED: <a href="symphony.au"> Listen to Mahler's first symphony </a>  within the content of OBJECT. Of course, some functionality is lost, but  the result is not overly inconvenient for the reader and maintains  conformity with the HTML specification.    The legacy will, of course, disappear as users upgrade their software.        

      This may at first seem unrelated to the issue at hand, but I thought that  it deserved to be mentioned.    Long descriptions should be written for all of the significant diagrams in  the CSS 2 specification. This would make it easier for people who can not  view the graphics to understand the concepts, especially those which  relate to visual formatting. Obviously, the long descriptions should be  written by an appropriately qualified individual who understands the  specification itself.        

      Perhaps it would be beneficial to this discussion if the issues under  consideration were distinguished. First, there is the semantic issue,  specifically, the question of what advice should be given to authors with  respect to substituting textual content for an image that can not be  displayed in a text-only environment. This problem should be addressed in  style guidelines, although the borderline between what rightly belongs in  the HTML specification and what should be left to usage guidelines is  becoming increasingly obscure, given that the HTML 4.0 draft is attempting  to satisfy the needs of both users and implementors.    Secondly, there is the question of an appropriate mechanism through which  to provide textual alternatives to graphic images. Since an inline image  is notionally part of the document, there are no structural reasons why at  least some of the alternative textual content should not be included  within the document itself, as is presently the case with the ALT  attribute. Since many users may not wish to download or read a lengthy  description, there is an argument that they should either reside in  separate files, or become components of image files to the extent that the  relevant data formats permit. However, given that inline images (whether  they be inserted by means of the IMG or the OBJECT element) are integral  to the document, there is a good case for maintaining that at least a  descriptive title or label should be given in the HTML markup itself, and  ought not need to be retrieved separately via an HTTP mechanism.   Irrespective of whether or not one accepts the conceptual argument, this  is the design which is imposed upon as by HTML as it presently stands,  both in the ALT attribute and the OBJECT element.     A third issue is the extent to which the user should be able to exercise  control over that which is presented in place of an image. Certainly, the  retrieval of a long description should be optional, and perhaps there  should be a means by which users can ignore the presence of decorative  graphics, the problem being that some people may nonetheless wish to have  access to brief labels for such images. Whether this problem can be  handled by the client or not is a question that I would like to raise for  further consideration.    I think the OBJECT element should be able to satisfy the requirement for  long descriptions: I am very inexperienced at reading DTD's, but it  appears from the HTML 4.0 draft that the content of the OBJECT element  includes the %inline entity, which in turn should contain the anchor  element. Thus, to modify one of the examples in the HTML 4.0 draft:    <object data="figure1.png" type="image/png"> Figure 1 <a  href="figure1-description.html"> [description available] </a> </object>    Unfortunately, the IMG element provides no corresponding solution. Would  it be better to include an attribute whereby the URL of the document  containing the long description can be specified within the IMG start tag,  or rely on HTTP mechanisms, or offer both as alternatives that should be  available to software developers?        

      This actually constitutes two separate but related suggestions:    1. Use the CODE in-line element to enclose each block of text that appears  in the document, whether inside the PRE element or not, which contains  text in a computer language.    2. Use the CLASS attribute with the CODE element to designate the type of  code. A list of recognised classes would here be necessary. Since there  are so many computer languages, it would be difficult to develop a  comprehensive catalogue. So far as braille is concerned, the type of  computer language is unimportant: all that need be indicated is that the  text should be treated as computer code rather than being processed  according to the rules applicable to natural languages (literary braille  code, contractions, etc.). Speech is not so easy to address. What would  make a good rendering of programme code, and what kinds of distinctions  between different kinds of code would help to make this possible?    This question is best answered by someone who is experienced in  programming and in reading programme code via a speech synthesiser -- in  other words, not me.        

      Any discussion of validation software is necessarily informative rather  than normative. Also, it is not required that documents be validated by  any particular tool, but only that they be valid. Some people can validate  HTML simply by reading it. Likewise, some HTML editors provide automatic  validation facilities.        

      I support Daniel's solution and concur with his regret that more generic  event names have not been included in HTML. However, I recall reading  somewhere (but can not remember the reference, unfortunately) that the  keyboard events were supposed to apply to speech input as well, though  maybe this comment was meant to refer only to the keyboard characters that  can be assigned to links and form fields.        

      Would it be possible to propose a simple measure of frame complexity, E.G.  a frameset is too complex if (1) it includes more than two frames, and (2)  the contents of at least two of these frames do not remain constant  (in other words, at least two frames are referred to in TARGET attributes  somewhere in the collection of documents to which the frameset applies).    NOFRAMES is priority 1 for complex frames, priority 2 otherwise.    The essence of this approach is to set a determinate upper limit on frame  complexity, based on our assessment of what is readily navigable and  comprehensible when frames are treated as links in a serial medium such as  audio. The above example of a complexity definition is just an  illustration and has not been based on any research (obviously the working  group would need to agree upon a definition if this solution were  adopted).        

      Unfortunately, the section of the CSS 2 draft which will discuss item  numbering is still a place holder. Thus, we do not as yet have a proposal  to evaluate.        

      Another approach would be to update the log of changes, although this  would involve more work for the editors, who are already very busy.  Perhaps a compromise would be, when announcing new draft of the  guidelines, to include in the message sent to the list an indication of  the major changes which have been made since the previous version. These  could perhaps also be included in the changes log. Minor corrections would  not need to be noted in this way.        

      Clearly it would be best to build on the solution that has already been  developed in CSS 2. I share the concern expressed in Daniel's mailing list  thread, that authors might try to convey significant information in the  image which is to be used as a list bullet. A means of associating a  textual label or description with the image, for use in non-graphical  media, would therefore seem to be warranted. This is another example of a  situation in which a metadata approach based on HTTP would offer the best  solution. However, there is a strong tendency toward reliance on markup as  the means by which to convey the textual alternative to a graphical  resource. Indeed, given the ALT attribute, the design of OBJECT and the  LONGDESC proposal, there is hardly any need for a metadata approach,  except in two situations: (1) frames; and (2) the list image bullet in  CSS.    It would seem reasonable to suppose that HTML authors, who would be  responsible for taking advantage of ALT and OBJECT, might not be willing  to make the extra effort of preparing metadata so as to provide textual  substitutes for certain images, merely for the sake of the anomalous  circumstances in which the HTML markup and CSS do not offer a solution. I  have no objection to pursuing the metadata strategy, thereby making  available two alternative methods of associating text with an image.  Nevertheless, it appears inconsistent to rely on markup for most purposes  but to insist on the implementation of a metadata scheme in a limited  range of circumstances in which HTML and CSS 2 currently fail to give  scope for associating text with a graphical resource.        

      On Mon, 10 Nov 1997, Hakon Lie wrote:    > This has been true in the past; CSS is intended for documents where  > tree transformations are not required. However, another recent  > submission to W3C builds on CSS to provide "Simple Tree Transformation  > Sheets".  >   > [2] http://www.w3.org/Submission/1997/16/  >     Last week, I reviewed this submission briefly. Although it allows HTML  elements to be renamed and class values to be added, I did not find any  mention of properties that would permit defined sections of HTML documents  to be moved to other locations within the hierarchical structure. For the  purposes of accessibility, it is important to be able to move such  components as navigation bars, tables, etc., to different points within  the text. For example:    <div class="navbar"> [...] </div>  could be the definition of a navigation bar which appears near the  beginning of the page. Speech synthesizer users might prefer it to be  presented at the end of the document, after the main text. The WAI  guidelines would define a set of standard class names for navigation bars  and other commonly occurring components of HTML documents, which could  then be used by a tree transformation style sheet to manipulate the  reading order of the text.    The ultimate question will be whether CSS is likely to support such  functionality or whether XSL or DSSSL should be used instead. In any case,  if XSL proceeds, it will need to be reviewed by the Formats and Protocols  Working Group.        

      I tend to agree with the position which Al and Daniel took regarding CSS  2: to promote the broader aim of accessibility, it is important that a  flexible style sheet standard be available to the public sooner rather  than later, so that authors will have an insentive to commence their  migration toward style sheets and away from tables and other ad hoc means  of controlling visual formatting. The most important aim therefore, with  this end in mind, is to ensure that the accessibility features present in  CSS 2 are (1) useful and suited to their purpose; and (2) compatible with  the future extensions which the WAI intends to pursue.    With regard to the SPEAKROW issue, I do not fully appreciate how it could  be regarded as falling within the purview of the DOM specification. As I  understand it, the purpose of DOM is to expose markup and style  information to external programmes, including access software and  scripting languages, and to allow these applications to modify the  document in prescribed ways. The SPEAKROW capability, on the contrary, is  supposed to be a stylistic device available to the author, whereby he or  she can exert a high degree of influence over the audio rendering of each   row and cell in the table. Thus, it would appear to belong in CSS rather  than DOM.    Given the more general considerations enunciated above, there should be no  harm in postponing the development of this functionality until work begins  on CSS 3.    At present, aside from reviewing the final HTML 4.0 draft with respect to  the changes agreed upon at the meeting and reviewing interim drafts of CSS  2, it seems that the WAI Formats and Protocols effort is free to start  organising its priorities in relation to other W3C standards and the long  term issues which have been raised.        

      I agree with Liam's interpretation. To simplify the matter, I would  suggest that the TITLE attribute should not be used in connection with  IMG. Use ALT to provide a genuine substitute for the image which conveys  the informational content of the image, or, if associated with a long  description, gives it an identifying label so that the reader can decide  whether to access the resource referred to by the LONGDESC attribute.    TITLE on anchor elements is perfectly acceptable, and indeed the HTML 4.0  specification clearly demarcates its role as providing the title of the  resource to which the link refers. It is an "advisory" title in the sense  that it is displayed prior to the actual retrieval of the information  designated by the link.        

      On Sat, 4 Oct 1997, Al Gilman wrote:    > My current rough take on the situation is that there is inadequate  > support for the "keys" kind of relationship as discussed in   >   >    more on TABLEs  >   >    http://lists.w3.org/Archives/Public/w3c-wai-hc/1997OctDec/0004.html  >   > and that it's worth defining default rules and explicit markup to  > support both this and its companion "is-a" kind of relationship  > that I suspect is covered sufficiently with AXIS and AXES.  The  > defaults can be made more effective if we have predefined class  > names for row-major, column-major, etc. classes of tables.  >   In connection with the first point, it seems that Al is concerned  primarily with the means by which the relationships between cells are  established. Though I do not claim fully to understand his profound  thinking in this area, I shall nonetheless make a few tentative comments  which Al can undoubtedly correct in the event that I am mistaken as to his  intention. One can start with the premise that not only header cells, but  also data cells can comprise that which may be called the subject matter  of a given data cell. In one of the examples provided in the September  draft ("Cups of coffee consumed by each senator"), the second and  subsequent cells in each row of data are linked not only to their  corresponding column headers, but also to the first column of data cells  (which give the names of the senators). This relationship is represented  visually by the fact that all of the cells are in the same row and the  implications which can be drawn from the column headings. Thus, the second  and subsequent columns of the table are implicitly linked to the first  column as well as to the column headers. Is this the kind of relationship  that Al wishes to capture? If so, then such interconnections can be  expressed by modifying the definition of the AXES attribute so that the  target ID values can be data cells, as well as headers. Indeed, this is  the concept which I think underlies the inadequately explicated idea of a  "row header", which is mentioned in the HTML draft. Nevertheless, as Al  also appears to be arguing, it would be preferable to be able to define  such relationships by means of rules rather than relying on the author to  include an ID value and corresponding AXES attributes in each row of the  table.    Al's second point, namely the need to indicate whether a table is row or  column dominant, brings us back to considering the problem of reading  order. If style properties, such as those which I have previously  suggested, are used to regulate the reading order, then a mechanism for  indicating row or column dominance is clearly superfluous. However, most  authors are not likely to define styles for controlling the audio  presentation of their tables, in which case, a default reading order  (whether to read across the rows or down the columns) should be specified;  and as Al rightly points out, this can be achieved by reserving  appropriate CLASS values.    Returning briefly to the issue of inter-cell relationships, it is clear  that for a simple table (such as the "coffee consumption" table in the  HTML draft), an ideal audio rendering can be given without the user  agent's having to take into account the role of the first column as  defining the subject matter to which the remaining columns refer. One  would not, for example, wish the senator's name to be repeated prior to  each of the other cells in the given data row. The audio rendering stated  in the HTML draft is quite adequate. Are there more complex cases,  however, in which the relationships between data cells are more  significant and would need to be specified in the markup in order for a  satisfactory audio presentation to be possible?    I must admit that I find the expense account table mentioned in the HTML  draft to be somewhat difficult to understand merely from reading the  markup, and that the associated image of the table is of course  inaccessible.        

      I agree with Josh that server-side maps which are enlarged to show an  expanded representation of, for instance, a geographical area, are  problematic. The best solution would be to link a long description to the  image, which provides a detailed treatment of what the map represents.    This guideline should be updated accordingly.        

      In the minutes of the recent HTML WG audio call, there was said to be a  need to "partition the name space" of media types. As I understand it, the  intention is to reserve a media type called "other" (or an equivalent  name), and then to limit HTML user agents to the list of base types which  has thereby been established.    I do not understand the rationale behind this proposal, and nor is it  necessary. User agents should simply ignore any base type that (1) is not  one of the predefined base types in the HTML specification; and (2) has  not been defined by the style language which is currently in effect.    A minimally conforming HTML user agent would ignore any media type that is  not exactly one of the predefined types mentioned in the specification.    If any parameters are added to the base type which the user agent can not  interpret, then the resource to which the media type relates (E.G. a style  sheet) should not be accessed.        

      At the core of this issue lies the definitional problem of what, for the  purposes of the guidelines, are the conditions under which a document  to be considered accessible. The priority 1 guidelines merely require that  it be possible for the document to be presented in any of a range of  sensory modalities (auditory, tactile and visual). This stratum defines a  minimal level of accessibility and does not entail that the information  will be comprehensible, or even that inner structural relations will be  apparent to the reader. Most of the technical considerations which  determine whether this minimal degree of accessibility is attained, have  the advantage of being readily identifiable by automated tools (absence of  textual alternatives to multimedia content, failure to comply with W3C  standards, etc.).  At a second level one finds those issues which concern the structure of  the document, which provides cues that indicate an appropriate reading  order and facilitate browsing strategies. Yet another layer is added by  questions of readability and comprehension, which, however, are implicitly  at work throughout the guidelines (for example in determining what  constitutes appropriate and sufficiently detailed alternative text, what  should be included as a structural aid in a table summary, etc.). Cultural  and linguistic aspects of comprehension also emerge at this stage.    Thus, leaving aside the requirement for alternative  descriptions/transcriptions, and table summaries, which involve  supplementing the text with additional material to compensate for  information that is lost when the document is displayed in different  media, I think the range of problems addressed by the guidelines can be  categorized according to three levels: (1) the perceptual; (2) the  structural and navigational; and (3) the comprehension issues.    The guidelines strive to be comprehensive in respect of levels (1) and  (2) and to offer limited suggestions with regard to level (3). The latter  relate mostly to those aspects of comprehension which are most affected by  the rendering of the document in different media (ALT text etc.), and  navigation (links which can be understood out of context), with  supplementary references to readability.    I think it is necessary to circumscribe the guidelines' treatment of  comprehension-related problems, and to do so in a principled manner,  either by describing (as a profile) the expected characteristics of the  intended reader of an "accessible document", or by developing other  criteria. Obviously, there can be no such entity as a document which is  readable and comprehensible to everyone. Thus it is necessary to define  the scope of the guidelines carefully and to justify the boundaries which  necessarily have to be imposed.        

      I like Wendy's latest formulation, except that the subordinate clause  beginning with "because" should be moved to the start of the sentence so  that the justification precedes the recommendation.        

      The formulation that we agreed upon in one of the WAI Guidelines  conference calls is that HTML documents must conform to a DTD found in one  of the W3C specifications. I also agree that the importance of using style  sheets for layout purposes and moving away from the misuse of tables could  be more strongly emphasised.        

      I agree that defining a link type for the abbreviation dictionary is an  important first step. Also, I have wondered to what extent the  abbreviation dictionary and the phonetic markup work can be combined. For  example, an external dictionary file might be an appropriate means of  implementing phonetic markup. However, abbreviation dictionaries perhaps  should not be connected exclusively with the phonetic work, since they may  be useful to braille translators as well (for example, I understand that  the French braille system distinguishes between a full stop (point) and a  "point abbreviatif", which is used in abbreviations).    I would suggest using either an XML DTD or an HTML document, as discussed  earlier in this thread. The abbreviation dictionary certainly needs the  equivalent of the HTML 4.0 LANG attribute, and should allow a full  multinational character set to be used. I agree that it would be helpful  in some instances for phonetic markup to be included as well.        

      Is there consensus in this working group that, aside from the need to  reserve CLASS values for indicating whether a table should be read across  the rows or down the columns, the reading order issue would best be  addressed by style sheets? In particular, tree transformation properties,  and possibly other mechanisms if necessary, should be added to CSS so as  to enable the reading order of a document to be modified according to the  nature of the output medium. The existing CLASS and ID attributes offer a  sufficient means of identifying structural components of the document for  this purpose.         

      During last week's call I volunteered to provide a critique of my own  proposal regarding frameset complexity, whereby I suggested that as a  priority 1 requirement, framesets that exceed a certain complexity  threshhold must be accompanied by a NOFRAMES element to provide an  alternative version of the content. This checkpoint would remain as  priority 2 in other cases. The main problems with this strategy are:    1. Would even a complex frameset meet the definition of a priority 1  requirement? Clearly, this is a cognitive rather than a perceptual issue:  can it be genuinely concluded that at a certain limit, framesets become so  awkward to navigate and the interrelations among the frames so difficult  to comprehend, especially in a serial medium, that the content becomes  impossible for certain groups of users to access? Is this still the case  if a LONGDESC attribute is provided to describe the frameset, or should  the checkpoint state that the author is required either to use NOFRAMES or  provide a description, via LONGDESC, of the function of the frames?    2. If the above issue were resolved in favour of my original proposal, in  either a modified or unmodified form, then there would still remain the  task of defining the complexity threshhold, taking into account: (1) the  number of frames in the frameset; (2) the proportion of these frames for  which the content changes in response to the user's activating hypertext  links and thus loading a new resource into the frame; (3) any additional  complexity introduced by contiguous framesets, where one frameset is  linked to another, with the latter possessing a different number of frames  etc.; (4) the visual layout of frames in the set; (5) any other relevant  criteria.    I still think that a relatively simple measure can be proposed, similar to  that described in my earlier message on this topic.    As a final question, if TITLE is used to label frames, as it should be,  and this information is exposed by user agents, to what extent does it  reduce the need for NOFRAMES by increasing the complexity threshhold at  which framesets become inaccessible, assuming that there is one (cf.  issue 1 above)?        

      I would suggest that the spec should provide approximately as follows:    "The World Wide Web Consortium may define additional media types in the  future, and may also extend the media types listed above to include  qualifying parameters. All user agents must separate the value of the  MEDIA attribute into a list of one or more entries, each such entry being  separated from its successor by a comma (Unicode decimal 44). User agents  which do not support extensions to the list of media types defined in this  specification should truncate each entry at the first character which is  not a letter, a digit or a hyphen, and then make a case insensitive match  with the names of the predefined media types (screen, print, aural,  projection, braille). Unrecognised media types should be ignored."    I am not a skilled drafter of specification language, so this suggestion  is not as concise and accurate as it should be, but perhaps it could be  used as a starting point.        

      I am aware of no reason why basic tree transformation controls, of the  kind which I have described, could not be added to CSS 2. There are  already visual flow objects. Tree transformation takes the concept one  step further by allowing the structure of the document to be modified  for the purposes of generating optimal output in a particular medium. I  have also argued that, given the intention of the CSS working group to add  support for footnotes and end notes, such transformations will be  required, or at least desired in any case, particularly for the audio and  braille rendering of notes, but also to some extent as a means of  regulating their placement in a printed text.    Al has raised several interesting points. Firstly, does there need to be  an attribute which can indicate whether a table is best understood by  reading down the columns or across the rows? This would at least allow  columnar material to be identified as such. However, I would not support  any strategy which condones the use of the HTML TABLE element for any  purpose other than the representation of tables. Although some authors  misuse HTML tables, the WAI should not endorse such a practice by  attempting to compensate for it in the markup. Control over the layout of  documents is the province of style sheets, and will become even more so as  CSS is more widely adopted.        

      Essentially, we need to decide whether RDF will provide an optimal  solution, or whether it would still be preferable to pursue changes to the  reserved link types in HTML. If this working group opts for RDF, as I  think is likely, then the task of working out the details could be added  to the list of action items for the FP working group. How far is the RDF  specification from being completed and submitted as a proposed  recommendation? Obviously it should be reviewed by the FP group at some  stage prior to becoming a standard, and perhaps the dictionary  requirements could be considered as part of such a process.        

      My main intention in making this draft available is to have it circulating  prior to the WAI technical meeting, which regrettably I will not be in a  position to attend. The document was written and edited in rather a hurry,  and a few minor spelling and grammatical errors have crept in, but these  should not be of significant concern.    All comments and criticisms are welcome, and as Daniel suggested, please  forward the document to anyone who would be interested in reviewing it.        

      After having revised the guideline related to the graceful degradation of  newer technologies as discussed in today's conference call, we could  change the guideline which excludes non-w3c technologies, as follows.    Authors should avoid using HTML documents which include, and depend upon,  non-w3c technologies such as scripting languages, unless alternative pages  are provided. Note: this does not preclude linking to binary data such as  image and sound files, the formats of which have not been standardised by  the W3C, so long as appropriate descriptions and transcriptions are also  offered. Techniques: (1) use server-side scripts to validate forms and  generate dynamic content, rather than relying on client-side scripting  languages.    Priority 1 for both the guideline and the technique.    Either in this or a separate guideline, provide that the user interfaces  of client-side scripts should be made directly accessible for user agents  and assistive technologies which support them. However, this is of  secondary importance in comparison with the principal recommendation,  which is to provide static pages which act as equivalents to all  client-side dynamic content.        

      I fully concur with Jon Gunderson's comment with respect to reading order:  some standard conventions need to be defined, taking advantage of the HTML  CLASS and ID attributes where necessary, which will enable the author to  specify the linear reading order of the document. To some extent, this  requirement is already accommodated by HTML 4.0, for instance in the  TABINDEX attribute which defines the sequence in which the user is to be  moved through the entry fields of a form. Although the HEADERS, SCOPE and  AXIS attributes used in tables do not directly define a reading order as  such, they make explicit the semantic connections between header and data  elements, thereby supplying the infrastructure on which style sheets or  client-side scripts can build so as to read the table in a comprehensible  fashion.    The need to vary the reading order of a document has often been stated as  a requirement, but remarkably few examples have been given. What is needed  at this stage is a taxonomy of examples out of which a solution can be  developed. The guidelines could then suggest appropriate CLASS values  which could be associated with HTML elements, especially the generic  containers (SPAN and DIV) to provide the user agent with the needed  structural information. If a more generalised approach be desired, then  presumably the suitability of RDF mechanisms for this purpose could be  explored by the PF working group.    The primary example which comes to mind is that of a navigation bar. It  would be desirable to move such a construct to the end of the document, or  enable the braille or audio output software to notify the user of its  presence without reading its contents in detail, unless the user chooses  to do so. The guidelines already give an example of appropriate markup in  this case. Perhaps a better CLASS value would be: CLASS="navigation"    Presumably, tables and long descriptions (for instance the contents of  OBJECT elements) constitute other components of the document which the  user may want to defer during the reading process, but these are already  indicated by their own markup and thus the issue becomes solely one of  user agent design. Perhaps other members of this working group could  furnish additional examples at this point which would help to clarify the  scope of the requirement.        

      Perhaps IPA characters could be used to specify each phoneme, and extra  parameters could be included in the markup, for instance as attributes of  XML elements that would surround the relevant phonetic data. It is  important to take advantage of whatever form of phonetic transcription  will be most widely recognised and understood. IPA is an international  standard and is probably better known than any other phonetic script.    Of course, if necessary, we could define two or three different  representations of the phonetic data, IPA plus one or two alternatives;  but writing a separate script for each language would probably be too  labour intensive. In any case, a common function of phonetic markup will  probably be to define the pronunciation of words or expressions that  originate in a language other than that of the document itself.    I am thinking here primarily of the phonetic dictionary format rather than  of any style language proposal of the type to which Dave Raggett has  alluded.    Incidentally, this discussion is moving well beyond the parameters of the  HTML 4 and CSS 2 review. I hope that the PF mailing list can be set up  soon in order to provide a more appropriate forum in which to continue the  threads relating to phonetic markup and XML/XSL.        

      During the past few months, I have noticed that some HTML documents  include a non-standard feature whereby a new page will be automatically  loaded after a predetermined period of time has elapsed. I can not  remember what the non-standard markup is which gives rise to this  phenomenon, but I am sure that other members of the GL working group would  be familiar with it. The guidelines should discourage authors from using  this feature, not only because it is, presumably, a proprietary HTML  extension, but more importantly, in recognition of the observation that  readers who are using screen access technology or for whom navigation is  difficult may not have time to familiarise themselves with the initial  page before the prescribed time period expires.    Incidentally, Lynx 2.8 treats this construct as though it were an ordinary  link and does not load the new page automatically, regardless of the  timing which the author has specified. Perhaps this issue should also be  brought to the attention of the user agent guidelines group.        

      What is the current status of the CSS 2 working draft? Is it substantially  complete, or are there still significant areas of CSS development that  will be incorporated into the document prior to its becoming a proposed  W3C recommendation?    An admittedly hurried perusal of the current draft indicates the  following:    1. ACSS has been included, thanks no doubt to the commendable efforts of  T.V. Raman and Chris Lilley.    2. The selection of elements based on generic attribute values is still  not possible; only CLASS and ID values are admitted as selectors.    3. Notes (including footnotes and end notes) are briefly mentioned in  section 20.3 (printing) as yet to be developed. Is it expected that such  work will be completed before CSS 2 becomes a standard? Without the actual  proposals, it is clearly not possible to assess the degree to which they  satisfy access requirements (in this instance, for example, the audio  treatment of notes; the braille requirements can be postponed for  consideration in the Braille CSS work).    4. I was unable to find any mention of section numbering or paragraph  numbering. Admittedly, my method of inquiry was somewhat primitive (using  a text searching programme in an attempt to find relevant key words), but  without success.    5. Media issues did not appear to be explicitly treated in the analysis of  cascading order. Is further clarification needed? Essentially, the  position should be that a style property which is qualified by a media  type (for example, via the @media construct in a style sheet) can not be  overridden by another style property unless the latter refers to the same  media type.        

      I agree with Judy. In the first place, I have never heard of TABs, and I  suspect that a high proportion of the world's literate population would be  in the same situation. Secondly, the guidelines would be better without  yet another, potentially confusing acronym. Finally, the concept of  "universal design", which can be easily explained, seems to encompass all  of the general principles and policy considerations which motivate this  group's work.        

      To answer Daniel's question more directly, the macro function fulfilled by  my hypothetical SPEAKROW and SPEAKCELL properties clearly needs to be  under the control of the document's author rather than merely the user,  and is therefore a style sheet issue. This is well illustrated by T.V.  Raman's original example: "Population in [cell1] was [cell2]", where the  variables enclosed in brackets refer to data cells. Such a combination of  fixed strings and table data could only be put together by the author,  since specific knowledge of the content of the table is required.  Similarly, the order in which the elements comprising a table are  presented to the user should also e available for the author to  manipulate. If the reader decides to browse the table interactively  instead of allowing the default or author-supplied reading order to take  effect, obviously the interactive navigation of the table is entirely a  function of the user agent; but it should be possible to present a table  adequately without requiring interactive browsing. This is why the author  should be given the opportunity to control the audio representation  through flexible and appropriate style properties.    An important principle is that W3C standards should not favour one medium  over any other; all media should be treated as worthy of full support.  Thus, it would be wrong to provide a full set of style facilities for the  screen and print media, and not to do likewise in the case of braille and  audio.        

      Further to Al's comment, extensions to the predefined list of media types,  including new base types and the addition of parameters to existing base  types, should be governed by the style language, and not by the HTML  specification. The parsing rules should be rewritten to omit all reference  to truncation of the media type value, and should instead make it clear  that parameters which follow the key word that designates the media type  are to be recognized to the extent that they are defined in the relevant  style language.    The media type should only be deemed to correspond with the capabilities  of the output device if all parameters specified in the media type are  recognized and found to match the properties of the output medium. To  state this point differently, partial matching of media types should be  prohibited, since parameters that follow a key word such as SCREEN, PRINT,  AURAL etc., are likely to act as qualifiers which restrict the range of  output devices to which the style sheet is applicable.        

      On Fri, 24 Oct 1997, [ISO-8859-1] Javier Roma?ach wrote:    > Hello all,  >   > This raises an interesting subject. What's the use of nice accesibility  > features if we don't use them (in this case because we never thought  > they existed)? How could we prevent this?   >   Those aspects of HTML 4.0 which are beneficial to accessibility should be  highlighted and discussed in the WAI markup guidelines, which will also  provide examples of their proper use.    For the present, the best solution is to read the HTML 4.0 specification  carefully, including the DTD.        

      Eric's formulation, suitably refined, would provide an appropriate  disclaimer to accompnay the document. Perhaps reference could also be  made, in general terms, to other WAI guideline activities in order to make  clear the division of subject matter as between the various documents  which are currently being prepared. I recognise that it may not be proper  to refer to guidelines which have not yet been completed, so perhaps the  scope could be clarified by indicating that issues pertaining to the  design of user interfaces (the UA work) and authoring tools, are not  directly within the purview of the page authoring guidelines, though it is  expected that authoring tools will produce compliant code, and that user  agents will provide the facilities necessary to enable people with diverse  needs to access the content, in the strict sense of the latter term which  Eric has rightly identified.         

      As Al has pointed out in a different context (see his WAI process paper),  the use of HTTP as the transport mechanism can not always be assumed. For  example, collections of HTML documents can reside on a local file system.  Perhaps one can state a general principle that the solution to an access  problem should generally be found within the same protocol or standard as  the feature which gives rise to difficulty in the first place. Thus, in  this instance, it is the availability of img and object elements within  HTML that refer to graphical resources, which leads to a legitimate demand  for long descriptions. Consequently, a solution should be included within  HTML itself, or perhaps within the image files. My understanding is that  there is no prescribed standard for image file formats that are to be used  on the web. If such a standard were developed, then it would be  appropriate to include textual descriptions within image files and allow  them to be transferred by HTTP independently of the graphical content.    Jason White.        

      I agree with most of Daniel's comments. Nevertheless, I would be disturbed  if reader's style sheets were mentioned in the spec but no mechanism was  provided through which readers could ensure that their accessibility  requirements are met, despite contrary rules in authors' style sheets.     The proposed !absolute; directive is very much along the lines of what I  suggested in my message yesterday. The one query which I have pertains to  its effect on specificity. For example, if the reader's style sheet  includes:     h2 { font-size: 18pt; !absolute; }    and the author's style sheet says:    h2.chapter { font-size: 14pt }    then what would be the font size of <h2 class="chapter" Chapter heading  </h2>    If specificity is a problem in this context, then I would propose that a  new control be defined (perhaps an exclamation point) which grants to the  rule that follows it priority over all other declarations that would  otherwise have greater specificity. For instance:    ! h2 { ... } /* This rule, in effect, has infinite specificity. */    In closing, I should add that although no user agents currently implement  the concept of a reader's style sheet, the fact that it is mentioned in  the spec suggests that the WAI would be taking an unnecessary risk with  potentially serious consequences were it not to insist on a mechanism for  ensuring that user's requirements are satisfied under such circumstances.  Also, if (as I seem to recall in the original proposal for XSL), the XSL  standard incorporates the concept of cascading, the same problem arises;  and of course, in XSL (given the complexity of the style sheets) it is  much more likely that readers' style sheets will exist. In fact, even if  many of the style options are selected by way of appropriate controls  within the user interface, the application may put them into effect by  creating a "reader's style sheet".        

      The guidelines should advise authors to include the HTML 4.0 LANG  attribute wherever the text departs from the principal language of the  document. This suggestion has already been discussed within the GL group  and was included in the central reference document, but appears to have  been omitted from the page author guidelines. To give a brief example:    <p>In <em lang="fr">Cours de Linguistique Générale</em>,  Saussure sets forth his influential theory of the sign.    Note that the title of the book is in French.        

      Daniel is right in suggesting that we are all in agreement, but have for  some reason been communicating at cross purposes. His explanation of the  role of the "media" attribute in style sheet selection is absolutely  correct. My question is whether, if braille style sheets are linked to a  document, there will be a need for different braille style sheets for  output devices with different page dimensions. Will it be necessary to  have one style sheet for an embosser with a short line length; another for  an embosser with a longer line length; yet another for a braille display,  etc.? If this is the case, then there is an advantage in including the  page dimensions in the MEDIA attribute so that the user agent can  automatically select, from a range of alternate braille style sheets, the  one that pertains to the particular output device in use.    I suppose this issue could be set aside until further braille style sheet  work has been undertaken. If we can reach consensus as to the desirability  of distinguishing style sheets intended to control formatting for braille  embossers and those which format documents for presentation via a  refreshable display, then we could propose:  media="braille embossed"  media="braille displayed"  and leave any further parameters to be decided upon once braille CSS has  been defined, and Dave Pawson has completed his work on braille DSSSL  style sheets.    What approach do you think would be best?        

      Since a significant proportion of authors/site administrators will be able  to implement the HTTP response header, it should be recommended as a  technique in the techniques document, along with the LANG attribute.        

      The main limitation of the "phonetic dictionary" approach is that it is  unable to accommodate homographs, which occur sometimes in English and  perhaps in other languages as well. Modern speech synthesis software, such  as recent versions of DECTALK, attempt to analyse sentences containing  homographs and to choose the correct pronunciation, but this is one area  in which phonetic markup could be useful. Would RDF make it possible to  control the pronunciation of a specific word within a particular sentence,  without affecting it in other contexts?        

      On Tue, 30 Sep 1997, MegaZone wrote:    > The question I see is what to do with non-labelled elements?  Would you  > not present them?  I think that is extreme.  Present all of the sequenced  > elements in the given order, then the non-sequenced elements in the order  > in which they appear in the document?  >   This is indeed a problem with the "sequence number" approach, and it is  one reason why I thought that, in general, a "tree transformation"  method would be preferable. It does not require each element to be  equipped with an ID value and can move entire classes of similar elements  by means of a single style property. Would the current HTML table  proposal, perhaps with the addition of an attribute to indicate the  "orientation" of the table, be sufficient, or is there a genuine need for  the ability to reorganise a table totally by means of ID values being  associated with each cell? I find it hard to envisage circumstances in  which such a complete reorganisation would be necessary, except where the  table markup is misused, and as mentioned earlier, such a practice should  not be tacitly endorsed by the WAI markup work.        

      The only unique aspect, so far as markup is concerned, is the mathematical  notation; and we have already devised solution strategies in this area,  namelY:    Interim: where images are used to convey mathematical content, provide an  equivalent markup notation (E.G. TeX) as alternative text.    2. Use MathML to represent mathematics.    These requirements can be absorbed into the existing guidelines. I agree  with Charles that what is needed is at most a checkpoint or two, and not a  separate guideline.    The second point, concerning alternative text, can be added as a  checkpoint to A1:    "Until the Mathematical Markup Language (MathML) is widely supported by  browsers, images, accompanied by alternative text, may be used to  represent mathematical content. In such cases, the ALT text should convey  the mathematical symbols using a human-readable markup notation, E.G.  TeX." (Priority 1).    Explanation of priority: the information will be inaccessible if the the  alternative text is not included.    Second suggestion, under guideline A14, provide either (1) an informative,  non-exhaustive list of W3C technologies: "Note: W3C technologies include  HTML, XML, CSS, XSL, MathML, Smil, etc.", or (2) a link to such an  informative list, maintained in the techniques document or elsewhere. The  list should include MathML just for the sake of reinforcing its  importance. It could even be included briefly in the statement of  guideline A14: "(E.G. HTML, CSS, XSL, XML, MathML, SMIL, etc.)".        

      Josh's suggested data base might be useful under some circumstances,  though it should not be part of the guidelines proper and would require  constant updating. I do not think there is need for pessimism at this  stage concerning the proper implementation of HTML 4.0 and CSS, since  by supporting these standards, W3C member organisations have made a  committed to complying with them. Furthermore, the motivation for doing so  will be increased by the normative value of the WAI user agent guidelines.  This kind of discussion would be more appropriate for the IG list,  however.        

      A web development tool known as Zope, which integrates a number of  products from Digital Creations, has recently been released to the public  (http://www.zope.org/), apparently under a licence that permits open  development under certain conditions. Besides providing a scripting  language and support for data bases, it appears to be more of a site  management tool than a web authoring package, with all transactions  conducted via the web. I am not sure how accessible this software is in  its own right, especially when used with text-based browsers. I have  written to the developers to affirm the importance of universal design in  this regard.    What is interesting to consider, however, would be the ways in which such  a tool could facilitate accessibility, even though it is not an  HTML/SGML/XML editor. One suggestion which I mentioned in my e-mail to the  developers was that an option could be integrated into the software that  would run an HTML validator (or perhaps even an evaluation tool such as  Bobby) when a document is submitted, and report errors.        

      On Mon, 13 Oct 1997, Al Gilman wrote:    > We are at pretty much of an impasse in the TABLES area.  I think  > that the AXIS, AXES proposal fails to meet minimum standards of  > functionality.  Dave doesn't see the problem.  >     I do not see the problem either. All of the sample tables which have been  considered so far can be made accessible by the inclusion of AXIS and AXES  attributes. In particular, the relationship between any given data cell  and an associated row or column header, whether the latter be contained in  a TH or TD element, can be expressed using the AXES attribute.    I agree that the proposed SCOPE attribute is beneficial in as much as it  reduces the amount of markup required in order to specify header  relationships, thereby relieving the author of the need to specify AXES  attributes repeatedly throughout the body of the table.    Furthermore, the flexibility to associate a table with an external  resource, such as a dictionary or extended description, is also desirable.    None of the discussion so far has convinced me that AXIS and AXES,  together with SCOPE, the capacity to link a table to external resources  and the availability of a reserved class value to specify column  dominance, would not meet accessibility requirements. Additional  enhancements, such as CSS macros of the kind that I have proposed for  controlling the reading order of a table, add further value to the HTML  features already discussed, but are not essential to accessibility.        

      One modification to HTTP which would benefit people with disabilities has  been suggested by Al Gilman and is documented on his web site:  http://www.access.digex.net/%7easgilman/web-access/perc_rfc.html.  Essentially, the proposal is that HTTP should be changed to allow the  title of an HTML document to be requested and retrieved independently of  the document itself. Thus, if the content of an anchor element is  an image, the client is text based, and no ALT attribute is provided, then  the title of the HTML document to which the link refers could be obtained  without having to transfer the entire file across the network. Although I  think this idea has merit, in that it offers a practical solution in cases  where authors have neglected to include alt attributes in img elements  which serve as links to other HTML documents, I would prefer that the alt  attribute itself be required and that authoring software adopt the  practice of prompting for a textual description whenever a reference to an  image is made.. I have sometimes wondered whether, by making the kind of  modification to HTTP that Al has suggested, one would be inadvertently  sending a signal to content providers that they do not need to be diligent  in ensuring that the alt attribute is used, since the HTTP change will  serve as a fall-back mechanism that text-based clients can rely upon in  any case.    Another issue which is also relevant here, is the practice of writing text  only pages, in circumstances in which the default (graphical) presentation  can not be readily modified so as to make it accessible. Firstly, I would  question whether, given the HTML 4.0 proposals relating to tables and  forms, there will be much need for "text only" alternative pages in the  future, particularly once the "screen reader" access paradigm has been  supplanted by the widespread availability of braille and audio clients  that have direct access to HTML and CSS content. However, if it is  considered that there will continue to be a substantial need for "text  only" pages, then it might be reasonable for a client to be able to  indicate to the server via HTTP that text only pages are to be provided,  if available.        

      I have not reviewed the guidelines to establish where these checkpoints  would best fit, but the following suggestions come to mind in respect of  mathematical content:    1. When browsers provide support for viewing and processing it, use MathML  to represent mathematical expressions occurring in a document.    2. Until MathML is supported by browsers, images may be used to represent  mathematical content, so long as alternative text providing an ASCII  representation of the mathematics is supplied.    In the Techniques document, an example could be given of the latter  method, adopting the ASCII representation used in Donald E. Knuth's TeX  typesetting system. Rationale: an ASCII version can be read by today's  assistive technologies. Query whether there are characters in Unicode that  could be used in ALT text to represent the mathematical symbols and  whether these would provide a better interim solution (I suspect that they  would not be supported by current assistive technologies and that we will  need to fall back upon straightforward ASCII as mentioned above).    The two proposed checkpoints are modeled on the provisions related to  style sheets and the legacy problem associated with the use of tables for  layout purposes.        

      The ISO HTML draft attempts to capture the essential core of the language,  excluding all of those features which are deprecated or which are likely  to become obsolete. I can't remember the URL that refers to this draft,  however.        

      In the GL charter, it is made clear that one purpose of the group is to  prepare usage guidelines for CSS. Now that CSS 2 has achieved the status  of a W3C proposed recommendation (http://www.w3.org/TR/PR-CSS2/), it may  be appropriate to start considering what types of guidelines are needed.  Some are obvious: for example that style sheet developers should, whenever  appropriate, ensure that their style rules are restricted to the media in  which they are relevant; relative lengths such as percentage values and  EM and EX units should be specified wherever appropriate so that the  author's style rules will be scaled correctly if the user has chosen a  large font size; the creation of an audio style sheet should be  considered, especially when designing a complex web site, etc.    Is it proposed that a separate document be written to provide CSS usage  suggestions, or will this be incorporated into the existing page author  guidelines?        

      Is it correct that there is SSL software available for Unix systems which  acts as a proxy server, thus allowing a user agent that does not support  SSL directly to complete a secure transaction?    Also, I have heard it said that in order to use SSL, it is necessary to  generate a certificate, and apparently this is difficult even if Lynx has  been compiled with the SSL software included. Unfortunately I can't  remember the source of this information and it might therefore be  inaccurate.    Needless to say, SSL is not a W3C standard. I suppose this ought not to  preclude our discussing it, at least to the extent that it has special  implications for people who use text-based user agents such as Lynx or  Emacs/W3.        

      On Mon, 28 Jul 1997, Dave Raggett wrote:    > Numbering is being worked on by the CSS & Formatting Properties  > working group. I don't think they are considering foot notes  > though.    The problem of notes in general (whether they be side notes, footnotes or  end notes) is both a markup issue and a style problem. There should be a  mechanism by which one can indicate the presence of a note and leave such  formatting details as the note marker (whether it be a number, an asterisk  or another character) and the positioning of the text of the note to be  controlled by style properties. I have not been able to find any element  for indicating the presence of a note in the "element index" of the HTML  4.0 draft. Perhaps one could use an empty anchor element for this purpose,  although this is obviously not an elegant solution:  <a name=txt1 href="#fn1" class="footnote"> </a> (and the style properties  would have to insert the note number into the text at that point).        

      What is the status of XSL development within the W3C. On the Consortium's  web site, I have found a draft note which sets out a proposal for XSL, but  it is stated to be a submission, implying no endorsement by the W3C, and  it does not constitute a working draft. What approach is being taken  toward XSL by the XML WG? Given Daniel's point that there is a price to be  paid for delaying CSS or rendering it more complex, a remark which echos  sentiments that T.V. Raman has wisely repeated on several occasions and  which are also consistent with Al's account of the CSS 2 meeting, it might  be preferable to concentrate the WAI effort on the development of XSL,  which would better accommodate the complex features required to generate  fully satisfactory braille and audio formatting. If XSL is compatible with  CSS, then some of the less sophisticated braille and audio features, if  proposed and accepted as part of the development of XSL, could then find  their way into future versions of CSS.     So far, the involvement of the WAI in the development of W3C standards  has, of necessity, been reactive rather than pro-active. By this I mean  that it has been limited to reviewing W3C standards (especially HTML 4.0  and CSS 2) at the draft stage and arguing for important modifications  which support the requirement for output in audio and to some extent  braille media. An equally important function, however, now that the WAI  and its International Programme Office have been fully established, is to  influence W3C standard development at an earlier stage of the process.  XSL, and to some extent also RDF and DOM, offer the opportunity to engage  in a more pro-active approach which attempts to ensure that requirements  defined by the WAI are taken into account as early as possible in the  development of standards.    For this reason, consideration should also be devoted to the question of  what features the WAI would wish to be included in the next version of  HTML after 4.0. Phonetic markup is one possible candidate; fully  hierarchical SELECT options are definitely on the agenda, but are there  other features as well that would be useful from the perspective of  braille and audio requirements?        

      Greg Lowney has rightly recognised the importance of providing a mechanism  by which specific structural components of a document can be presented in  a different order depending on the display medium. An important question  to consider is whether this purpose can best be achieved by an HTML  extension of the kind proposed, or whether the presentational order of a  document would be better controlled by style sheets. The CLASS and ID  attributes, together with the DIV container element can be used, as Greg  Lowney has noted, to identify various block-level components of the  document. The order in which they are to be displayed in different media,  however, could be specified by style sheets. I understand that there  already exists a draft style sheet specification dealing with the  positioning of elements, but which I have not had occasion to review in  detail. To what extent does this draft accommodate the need which Greg  Lowney has identified, and could it be readily extended, if necessary, to  support full control over the ordering of HTML block level elements, using  ID and CLASS as selectors in the manner already discussed?        

      The HTML 4.0 specification defines the content model of the MAP element  as:    <!ELEMENT MAP - - ((%block;)+ | AREA+)    On my interpretation, this means that MAP can contain either one or more  block-level elements, or one or more AREA elements, but not a mixture of  AREA and block-level elements. My understanding is that the SGML | symbol  represents an exclusive or, from which this conclusion follows  straightforwardly.    Thus, the implication appears to be that <map> <p> [navigational links]  </map>  would be valid, but as Daniel pointed out, there remains a question of  backward compatibility, which can be easily and quickly tested.        

      I interpreted the language of the specification differently. I understood  the statement that user agents must be able to parse the MEDIA attribute  in the manner described, coupled with the assertion that parameterized  values may be defined in a future version of HTML, as imposing a  requirement on user agents that conform to HTML 4.0 to follow the parsing  rules set forth in the specification. This would include the truncation of  each entry in the comma separated list of media types.    It is clear from what Al and Chris has said that such an interpretation  does not reflect the intention that underlies these provisions. I think  that the language of the specification needs to be clarified so as to make  it clear that a user agent which accepts parameterized media types will  nevertheless continue to be compliant with HTML 4.0 and that extensions to  existing types, as well as new types, may be defined by the W3C style  languages, or by a separate specification dealing with media types.    I hope these remarks serve to elucidate the nature of my concern and the  interpretation that has given rise to it.    The main point is to allow media types to be extended, and new types to be  defined, without requiring the HTML specification itself to be changed in  any way.        

      On Wed, 15 Oct 1997, Al Gilman wrote:  > The scenario by which I would expect that CSS does deal with the  > reading-order issue is one where the total text content is in the  > HTML in logical sequence with sub-ranges marked with SPAN or DIV.  > The stylsheet then places the individual sub-ranges of text in  > layout in a graphical presentation.  In this case the stylsheet  > is all presentation and the HTML communicates the logical units  > of text.  This is indeed the kind of scenario which I had principally in mind,  except that it should not be restricted to the use of SPAN and DIV  elements, but must extend to any container which can be selected on the  basis of a CLASS or ID value. CSS properties can then be defined that will  enable such units of text to be moved into other locations within the  document's structure.     >   > A second scenario would be one where the HTML contains a table,  > and fragments of one logical text are arranged in various cells  > in the table.  An audio stylesheet contains a directive which  > calls for the reading of several table cells in a particular  > order.  In this case, the sense of the text is not salvageable  > for dumping to line-mode interaction via TTD without the "audio"  > stylesheet which contains critical content information.  I think  > that this scenario puts information in the stylesheet that should  > have been captured in the base HTML document.  I agree. However, with the increasing availability of CSS, authors are  likely to turn toward style sheets and away from abuse of table constructs  as their principal formatting mechanism. Thus, one can expect this problem  to diminish in importance as style sheets achieve greater acceptance. We  should be careful not to entrench the abuse of tables by acknowledging it  in markup development, thereby running counter to the aims of the entire  HTML standardisation process.        

      Although I agree with the general principles behind Alan's thinking in  this area, and appreciate the clarifications which he offers, it remains  to be shown that the benefits of the trick which he suggests would outway  its disadvantages. For example, the non-breaking spaces could cause havoc  in the braille formatting of a document, given the typical maximum line  length of 40 characters. So far as the advantages are concerned, the  proper formatting of tables in Lynx would indeed be helpful to braille  display users, but of limited benefit to those relying upon speech  synthesizers, since the spatial aspects of the document can not be  conveyed by a screen reader in an intelligible fashion. Of course, the  reader might resort to counting spaces and locating columns manually,  using the review functions offered by the screen reader, but I doubt that  many readers would be inclined to do so.    Consequently, I think this is one deficiency, limited to only a single  browser, which should not be compensated for in the guidelines. Indeed, as  I remember, problems specific to only one browser were ruled out of  consideration at an earlier stage of guideline development when it was  proposed that tricks should be introduced to avoid certain shortcomings  associated with the handling of TITLE and ALT by Microsoft's browser. A  trick concerned with the treatment of TR and TD elements by Lynx was also  rejected on similar grounds.        

      On Sat, 11 Apr 1998, Liam Quinn wrote:    > Section 1.1 requires that authors "Use elements that comply with the strict  > HTML 4.0 Definition".  The wording is a bit odd here in that one could  > interpret it to mean that HTML 4.0 Strict elements have to be used but  > attributes have no such restriction.  I assume the intention is to require  > valid, HTML 4.0 Strict documents, which I think is unrealistic.      This is only true in the short term. Perhaps the guideline should state  that a valid HTML 4.0 transitional or frameset document is required, but  it is recommended that authors comply with the HTML 4.0 strict DTD.        

      I am concerned, and have been so for some time, that a certain proportion  of HTML authors will not take seriously the strict definition of the  "required" category in the guidelines. They may, therefore, choose to  implement all of the items which are marked as required, ignore the rest,  and then claim that their web sites are accessible.    It is time to set aside the two-level classification scheme as an  over-simplification, or at least to broaden the definition of "required"  somewhat to include those guidelines which, if not followed, would make  the document so difficult to access by certain groups of readers as to be  practically unusable.    What comments have been received so far, from web site maintainers who  have sought to apply the guidelines, concerning the classification scheme?    I agree that a note could be added to certain of the guidelines,  indicating that its status is likely to change in the future, for instance  from "recommended" to "required".    For the reasons enunciated above, I have never been fully comfortable with  the two-level classification system.        

      The proposal for using anchor elements is undoubtedly superior and I would  support it. However, they may be one potential problem. Admittedly, I have  not found time to read the entire CSS specification, but the initial  sections of that document indicate that only class and id attributes can  be used as selectors, not rel and rev attributes. Since it would be  desirable to be able to apply special speech or braille styles to anchor  elements that designate page numbers as distinct from other occurrences of  anchors, it may be necessary to use the class attribute in addition to, or  in place of, the rev and rel attributes. Another possibility would be to  modify CSS syntax to enable rev and rel attributes to act as selectors. I  apologize in advance if these remarks are mistaken, since I really should  have read all of the CSS documents before commenting.    Jason White.        

      On Wed, 23 Jul 1997, Gregg Vanderheiden wrote:    > The longdesc COULD point to text lower on the same page...  or to a  > separate page.   >   This is correct. However, in most cases, a separate page would probably be  required, since presumably most users who do not wish to read the long  description would not appreciate its being included as part of the  document. Perhaps if it appeared at the end of the text, under its own  heading, those who chose not to read the description could readily ignore  it. One solution might be to create a separate document which contains  long descriptions of images that appear at a particular web site or in a  particular directory. Each such description could be named and referred to  in LONGDESC attributes by means of an URL fragment:  longdesc="http://www.somewhere.org/descriptions.html#description3"        

      I am somewhat ignorant of image file formats. Do those formats which are  in use today allow for a header, containing a descriptive title, to  precede the graphical data? I remember having read that W3C was working on  the development of image formats, so this issue could be raised in that  context. Now as is pointed out in RFC1866, it is expected that the client  will retrieve an image file referenced by an img element automatically,  without user intervention. This could easily be extended to an HTTP  request for the header containing the description. Furthermore, the  header could include, among others, the following two components: (1) a  title for the image; (2) an optional long description of the image.    The same scheme could also be applied to audio resources.    A fully concur with Daniel's misgivings regarding "text only" pages: there  should only be a single HTML document, which contains all of the necessary  semantic content in a form that is independent of presentation. In the WAI  briefing package, it was said that there is a need for web page  simplification, namely, techniques for reducing the complexity of web  pages. Although this could be accomplished by the server in response to an  HTTP request (assuming the necessary extensions to HTTP), it would be  better, I think, to conduct any needed transformations on the client side  by means of style sheets.        

      On Fri, 19 Dec 1997, Daniel Dardailler wrote:    > The question we need to ask is whether or not we want to have a  > version of the guidelines that's specific to the HTML4 spec.  >     JW:: The structure of the guidelines has already been designed to parallel  that of the HTML 4.0 spec, so in that sense the two are already in a close  relationship. What I am thinking is that a reader of the guidelines who is  also in the process of learning HTML may appreciate being reminded, by  following links provided in the HTML page authoring guidelines, of crucial  element and attribute definitions, examples of usage, etc., which are  given in the HTML 4.0 spec.         

      I fail to appreciate what relationship this topic has to the Web  Accessibility Initiative, or how it can be regarded as being of special  significance to people with disabilities as contrasted with the community  of web users at large. I would respectfully suggest that this thread ought  to be moved to a more appropriate forum. I am sure that there is at least  one public mailing list devoted to PICS and related issues.        

      The basic requirement should be that all information be represented  textually. This includes descriptions of audio/visual content. Some people  have both visual and hearing disabilities and would thus need to access  the document via tactile means alone (namely a braille display). Their  needs are not adequately taken into account in a formulation that requires  content to be presented visually and auditorily.        

      My suggestion all along has been:    media="braille embossed" (for braille embossed on paper)  and  media="braille displayed" for dynamic braille.    I would object to media="braille print", since it could easily be  construed as referring to "simulated braille", that is, a situation in  which braille dot patterns are printed using an ordinary printer, so that  they can be read visually by a print reader who is learning braille.    I would be willing to substitute "braille dynamic" for "braille  displayed", but the other type should be "braille embossed".        

      Al's META and LINK enhancements are intended to enable the logical order  of a document's contents to be preserved in circumstances in which the  successive blocks of text are not contiguous in the HTML file. This should  allow the correct reading order to be marked up, even if the author has  used tables to control the visual layout of the document. Of course, such  abuse of table markup should be discontinued in favour of style sheets,  which offer a much better means of specifying visual presentation, and are  in complete conformity with the semantics of HTML.    Al's linking proposal also enables external resources, including  descriptive text, to be associated with tables and other elements of the  document.    I doubt that the TITLE attribute of the DIV element is likely to be  misused. Consequently there is no need for ALT (or a comparable attribute)  to be added to DIV, and the same reasoning applies to LONGDESC, given Al's  linking proposal as already discussed.    I agree with Dave Raggett's observation that screen readers are becoming  increasingly anachronistic and should not be considered as the paradigm of  accessibility on the basis of which HTML design decisions are to be made.  Backward compatibility is no doubt desirable, but not at the expense of an  efficient, long-lasting design. The WAI should not introduce features into  HTML which are likely soon to be rendered obsolete as screen readers are  dispensed with in favour of genuine braille and audio formatting software,  which has access to both markup and style sheets.    I think that the current proposals achieve an appropriate balance between  backward compatibility and future-oriented thinking. LONGDESC is probably  the best example of this approach, as is Al's linking proposal to the  extent that it is intended to remedy the access problems which result from  the abuse of table markup.        

      On Mon, 21 Jul 1997, Daniel Dardailler wrote:    >   > I agree, and wonder how close we are with the text included in the  > Trace unified guidelines at:  >   http://www.trace.wisc.edu/text/guidelns/htmlgide/htmlgide.htm#graphics.imaps  >     Thank you for the reference. The Trace recommendations on this point are  excellent, and I fully support the policy of emphasising client-side image  maps as the preferred approach. The only change that I would suggest,  taking up one of Al's earlier comments, is that in some cases it may be  important to provide a link to an over-all description of the image as  well as ALT text for each of the active areas. For instance, in the  example provided in the guidelines concerning the image of a motorcycle,  it would be helpful to have a general description of the vehicle as well  as ALT text associated with each link.         

      I appreciate the rationale motivating this proposal. The only disadvantage  is that it makes the relative importance of each of the principles  enunciated in the guidelines explicitly dependent on that part of the  document which is most subject to change, namely the techniques. As Gregg  recognises, this is the case already, since the priority assigned to each  guideline is determined by the highest priority level among its associated  techniques.    It would be helpful to find a means of expressing the relative priorities  of the stable principles of universal design which the guidelines  themselves are supposed to embody.    No solutions come to mind, however.        

      On Thu, 31 Jul 1997, Dave Raggett wrote:  > But in the case of notes, isn't it ok to use:  >   >   <p class=note>this is a note  >   > or perhaps  >   >   <div class=node>...  >     This approach should be feasible, provided that several problems can be  resolved. Firstly, in the case of footnotes or end notes, there is a  reference mark, whether it be a number, a letter, an asterisk or another  character, which appears at a particular point in the text to refer to the  note. A means of automatically generating these markers (for example, by  automatically numbering footnotes) should be provided. This would probably  be more important when documents are printed, since in that case the  standard layout of pages (with footnotes or end notes) should be retained.  The problem is what to place inside the content of the anchor which refers  to the note, if automatic numbering is desired. This would presumably need  to be accomplished by a combination of markup and style sheet mechanisms.    Secondly, style sheet properties should be defined to control the  placement of notes.        

      An important correction to what I just wrote is as follows. With regard to  the "logo" example, a brief description of the logo is appropriate on the  home page (here the purpose is primarily to acquaint visitors to the site  of the organisation's logo). On subsequent pages, just the name of the  organisation would suffice.        

      The most important consideration here is that the use of tables purely for  purposes of layout is contrary to the intention of the HTML specification  and ought to be strongly discouraged in favour of style sheet positioning,  as soon as the latter is supported by user agents. This is why the  guidelines have been carefully expressed to make it clear that "layout  tables" are only permitted on an interim basis, pending the implementation  of CSS 2 positioning. A table prescribes a relationship between a set of  header cells and a set of data cells, thereby grouping related data into  categories. This is the assumption which underlies the attributes that  were added to HTML 4.0 so as to provide for speech output and better data  base integration (HEADERS, SCOPE, AXIS, SUMMARY, etc.).    For this reason I would not regard it as appropriate to offer any further  support within user agents or otherwise, for the misuse of table  constructs. Authoring tool developers in particular need to ensure that  their products generate appropriate CSS positioning rules. I think the  user agents will support positioning first, with the authoring tools  following closely behind.    Perhaps the guidelines should make it clearer that the misuse of tables  for layout purposes amounts to poor design practice and is problematic  from the standpoint of accessibility, when considered in relation to  today's HTML user agents. On the other hand, given the ability to  manipulate and selectively deactivate style sheets at the client end, the  proper use of positioning would allow the layout to be adjusted (the text  would be linearized and formatted according to the HTML elements used).    Perhaps thiese issues could be more fully addressed in the Techniques  document.        

      On Wed, 16 Jul 1997, Daniel Dardailler wrote:    >   > I'm told section numbering is under discussion or CSS2.  >   > Jason, could you elaborate on the Braille CSS relationship wrt  > numbering.   >   By outlining in this context, I mean the ability to generate automatically  the numbers and letters which identify items in multiple-level outlines.  The user should be able to specify the type of numbering format that would  be associated with each hierarchical level in, for example, a nested  series of ordered lists. An example of this functionality is to be found  in Word-Perfect, which allows the user to specify the numbering style for  each outline level: (arabic numbers, Roman numerals, uppercase or  lowercase letters, decimals such as 1.1, 1.2, 1.1.1, 1.1.2, etc.). Given  the limited length of the braille line, it would be helpful if such  formatting techniques were available in CSS, since they could then be used  instead of relying only upon indentation to distinguish different levels  in the hierarchy.        

      On Tue, 22 Jul 1997, Jon Gunderson wrote:    > Is the LONGDESC attribute a URL or an embedded text string?  Or could it be  > either and the the browser can figure it out?    The value of ALT is a text string; the value of LONGDESC is an URL which  refers to a detailed description of the image. It is anticipated that many  images will not require long descriptions. However, for those which do,  ALT and LONGDESC would be used together within the IMG start tag. It would  be the responsibility of the HTML user agent, guided by any applicable  styles, to render the LONGDESC attribute appropriately and to distinguish  it from other links so that the user is aware that it refers to a long  description.    <img src="http://www.somewhere.org/figure1.png" alt="figure 1"  longdesc="http://www.somewhere.org/figure1-description.html">        

      As a footnote to Charles McCathie-Nevile's excellent treatment of this  topic, in addition to providing a generic HTML version of the interactive  application which relies on server-side scripts, it has been suggested  that the interactive applications themselves be made directly accessible  in accordance with the user interface design considerations developed in  the User Agent guidelines. Unfortunately, as detailed discussion  (amounting to almost two teleconferences, as I recall) demonstrated, there  is little concrete guidance that can be given in this respect until the  scripting languages, the DOM and user interface technologies have been  sufficiently developed to allow accessible scripts to be created easily.    Further details can be found in the minutes of GL teleconferences under  the general heading of "dynamic HTML".    In short I think this topic has received exhaustive coverage, so far as  circumstances permit, in the context of the guidelines. The techniques  document should be expanded to cover it in greater detail as the  technology evolves over the next several years, and helpful insight may  also be gleaned, as already mentioned, from the user agent guidelines.        

      On Mon, 15 Sep 1997, Gregg Vanderheiden wrote:    > One way would be to put the D-Link as the alt text to an invisible graphic.   >   then it would only show up when graphics were turned off ---- but   > unfortunately you would have a second graphic marker......  How would today's browsers react to the following?    <a href="description.html" class=longdesc> <img src="" alt="[D]"> </a>    It should be noted that SRC is rightly marked as REQUIRED in the published  HTML 4.0 DTD. Would a null value be detected as an error by validation  software, and how would user agents respond to it?    Although LONGDESC is more elegant and versatile than the above solution,  there is nonetheless merit in having all of the possibilities available  for comparative evaluation as the discussion proceeds.        

      On Wed, 28 Jan 1998, Liam Quinn wrote:    > I think using HTML's CODE element inside the PRE element would be better   > than reliance on classes in this case since CODE gives the structural   > information to all early browsers.  Authors could use the CLASS attribute   > on CODE to indicate the kind of code, e.g., class="HTML" or class="Java".    > Speech browsers could then process common kinds of code more   > appropriately.    JW:: Without re-reading the HTML specification on this point, I am under  the impression that any markup inside the PRE element (prior to the end  tag of PRE itself) is treated as part of the preformatted text rather than  as markup. My memory may be wrong here, however. If I am right, then using  the CLASS attribute of the PRE element to distinguish code from text in a  natural language would appear to be the only feasible option.        

      Having considered the various ideas which have been set forth during the  past few weeks, it seems clear that little advance has been made upon the  current HTML 4.0 draft. As I think all participants agree, AXIS and AXES  should remain the basis of table accessibility. Al has indicated that it  may be necessary to offer a mechanism for encoding the semantic  relationships among data cells, which extends beyond the capabilities of  the AXES attribute as currently defined. However, neither Al nor any other  WG participant has yet produced a convincing example of how such coding  would improve the audio rendering of a table, and thus the case for it has  not been convincingly made out.    It has also been suggested that CLASS values be reserved by which the  author can indicate to a user agent whether a table is to be read, by  default, across the rows or down the columns.    I have also suggested that there is a need to define CSS properties that  could control the reading order of a table. The details of this proposal  can be decided upon later, since at present it is the HTML 4.0  specification with which we are primarily concerned.        

      I am also subscribed to the uaccess-l list, and have noticed that Daniel's  message in response to the ALT content issue did not appear in that forum  at all, even though uaccess-l was included on the "cc" line. Presumably  uaccess-l only accepts submissions from subscribers, and this is one  reason why cross-posting often fails.    If I raise questions on other mailing lists and mention that they arise  from my participation in the WAI process, then I am likely to receive  inquiries and requests for further information, perhaps even from  potential participants. What would be the best approach in such  circumstances? Would it be best to advise people to contact Daniel  Dardailler for further information, or give them the URL for the WG list  archives, or take some other action? Perhaps there should be a web page  for potential participants which would provide an indication of the scope  and nature of the WAI working group, and give appropriate advice as to how  to become involved.        

      I noticed in Al's discussion points relating to the media type issue, a  suggestion that braille displays could be treated as terminal or TTY  output devices. This is only true in the most primitive applications in  in which a braille display is being used effectively as a screen reader;  computer braille codes are used to give an exact, one to one  correspondence between each character on the screen and a braille cell.  However, such an approach is extremely inefficient, and most braille  readers prefer to use the standard braille codes (for literary text,  mathematics etc.) which have been defined by various national and  international bodies. This often involves a system of contractions and  other conventions that are unique to braille. Furthermore, the formatting  of a document so that it will be optimally presented on a braille display  is essentially different from the presentation that would be appropriate  to an 80 character by 24 line terminal device.    I hope that Al was not suggesting that the media type of BRAILLE be  abandoned in favour of TTY.        

      The basic approach to media types which Al has developed, and which I have  championed, is outlined at  http://lists.w3.org/Archives/Public/w3c-wai-hc/0061.html    Within the context of that general approach, I would recommend that a  media type for braille (media="braille") be reserved as a base type; this  is indeed the current position as reflected in the HTML 4.0 draft.    The question of whether any TTY styles or style sheets would be relevant  to braille devices, in spite of the formatting differences between braille  and character-based terminals, is a question that should be left for later  consideration by the Formats and Protocols working group.    I have been discussing with Al by private e-mail some of the disanalogies  between TTY and braille formatting. These are concerned principally with  the effects of contractions and hyphenation, the use of different braille  codes depending upon which country's braille standard is in use (and this  is not equivalent to a change in language or character set), etc.    Another difference lies in the primacy which is rightly given to  considerations of space conservation in braille formatting conventions.  Blank lines are normally suppressed; indentation is normally limited to  two characters per level of indent, etc.        

      I understood our position to be that media types, including additional  base types and extensions to existing types, should be able to evolve  without requiring changes to the HTML specification. With this objective  in mind, the October 17 draft of HTML 4.0 is still problematic.    Quoting the relevant passage:              Future versions of HTML may introduce new values and may allow            parameterized values.  [This development should not be dependent on future versions of HTML. The  entire purpose of our proposal, as I understand it, is to make the  definition of media types independent of the HTML specification.]     To facilitate the introduction of these            extensions, user agents conforming to this specification must            be able to parse the media attribute value as follows:                       1. Comma characters (Unicode decimal 44) are used to break the              media attribute value into a list of entries, e.g.:    media="screen, 3d-glasses, print and resolution > 90dpi"              is mapped to:    "screen"  "3d-glasses"  "print and resolution > 90dpi"           2. Each entry is truncated just before the first character that              isn't a US ASCII letter [a-zA-Z] (Unicode decimal 65-90,              97-122), numeric digit [0-9] (Unicode hex 30-39), or hyphen              (45).  [Here is the problem. It is only a minimally conforming user agent which  should truncate each entry in this way, and restrict itself to the  predefined list of media types. It should be possible for user agents to  process and act on the additional parameters without violating the HTML  specification.]     In the example, this gives:    "screen"  "3d-glasses"  "print"           3. A case-sensitive match is then made with the set of media              types defined above. Entries that don't match should [changed  to "may", pursuent to Dave's amendment] be              ignored. In the example we are left with screen and print.    When Al and I were discussing this issue a few weeks ago, we raised the  possibility that media types would be defined by the currently active  style language (E.G. CSS). Thus, any media type containing parameters or  an unrecognised base type, would in effect be sent to the style sheet  handler for processing. This approach seems flawed, in that some style  languages may not support the notion of a media type.    Perhaps it would be better for media types to be developed in a separate  specification, as Daniel has been suggesting. In that case, we need to  make it clear that the truncation is not mandatory but only required of a  minimally conforming user agent, and that additional parameters (following  the base type name ans preceding the comma) may be recognised, as well as  new base types. The statement that future versions of HTML may define  extensions to media types also needs to be changed, since it is our  intention that the definition of media types should not be a function of  the HTML specification.    I am sure that we can arrive at a mutually satisfying approach to this  issue.        

      I agree completely with Al's comments. For the present, if item numbers  are desired, the best solution is to take advantage of the OL element. CSS  numbering should allow the user's default style sheet to number UL  elements automatically if desired.    CSS also allows audio cues to be associated with list items (LI elements),  thus overcoming any difficulties that readers may experience in  identifying the beginning of each item. Of course, authors need to use the  correct markup, and it is the purpose of the guidelines to encourage them  to do so.        

      I think that the question of which country's braille codes to use should  be decided by the user and the braille translation software, and that  style sheets should merely indicate when to change into, for example,  computer notation, the mathematics code, etc. The whole issue requires  further consideration however. Joe Sullivan has suggested the notion of a  basic jurisdiction, defined by the translation software, which would  specify for example that UK or US braille standards were to be used. If  part of the text were then written in French or German, the UK or US rules  for transcribing French or German in an English context would then be  applied.    I do not think these issues should be taken into account in defining the  braille media type, although parameters concerning the dimensions of the  braille device would be more important, since style sheets control the  line and page formatting and therefore the actual dimensions of the output  medium may be crucially significant.        

      On Mon, 8 Mar 1999, Charles Oppermann wrote:    > > A.1.3 Anything about the fact that you have to use TITLE on AREA to work  > > with IE4 or IE5? It is very unfortunate, and really the fault of IE, but  > > pages only using ALT as these guidelines recommend will not be accessible  > > with IE, whereas if the page used both ALT and TITLE it would be  > > accessible with all browsers. I recognize that that would be adding a hack  > > to work around a flaw in a specific browser, so may not be appropriate,  > > but certainly Microsoft's version of these guidelines would have to  > > recommend authors use both.  Such a change would be altogether unacceptable for the reason cited: its  purpose would simply be to avoid a design flaw in a specific browser.  Since version 5 has not been released yet, Microsoft still has time in  which to correct the problem instead of trying to encourage authors to  compensate for it; energies would be better directed toward fixing the  design fault. Also, there should be no "Microsoft version" of these  guidelines. They are a W3C document and, as such, intended to be  definitive of a recommendation. It would be inappropriate for any  organisation to produce modified versions.    > > A.6.1 Using Hx tags correctly to convey structure is important, but  > > nesting them correctly is not in my opinion. I'd say Pri 3. Can you  > > justify why this is higher priority?   Certainly. If a user agent, such as a speaking web browser (via the DOM  for instance) provides structural navigation of the document, then it  becomes possible for the reader to traverse the tree structure directly in  order to locate sections of interest. If headings are properly nested,  then level n +1 headings will always appear below level n headings in the  tree, thus providing the correct document structure for navigational  purposes. It would thus be inappropriate at best, and confusing at worst,  for, to take an example, a subsection heading to appear above a section  heading in the hierarchy when structural navigation is being used.    > > A.6.2 Using OL and UL is Pri 3--it does not provide access, only makes it  > > easier. After all, who's to say what lists cross the line from where it's  > > ok to put them in a sentence, say, or as multiple sequential paragraphs,  > > instead of as bulleted lists. That seems to intrude on editorial decisions  > > and so should be recommendation only.  As discussed on this list recently, lists are very useful navigation aids  and are of particular benefit when the document is transformed into  braille or auditory media, assist in structural navigation, and generally  make it easier to comprehend the document. For these reasons they are an  important tool of document design, and this is recognised in the  guidelines.  > > A.6.3 In discussing this with our Web team, I recommend that it is higher  > > priority to make sure that pages can be used when style sheets are turned  > > off than it is to avoid abusing BLOCKQUOTE. Therefore if it's important  > > that a paragraph be set off (e.g. indented) I'd use BLOCKQUOTE instead of  > > relying on style sheets. What aids or other tools would be adversely  > > affected in real life by this? (Remember, these guidelines are about  > > improving accessibility, not enforcing W3C recommendations in general.)  I disagree with the remarks concerning BLOCKQUOTE. If this element is used  inappropriately, then a speaking browser, a braille translator, etc., will  treat the enclosed text as a quotation, thus providing the reader with an  inaccurate understanding of the document's content. Also, the use of  BLOCKQUOTE for purposes of indentation violates the separation of content  and presentation. This, indeed, is the more fundamental issue, and leads  directly to inappropriate presentation in different media (my web browser,  for instance, uses a different voice to indicate quoted text, and there is  no way of distinguishing, if BLOCKQUOTE is used wrongly, between a genuine  quotation and indented text, without making potentially dubious  assumptions concerning the structure of the document).As for the claim  that the guidelines should not require compliance with W3C  recommendations, it would be inconsistent with their status as a W3C  document were they not to do so. W3C recommendations are intended to  enhance interoperability: the compatibility of the web across the entire  range of hardware and software environments that may be available. Given  the different types of input and output devices, operating systems and  user agents that a person with a disability may be using, interoperability  as facilitated by W3C recommendations is even more relevant to access for  people with disabilities than it is to the population of web users in  general. Thus, these guidelines should be consistent with, and where  possible supportive of, other W3C specifications.    I shall comment on the remaining aspects of these suggestions as the  discussion progresses.        

      A further note regarding my SPEAKROW and SPEAKCELL proposal:    It is intended to supersede the ACSS table properties for the speaking of  headers and cell contents which are defined in section 17.9 of the current  CSS draft. One feature of that draft which I would like to include in my  proposal is the ability to suppress the speaking of a subsequent header if  it is the same as the header of the previous cell. Perhaps this  functionality could be grouped with the parameter for specifying row or  column dominance, into a single property. If column dominance is selected,  SPEAKROW would not be used. Perhaps one could define a property such as:    speakcolumn: [same parameters as SPEAKROW, except that the numbers 1-n  refer to cells in the current column]    I would also like to change my proposed definition of the CELLS variable:  instead of using "n" as the variable which refers to the last cell in the  row, use an asterisk. Thus:  cells(1-*) refers to all of the cells in the row in the order in which  they appear in the HTML source.  cells(*-1) is the reverse of the reading order, and so on.    This change makes the proposal more language neutral and clarifies the  fact that the variable which refers to the last cell in the row is meant  to appear in the actual parameter itself and is not just a variable that I  am creating for the purpose of exposition.        

      Having re-read Charles' comments, I would be willing to agree with the  proposal to include mention of MathML in the introduction to Section A,  rather than in A14 as discussed in my previous message. Either approach  would be fine.        

      In relation to guideline 13:    1. Despite insistance by Charles McCathie-Nevile and myself that authors  comply with document type definitions as provided in W3C specifications,  this requirement seems to have disappeared from the guidelines as some  stage during the long revision history of the document. While guideline 13  refers to using W3C technologies according to specification, the  requirement for valid DTD compliance, which used to be given in a  checkpoint as I recall, is no longer there; and nor is it mentioned in the  Techniques document. This omission ought to be rectified.    2. Checkpoint 13.2? mandates avoidance of deprecated language features. I  would suggest removing the qualifying words "whenever possible" from this  checkpoint, as it is in principle always possible to avoid such deprecated  features. I would also recommend considering in which other contexts  qualifications such s "whenever possible", which tend to eroide the  importance of the checkpoint, can be removed; the priority is reflected in  the rating of the checkpoint (P1, P2 or P3) and it is unnecessary to add  unnecessary confusion by further limiting the requirement with such  ambiguous qualifications. More specifically, the expression "whenever  possible" implies that the author is to make a judgment as to whether a  particular feature is widely enough supported, or whether the results of  applying the suggested technique would have sufficiently significant  backward compatibility problems to warrant non-compliance with the  checkpoint. These considerations should be made explicit, as has been done  elsewhere in the guidelines with regard to tables, frames etc., instead of  using a generic phrase such as "whenever possible", which implies that an  author can take an indeterminate range of considerations into account in  choosing whether or not to apply a technique, this being altogether  contrary to the aim of the priority ratings, which are to be judged  entirely on the basis of impact (the degree to which an accessibility  barrier results) rather than on convenience for the author, backward  compatibility, expense, or other such factors. The same comments apply to  checkpoint 13.1 and probably also to other uses of the "whenever possible"  exemption.        

      Longdesc could act either as a link which must be activated by the user,  or as an automatic process, similar to IMG itself, whereby the description  is imported into the document without having to be explicitly requested.  Perhaps both alternatives could be made available, thus offering the user  a choice. A closely related concern, which has not been addressed so far,  is the compatibility of LONGDESC with CSS 2 selectors. Daniel has also  proposed modifications to HTML that would permit a proper textual  substitute to be given for an image map, rather than merely a list of  links and a reference to a long description.    As an aside, I often wonder whether the term "long description" can be  misleading. What is needed, in many cases, is not a description of what is  depicted in an image, but text which conveys the same information without  referring to the graphical representation.        

      Has it been decided whether this group should recommend that link types be  reserved for phonetic and abbreviation dictionaries?    This is a separate issue from Al's LINK and META proposals, though the two  are of course related. If descriptions of tables and other components of  the document are also needed, as discussion on the IG list indicates, then  a link type would need to be set aside for this purpose as well.    My personal opinion is that these issues should be left for future  consideration as part of the WAI Formats and Protocols activity. Those  link types (and class types) which prove to be useful can be described in  WAI markup guidelines and incorporated into a future version of the HTML  specification if desired.    Perhaps media types, link types and standardised class names should all be  treated in a separate W3C specification, which could serve as an addendum  to the HTML and CSS specifications.        

      Al has made a good point, but I would maintain that it can be accommodated  without unduly restricting the user's freedom to choose the means by which  he or she wishes the long description to be rendered. The navigational  aspects of LONGDESC should be handled exclusively by the user agent. For  example, if LONGDESC is treated as a link, the user agent should prompt  the user to press a particular key in order to return to the underlying  HTML document. This should not be the responsibility of the author of the  long description. If a long description contains a title followed by the  text of the description, then it can just as easily be read as part of the  document or accessed via a link, provided in the former case that the user  agent signals the start and end of the dLONGDESC resource, for instance  with an audio cue.    Of course, long descriptions should be indicated in a way that  distinguishes them from ordinary links; but the details should be left to  the discretion of the user agent developer. All that the author needs to  provide is an HTML document containing a title (which is obligatory in any  event) and a text which, if read as part of the principal document at the  point where the image appears, would convey the same content as the image  itself, bearing in mind the purpose of the graphical resource and the  context of the principal document.  For image maps, the only assumption that need be made is that the ALT text  associated with each active region can be conveniently read by the user,  before or after reading the long description.        

      For the benefit of those reading the archives, the original message to  which this is a reply was sent to the IG list rather than the GL list.  On Thu, 5 Feb 1998, Alan J. Flavell wrote:    > The principle from which I have proceeded is that the ALT text is  > literally "alternative text", i.e it provides a textual substitute for the  > _information_ or _purpose_ of the image.  There are other attributes  > (TITLE and, now, LONGDESC) available for other purposes such as  > _describing_ the image.     This is indeed precisely the principle which I have been advocating in  this working group for some time, and which I understand to have been  accepted as a broad position of concensus.  >   > At:  >   > "Provide alternative text for all images and image maps."  >   > it says:  >   > "Each image should have alternative text that describes the function of  > the graphic"  >   > I disagree.  What is wanted is not a _description_ of the function, but  > the function itself.  Of the examples given, "Section Title: Banana  > Products,"  and "Search Button." seem fine, but "Graph of population  > versus age," is _no_ alternative text presentation of the _information_.   > Rather, this would be more appropriate IMO as the TITLE attribute.  What  > the text mode reader needs to know is not _that_ there is a graph present,  > but what the heck does the graph show that is relevant to the topic under  > discussion?  If the text already makes that clear, then maybe ALT="" is  > appropriate.  Surely, calling the text-mode reader's attention to a graph  > that they can't read, while telling them nothing about what information it  > contains, is worse than useless?    I partially agree. The ALT text, however, is appropriate in that it both  identifies the presence of the graphic and indicates the nature of its  contents. However, it would be inadequate unless accompanied by a long  description, which would convey the detailed information presented in the  graph, for instance by means of a table or by a description of the graph.  In an educational setting in particular, or if a person with a disability  is discussing the information with her/his colleagues who are viewing the  graph, it is helpful to know at least which axis is used to express which  variable.    The example should be modified to include the LONGDESC attribute.     > > And  in the "possible strategies", again we have a  description  of > information, instead of the information itself.  <IMG src="logo.gif"   > alt="XYZ Logo"> cannot possibly be right, in my view.  If the logo is  > there in order to identify the company, then the name of the company would  > be appropriate, e.g ALT="XYZ Corp", whereas if the company name is already  > present in clear text, then ALT="" would seem more appropriate, unless  > their logo is somehow pertinent to the topic under discussion, rather  > than mere identification.  The question here is whether it is important for the reader to know that  there is a logo present at this point in the document, as well as the name  of the company. The best solution to this problem would actually identify  both the name of the organisation and indicate the signifiance of the  logo. For an excellent example, see http://www.srl.rmit.edu.au   >   > With a little thought it's possible to choose ALT texts such that the text  > reads naturally, and the text-mode reader is scarcely aware of the  > "seams". Pages that have been composed "by rote", putting ALT="XYZ logo"   > whenever the logo occurs, tend to read idiotically on a text mode  > browser.  Almost as bad as those that have ALT="large red bullet" etc.  I agree. The logo is best described perhaps only once, on the home page.  Thereafter, it could be treated as decorative and receive a null ALT  value.    > I would rather say "The ALT text should substitute for the  > _purpose_ of the image; the mere description of the graphic will rarely be  > appropriate for doing that".   >   I agree.        

      For the sake of clarity, I shall illustrate my proposal with an example.  Given the following user style:    li { color: red ! required }    and an author's style which provides as follows:    ol li.abc { color: blue ! important }    then if there is an ordered list in the document such as:    <ol> <li class="abc"> This is the first and only item in an ordered list.  </ol>    the above item will be coloured red, despite the author's declaration.  This is a result of the stipulation, set forth in my previous message,  that the "required" key word should give the user's rule priority over all  of the author's rules, regardless of the specificity of the latter.  Furthermore, as this example makes clear, "required" rules have priority  over the author's "important" rules.        

      I have made a rough first draft of the Braille CSS requirements document  available at http://rvib2.rvib.org.au/%7ewhiteja/brlcss.html    This is really a discussion paper; it analyses issues and suggests  solutions, but does not give firm recommendations. I would greatly  appreciate it if members of the WAI WG would read the document and subject  it to a thorough and rigorous critique. I would also like to arrange for  it to be read by braille experts and others who are interested in this  area.    All comments should be sent to the WAI WG list in order to promote  further discussion.        

      Unfortunately I do not properly understand what you are seeking. If you  are referring to ACSS, then the only implementation of which I am aware is  T.V. Raman's Emacspeak in cooperation with the W3 browser. The latter  includes a default style sheet which specifies certain ACSS properties.    To avoid unnecessary misunderstanding, I would suggest that Emacspeak and  similar software, which interprets the markup together with audio style  sheets, should not be referred to as a "screen reader", since its function  is not to read the screen but rather to produce an audio representation of  the document. It constitutes an "audio formatter" in T.V. Raman's sense of  the term.        

      CSS 2 makes it possible to associate an audio cue with the HR element.  In some circumstances, this may suffice as an auditory analogue of the  horizontal rule. I would also suggest that it is preferable to indicate  structure by means of the DIV element rather than the horizontal rule,  since the former allows hierarchies to be generated, as in the following  example:    <div title="part 1">  <div title="chapter 1">  [...]  </div>  <div title="chapter 2">  [...]  </div>  </div>    Given a structure of the form outlined above, a user agent could provide  navigation options which facilitate efficient traversal of the hierarchy,  for example as a means of gaining an overview of the document or locating  sections of interest in the absence of an adequate table of contents. The  use of HR alone to indicate divisions within the document would offer no  representation in the HTML markup of its structural organisation. If both  HR and DIV are used together, then the functionality of the TITLE  attribute of one of these elements becomes redundant.        

      I appreciate Nir's well informed comments, and his qualifications to my  suggestions for improving the guidelines. I was unaware that there was a  tendency among certain authors to misuse definition lists, coupled with  images, to create ordered lists.        

      The following question was prompted by recent discussion on this list of  whether tags should be added to HTML so as to identify abbreviations and  acronyms. For purposes of both braille and speech output, it is necessary  to be able to ascertain the language in which a document is written. It  might well be argued that such functionality can be achieved within the  HTML user agent by means of dictionaries, perhaps combined with a  grammatical analysis of the text. However, in the case of multilingual  documents, it may be more difficult to determine which words are intended  to be written in which language, especially if there is some  correspondence in spelling. How reliable are software-based "language  identification techniques? Do multilingual documents occur frequently  enough to warrant the inclusion of a specific HTML tag, or should the  question be decided as a matter of principle rather than on the basis of  perceived frequency?    Regards,    Jason White.        

      Daniel recently directed my attention to a submission that has just been  made to the W3C:  http://www.w3.org/Submission/1997/16/    which discusses a system of transformation properties that is compatible  with CSS syntax. If the CSS working group considered it appropriate to add  such functionality to CSS 2, then in addition to the properties mentioned  in the submission, it would presumably also be possible to include a  property that would permit the insertion by the style sheet of text  fragments, including markup, into the document. Styles could then be  applied recursively to generate the desired output.    Thus, for example, one could define two properties, perhaps called  INSERT-BEFORE and INSERT-AFTER, the function of which would be to insert  strings of characters, comprising both text and markup, into the document.  The text would of course be marked up in the object language, and once it  had been inserted, all relevant styles would then be applied.    I recognise that such a proposal would amount to a fairly radical  extension of CSS 2, but if the submission cited above is taken seriously,  on other grounds, then the WAI could capitalise on it by suggesting the  inclusion of the properties which I have described, as a solution to the  generic prefix/suffix text issue.        

      In completely endorsing Nir's remarks, I would add that there appears to  be some confusion within the working group as to the various purposes to  be served by the guidelines, and which should take priority. Some people  are evidently of the opinion that the guidelines ought primarily to offer  strategies and approaches which can be implemented today as an emergency  measure to alleviate the highest and most seemingly impregnable  accessibility barriers, to stretch the metaphor. Others recognise that the  aim of universal access can only be achieved through fundamental change in  the strategies used in the design of web-based content. Nir is correct in  maintaining that this longer term and more profound transformation can in  general be pursued by the guidelines, simultaneously with more immediate  objectives. However, where there is inconsistency between the two, and  where, for this reason, an interim technique is incompatible with the  attainment of more important, long term accessibility improvements, then  the former must yield to the latter. However, as the discussion of tables  in the current version of the document indicates, direct conflict between  the twin purposes of the guidelines can usually be avoided by providing  further explanations which enable designers to choose between different  approaches as the underlying software evolves.    What is most needed in this field is a stable set of software tools and  data formats which together provide a lasting technology whereby documents  and interactive web-based content can be created, exchanged, represented  different media, searched as a data base, translated into various  languages, and manipulated in whatever manner the user deems desirable,  with a minimum of cost and effort. This implies both interoperability and  accessibility as essential attributes of the required technical standards,  and it is these which the W3C strives to achieve.        

      A related question is whether RDF can express the internal relations  within an HTML document so as to overcome the reading order issues  associated with fragmentation of the linear progression of the text (for  example, the abuse of table markup to indicate visual layout).    Clearly, there is substantial support within the interest group for this  capability, and it needs to be taken into account.    I am still of the opinion that the abuse of tables will disappear as style  sheets take hold, and their advantages in visual media are recognised.  HTML 4.0 is an important step in that direction, along with CSS 2, of  course. I would be willing to provide no support in the HTML for  alleviating the effects of present bad practices (the use of tables to  indicate visual formatting) in the expectation that those practices will  gradually cease over the next few years. This is one case in which short  term gain can perhaps be sacrificed for the benefit of a consistent design  in which presentation and markup are properly distinguished.        

      I think this is one area in which input from the user agent guidelines  group would be helpful: should the title be presented in the DIV element  so that the browser can easily present a structural overview of the  document, or would it be preferable simply to make use of CLASS values in  DIV and leave the title of each section to be designated by a heading, or  perhaps even a TITLE in the HR element? I agree that contextualised style  rules, such as can easily be constructed with CSS selectors, will often  obviate the necessity of making the structure of the document explicit by  including a CLASS attribute in each DIV element. However, since the level  of nesting may vary from one document to another, it may be helpful to  define standardised CLASS values that represent different types of  structural division. This topic relates, as has previously been remarked,  to the "reading order" problem, namely the need to establish a means of  modifying the sequence in which the structural components of the document  are rendered in different media.        

      Two points can be made here:    1. With Unicode as the official HTML character set, and the possibility  that any character within the entire repertoire may potentially appear  within the document, the need for explicit language markup becomes even  more acute. If it is not provided, maybe the braille/speech software could  identify the characters being used and help the user to work out which  language is in effect. Unicode is undoubtedly problematic for the  developers of braille software, due to the number of characters available  and the need for language-specific rules/algorithms to handle each  language.    2. I recall having read that there is an HTTP header which allows the  language, not just the character set, of the document to be conveyed to  the user agent. If this is so, it could be implemented throughout a site  or a defined portion thereof, and would avoid the need for a LANG  attribute at the start of each document. However, LANG would still be  needed in multilingual texts whenever the language changes.        

      What is the current status of Al's LINK and META enhancements with respect  to the HTML working group? There is increasing support for these changes  within the interest group, as recent e-mail contributions have shown, and  I think they offer flexibility which will be important for future  development.        

      On Mon, 22 Dec 1997, Al Gilman wrote:    > There is also a fine point of policy involved in the nomenclature  > tradeoff between !accessibility and some other name.  The notion  > that the user has a right to ultimate control should be  > considered independently from any appeal to special needs for  > accessibility.  If we agree on the principle that any user has  > this right, the explicit weight to implement this right should  > not be named in a fashion which suggests responding to "special"  > needs.  >     Al has correctly and eloquently captured my thinking on this point. Would  not the importance of the new key word for purposes of access be  sufficiently indicated by its having been proposed as part of the WAI  activity, and the fact that the accessibility community, via the WAI,  would be its principal advocate?        

      My personal experience has been that there is a number of web-based forms  which I need to use often. It is slow and tedious to have to move the  cursor to each item in such a form. I would much prefer to be able to use  access keys as a means of quickly selecting the desired fields. Since I  use the same forms repeatedly, it would not take long to learn which keys  were associated with the various controls. The result would be a much  quicker and more satisfying approach to form completion tasks.    It has been my observation, from using both braille displays and speech  synthesizers to access computers, that it is usually desirable to reduce  as far as possible the amount of time which is spent reading menu items  and lists of options, especially in applications with which one is  familiar. An interface which requires the user to navigate through a list  of items and select one or more of them, is very easy to work with at  first, but quickly becomes frustrating as one's knowledge and experience  with the software develops. This is the primary reason why access keys are  so important for those who are relying on braille or speech output.        

      As Gregg mentioned in a different context, the text only performs the  function of the graphic so far as is possible. For instance, a description  of a painting would probably not produce an equivalent experience to that  of an aesthetic encounter with the painting itself; and the same can be  said, mutatis mutandis, of music and certain other types of auditory  content.        

      On Wed, 29 Oct 1997, Scott Isaacs wrote:    > Offhand, I am concerned it potentially won't scale and it doesn't handle  > the following:  >   > 1) nested value lists (my example from much earlier)  > 2) multi-columns  > 3) rich HTML items  > 4) mult-select for hierarchy  > 5) Individually checked items similar to a menu  > 6) Disabling of items or nested groups  >   > Scott  I shall let those with greater expertise in the design of visual user  interfaces deal with the detail of this objection, but a few points should  be noted. Firstly, the WAI proposal defines a means of establishing a  hierarchical structure of option groups, as is required for purposes of  accessibility. Since it is entirely compatible with existing HTML  documents and user agents, as Dave Raggett has repeatedly pointed out,  it is not necessary for visual browsers to implement this feature, though  it would be preferable that they do so.    No evidence has been offered which suggests that the current proposal  would not be amenable to extension in the future, in such a way as to meet  the concerns described above. By contrast, the objector's alternative  proposal does not provide the basis for future extensions and, nor does it  meet the WAI accessibility requirements.    Basically, I think the objection arises from a lack of appreciation of the  distinction between structure and presentation, which is a fundamental  feature of HTML.        

      The solution is to provide a well marked up document which preserves all  of the semantic distinctions and structural aspects necessary to enable  conversion into a variety of formats, across a range of output devices.  HTML can achieve this objective in many cases (taking into account its  inability to represent mathematical content, for which MathML is  required).    It should be possible to construct a tool that would collect a series of  small but related HTML documents into a single file, especially if the  LINK element is used, as provided for in the HTML 4.0 specification, to  connect the components. Anyone who really wanted plain text could easily  render the document in a web browser and save it as a text file, or use a  search and replace utility to eliminate the markup (perhaps replacing  paragraph elements with blank lines, headings with tabs and performing  other rudimentary operations that hardly compensate for the loss of  structure which is involved in such a transformation).    My personal approach to reading HTML documents off-line is to use  Emacspeak with the W3 browser. By using the audio extensions to CSS, this  software can indicate such features as lists, emphasised text, links,  code, quotations, etc., using different voices. It is genuinely  astonishing to observe how much richer and more informative this rendering  is than that produced by a screen reader.    Certain braille translators can process HTML files, though not always with  a high degree of formatting accuracy. The ability to combine various  components of a document into a single file might be useful in this  context as well, although the user would presumably then have to split the  file again in order to divide the output into separate braille volumes.        

      ASCII text versions of the HTML and CSS specifications (and presumably  others) are available from their respective pages, as compressed tar or  zip files.    The main disadvantage of ASCII text (with no markup) is that all of the  structural and semantic distinctions conveyed by the HTML are lost. It is  therefore important to emphasize that plain text is only minimally  accessible. For instance, if one wished to produce a properly formatted  braille copy, it would be necessary to re-introduce the markup codes.  Similarly, audio formatting software such as AsteR and Emacspeak/W3  require markup in order to produce an efficient rendering of the document  that conveys the necessary conceptual distinctions and allows for  structured navigation.    While I agree that some ASCII text documents can be read easily by a  traditional screen reader, it is important to be careful in ensuring that  document distributors do not start conceiving of ASCII text files as  inherently appropriate for non-visual presentation.        

      At the risk of further complicating the nomenclature debate, I would like  to suggest "user interface guidelines" instead of either "user agent" or  "client software" guidelines. This title at least emphasises the nature of  the subject matter. Specific issues relevant to the user interface of  HTML editing software and similar products would be treated in the  authoring tool guidelines, however. The user interface guidelines  themselves would still provide basic parameters, but concentrate more on  client software, including both user agents and assistive technologies.  Perhaps a compromised title such as "WAI client software user interface  guidelines" would be best.        

      In answer to Gregg's question, I believe the timed change of pages is  supposed to happen whenever a document bearing this markup is loaded. Do  today's browsers offer a means of deactivating this feature? If not, then  I would suggest (1) that the page authoring guidelines discourage its use;   and (2) that the issue be drawn to the attention of the user agent  guidelines group.         

      On Fri, 27 Mar 1998, Mike Paciello wrote:    > While we're at it, can someone please explain to me why the syntax for the  > OBJECT tag that includes an image, specifies the ALT text of that image  > without the ALT attribute? (Or at least, that's how the 4.0 spec describes  > it). Seems to be an inconsistent use of syntax.    Actually, this is the great advantage of the OBJECT element: it allows  block-level content to be included as an alternative to the resource which  it designates. The content of the ALT attribute, if one may use this  expression in a non-technical sense, can consist only of text characters  and must in practice be relatively short. Thus, the alternative to the  graphical resource given in the OBJECT element may range from a brief  label to an entire description, complete with markup, links to other  resources (as are particularly important in the case of an image map),  etc. Thus, far from being an inconsistency, I would describe the content  model of OBJECT as a substantial and positive innovation, which will do  much to further the development of accessible HTML documents which are  equally appealing in visual and non-visual media.        

      On Mon, 25 May 1998, Charles McCathieNevile wrote:    > The other case which Al did not account for (and nor have I in thinking   > about OBJECT before, but I will be working on it Monday ;) is where users   > are not viewing any images etc to speed their browsing, but still want to   > know when to pick up an image. A link to the image inside the content of   > the object would be very helpful for such users, as well as a link to the   > description.    Of course, the DATA attribute of the OBJECT element provides a URL for the  resource to which it refers. However, Charles has made an important point,  for he correctly recognises that when image viewing has been deactivated,  the reference to the graphical resource will not be available to the user.  Two questions follow. Firstly, should this not be considered a "user  agent" issue, given that in the case of a series of nested OBJECT  elements which refer to different versions of the same resource (E.G.  different image file formats) it is the responsibility of the user agent,  not the author of the document in writing the textual content of OBJECT,  to choose the version which is compatible with the available software?  Secondly, if browsers were to provide an option whereby images could be  requested individually, despite the user's having decided that they should  not be displayed by default, how should this link be presented visually by  a browser?    It might also be asked whether the foregoing is an "accessibility" issue  or just a question of good design practice.        

      This was written in response to Charles McCathie-Nevile's latest  contribution on this topic, with the subject line appropriately renamed.    For the most part, I think the latest draft handles the issue of scripts  quite well: it recommends that they be made directly usable, where  possible, but the basic point is that alternative versions of the document  that do not depend on scripts, and offer the same functionality, must be  provided.    As Charles has intimated, the best solution is to use server-side scripts  to produce interactive content, as a substitute for, or an alternative  supplied in parallel with, Javascript and other client-side scripts and  applets. This technique does not appear to be expressly stated in the  guidelines, however. An accessible site must be capable of serving only  HTML plus style sheets, to a client that does not support scripts, image  files, audio files, etc., with all information conveyed in well marked up  HTML, but with those other (multimedia) services provided for those who  can take advantage of them. This appears to be the essence of what the  guidelines are requiring in many of their specific recommendations.  Server-side scripts and data bases which generate content dynamically are  of the utmost benefit in achieving the desired goals; and they need to be  mentioned in appropriate parts of the guidelines, as valuable techniques,  with further elaboration in the "techniques document".    Moreover, sites in which the content is largely generated by the server  from data bases, or which use templates to achieve internal consistency,  are easier to maintain (and this is also a significant advantage of style  sheets).        

      In the latest version of the HTML 4.0 specification  (http://www.w3.org/TR/PR-html40/), the ACRONYM element has been renamed,  justifiably in my opinion, to ABBR (abbreviation).    This needs to be reflected in the guidelines.        

      Changing the names of the categories would certainly be helpful, but it  would also be necessary to ensure that the definitions of the revised  categories were appropriate. The designation "required", as it presently  stands, is strictly interpreted, and it is this interpretation of the term  which I suspect is likely to create confusion. A useful question to ask  is what purpose is served by attaching different levels of importance to  each of the guidelines. The answer seems to be that it establishes an  order of priorities: the "required" guidelines would need to be  implemented with greater urgency and thoroughness, when creating or, more  significantly, updating an HTML document, whereas the "recommended" items  can, so the term implies, be postponed. This is reasonable, so long as a  page which conformed to only the "required" guidelines would be  practically usable. It is from this standpoint that the classification of  guidelines ought to be decided. It should also be reflected in the  definitions by evoking a "practically unusable" criterion as the basis for  making a guideline "required" (or whatever the label ultimately chosen  turns out to be). I think, incidentally, that "paramount" would be an  appropriate term, as Daniel suggests. Perhaps "paramount" and  "recommended" would be best, or even "paramount", "strongly recommended"  and "recommended". In the latter case, "paramount" would retain the  definition presently ascribed to "required". In the former case, namely if  the two-level scheme were preserved, "paramount" should be given a less  restrictive definition by introducing the concept of practical usability.        

      Taking Nir's example however, it would still seem necessary for the first  link to act as a "bypass" link by referring to a target at the start of  the main body of the document.    For example:    <a href="#maintext"> Jump to start of text </a> <a href="index.html"> Home  Page </a> [...] <h1> <a name="maintext"> Major Heading at Start of  Document </a> </h1>    This is the solution which Al proposed in last week's teleconference. In  practice, one would use style sheets etc., to control the presentation of  the navigational links.        

      I agree that the HTML specification is not a suitable location for  describing the preferred dictionary file format and that the issue should  be treated separately. Would it be best to develop an "abbreviation  dictionary" specification specifically for this purpose, as a separate  document, which could perhaps be included on one of the W3C pages that  deals with markup?    I would still maintain the importance of defining the dictionary file  format, and of doing so before the concept of an abbreviation dictionary  is widely implemented so that there is little opportunity for divergent  standards and incompatibilities to arise.    Abbreviation dictionaries are likely to be relatively small, and require  only two fields per entry: one for the abbreviation and the other for its  expansion. Thus, the file format would be relatively simple, and I would  suggest using an HTML document for several reasons. Firstly, it can easily  be created using any HTML authoring tool or text editor. Secondly, the  markup for language identification and the full ISO 10646 character set  would be available, as is necessary in a truly international context.  Thirdly, HTML provides a simple mechanism, namely the definition list,  whereby abbreviations and their expanded forms can be listed.        

      In response to Al's query, it should be pointed out that although the  content of OBJECT is normally ignored if the resource which it designates  (for example an image or a script) can be processed, this is not the case  with an image map for which the boolean SHAPES attribute is specified.  Under these circumstances, the visual user agent processes the content of  OBJECT, searching for anchors that provide the coordinates of the various  regions of the image map. The text of the HTML specification, as currently  drafted, does not make this point sufficiently clear (it states that a  visual user agent will process the content of OBJECT, looking for anchors;  whereas it should qualify this by saying "anchors with COORDS  attributes"). This is a minor point relating to the accuracy of the  specification which is not directly an accessibility concern.    Moving to Al's more substantive concern, Daniel and I have given some  consideration to how LONGDESC should be presented to the user. The general  conclusion is that it should be controlled by style sheets. In practice,  of course, LONGDESC behaviour would most often be specified by the user's  default style sheet, since most document authors are unlikely to make  specific provision in their style sheets for non-visual media, even if  they take advantage of LONGDESC itself. LONGDESC would, in general, act as  a link to the description, which would be placed at the end of the current  document or, more typically, in a separate document. The presence of  LONGDESC could be signaled to the user by changing the speech or braille  formatting of the ALT text associated with the image, or by inserting text  next to the ALT text (for example the familiar "[D]" to indicate the  availability of a description).    There are, of course, limitations of CSS 2 syntax which prevent the  rendering of LONGDESC from being controlled effectively by styles. Daniel  is investigating these problems at the moment to find out whether they  will be resolved as part of the ongoing CSS development work. An  alternative would be to require the user agent to convert an image with  LONGDESC into an equivalent OBJECT element prior to applying styles to the  document. Such an OBJECT would have a class of LONGDESC, and automatically  generated content (for example, an anchor containing the text of the ALT  attribute from the original image). The OBJECT could then be addressed by  familiar CSS selectors.    Personally, I would prefer to extend CSS so as to permit the rendering of  LONGDESC to be specified directly, instead of relying on user agents to  transform <img src="image.gif" alt="alt text" longdesc="description.html">  into <object data="image.gif"> <a class="longdesc"  href="description.html"> ALT text </a> </object> or similar markup.    Note that an alternative approach would be to import the contents of  description.html in the above example directly into the document.    To meet short term requirements, the types of behaviour mentioned above  could all be proposed as alternatives which text-based user agents could  implement, even if they do not support style sheets.        

      It should be remembered that HTML is an application of SGML (as emphasized  in the HTML 4.0 specification). SGML is built upon a separation of content  from presentation. A well designed HTML document will therefore conform to  the HTML specification (including one of the DTD's) and will use style  sheets to control presentation, employ elements and attributes in  accordance with their definitions in the specification, etc.    Almost by definition, such a document will satisfy many, though not all,  accessibility requirements. A well designed document is thus often, though  not invariably, accessible.        

      When accessing the web via a braille display, I would prefer that bullets  indicating list items be represented by the asterisk character, as in Lynx  2.7.1. In such a case, it would be best to use the UL and LI elements, and  a null ALT value if the bullet is to be represented by an image. For  example:    <ul>  <li> <img alt="" src="bullet.jpg"> Item 1  [...]  </ul>    Unfortunately, braille displays are often overlooked when designing HTML  access guidelines. This situation also indicates that the sooner audio and  braille style sheet mechanisms are implemented, the easier it will be for  HTML authors to design their documents in such a way as to meet everyone's  needs.    If the word "item" preceded every item in a list, this would undoubtedly  be detrimental to the efficiency with which the document could be read via  a 40-cell braille display, even if the software is configured to apply  braille contractions automatically.    The fact that solutions which are appropriate for speech synthesizers are  not necessarily convenient when when using a braille display, and that  such conventions are different again from those which are most effective  on screen or in print, highlights the need for a flexible and  sophisticated style sheet mechanism for controlling the presentation of  HTML documents.        

      On several occasions, the importance of advising authors to make  appropriate use of the HTML LANG attribute to identify fragments or  passages of text in different languages, has been mentioned. However, it  has still not found its way into the page author guidelines. Not only does  the language in which each part of the text is written need to be  identified so that appropriate text to speech or braille coding algorithms  can be used; it is also, as I understand from comments made at the WWW7  conference, required by automatic translation software.    An appropriate suggestion should be added to the guidelines, classified as  "new" and "recommended". The rationale should include a brief mention of  speech synthesizers, braille software and automated translation tools.        

      I think this recommendation needs to be specific to HTML. Basically, the  ALT attribute is always required to be included with any IMG element,  whether or not it appears in the content of an anchor. The advisory TITLE  on anchor may be helpful, but if the content of the anchor is an image  with ALT text, then the title attribute would appear to be redundent,  except under those circumstances in which it is necessary to provide both  a description of the image and, separately, the title of the resource to  which the link refers. Normally however, an image acting as an anchor does  not convey any content other than an indication of the destination of the  link, and thus only the ALT text is needed.        

      Please excuse me if these comments are a restatement of the obvious, but I  was unable to attend the WAI meetings and have thus been living at the end  of what has been aptly described as a rather narrow information pipe.    The purpose of the GL group, as I understand it, is to develop guidelines  which treat those access issues that can best be addressed at the level of  HTML markup. These guidelines will set out appropriate markup practices  which, if correctly followed, will ensure that HTML documents contain all  of the semantic and structural content required to permit a rendering in  different media. Admittedly, this requirement is complicated by the well  known circumstance that today's HTML user agents and adaptive technologies  for the most part do not work together in such a way as to take full  advantage of the structural information provided by HTML. This is one  reason why some guidelines are needed today which are not likely to be  necessary in the future as the supporting technologies evolve; and it is  also a reason why the UI group is to be formed.    The intended audience for the markup guidelines includes HTML authors and  authoring tool manufacturers, as well, of course, as the other WAI working  groups, for instance AU and RC. Given the close interconnections between  markup, authoring tool and user interface guidelines, there must be close  cooperation between these groups, which, I would submit, should so far as  possible confine their actual work to their respective areas of activity.  This means that the GL group would concentrate on answering the question:  in what does good HTML markup practice consist, with regard to  accessibility? Produce markup guidelines for now and for the future, with  appropriate gradations of priority. The authoring tool group would then  refer to these guidelines in recommending appropriate practices to  authoring tool developers, and consider those aspects of an authoring  tool's operation and user interface which need to be addressed so as to  provide authors with opportunity and guidance in creating accessible HTML  documents. Likewise, the UI working group would consider how the markup  practices developed by GL are to be manifested in the user interface and  how adaptive technologies can take advantage of them. This also connects  with the DOM work which is part of the PF activity.    The question which remains unanswered is: who will bring the various  guidelines documents together and create a unified W3C guidelines site,  replete with examples as well as the normative documents themselves? Could  it be accomplished via the coordination group, or by cooperation between  the chairs of GL, AU and UI?    I think it would be helpful to make clear at the outset the precise scope  of each set of guidelines and how the respective documents will relate to  each other. A site map will help but it is not the same as a clear  statement of what the scope of each document should be. I am sure that  such issues will be more easily grasped once the charters of the various  groups have been completed. I hope that the charters can be made available  to all of the participants so that the members of each group are aware of  precisely what the others are intended to deliver.    Some cross-posting of messages between the various groups and mutual  interaction is to be expected.        

      I agree that a long description of an image map may in some cases be  necessary if the required information can not be conveyed by associating  an ALT attribute with each of the defined areas on a client-side map. All  web clients that comply with the HTML 3.2 specification should fully  support client-side image maps. Any failure in this regard should  certainly be addressed in the education and awareness aspect of the WAI  project. Again, this is a "time frame" issue. Perhaps the guidelines  should, in the first place, strongly discourage the use of server-side  image maps, and then offer a solution for those who still insist upon  using them.        

      On Wed, 27 Aug 1997, Murray Maloney wrote:    > Having read Jason's mail, and the private notes  > that I have received from Daniel D., I am incensed.    I am at a loss to know what was said in my previous message on this topic  that justifies such a reaction. I merely sought an explanation of the  relationship between Murray's HTML WG activity and the WAI process as a  whole. I did not intend to imply that his actions were in any way  illegitimate or reprehensible. To the extent that such an impression was  inadvertently created, I hereby apologize.    I am also very pleased with the progress that Murray and T.V. Raman have  made in advocating the importance of access issues at the HTML WG meeting.  The restoration of OBJECT to its former state is a particularly welcome  move.    The establishment within W3C of means by which WAI proposals can be  properly considered and addressed, still appears to be a live issue at  this point. I am sure that Daniel has been working diligently to resolve  the problem, and I do not wish my remarks to be taken as implying any  criticism of his efforts or those of any other participants in the WAI  project.        

      On Thu, 18 Dec 1997, Charles (Chuck) Oppermann wrote:    > If we add more attributes, what's to prevent someone from always using the  > "!SUPER-DUPER_INCREDIBLY_IMPORTANT_ULTIMATE" attribute on their site simply  > because it's a guarantee of appearance.    The purpose of my proposed change to !important; (or the proposed  !absolute; directive) is to prevent this from happening. It does so by  ensuring that, once a style rule has been marked as important, no later  rule (whether supplied by the author or not) will change the properties in  question, irrespective of whether the subsequent rule is marked as  !important; or not. This is what is meant by saying that all of the  author's rules will carry normal weight, regardless of whether they are  marked as important. The effect is that the !important; directive, or the  !absolute; directive would have no effect if included in an author's style  sheet.    As to the suggestion that the problem is best dealt with by a browser's  user interface, I disagree with it for the following reasons. Firstly, by  allowing a directive to be included in the style sheet which gives  precedence to certain of its rules at the expense of those of the author,  all that the reader must do is download (or write) the style sheet. No  user interface changes are required. Secondly, my proposal enables the  precedence of the reader's vs. the author's preferences to be controlled  at the level of the individual style rule, which user interface options  may not do. The reader may have certain essential presentation  requirements which are indispensable to accessibility, and others which  are not. The style sheet language should enable these to be distinguished.  Thirdly, if the mechanism whereby the reader's needs are met is built into  CSS, it becomes part of the standard itself and is hence mandatory, rather  than being a user interface guideline which software developers may, or  may not, choose to implement. Fourthly, the two approaches are not  inconsistent. The user interface could allow the user to set various style  options, and implement this by making changes automatically to a default  style sheet and marking relevant items as important. Thus I do not think  there is any need to choose between the two approaches, but rather to  insist on both. Fifthly, it is a central tenet of the Web Accessibility  Initiative that where possible, W3C protocols and formats should  facilitate access to documents in different media. As it stands, CSS 2  fails to do this in as much as it offers no means for the reader to ensure  that her/his presentational requirements are met. For this reason it is  desirable that changes be made at this stage of development so that access  requirements are satisfied, in a convenient and predictable way.        

      In a message just sent to the WAI interest group, I remarked that the page  author guidelines were intended for several distinct audiences: (1)  individuals who are creating web content; (2) software developers whose  applications, whether they be authoring tools, file conversion packages or  other products, generate documents in formats such as HTML which are  intended for delivery via the Web. A brief note drawing attention to the  intended audience could be added to the introductory paragraphs of the  document, thus drawing it to the attention of the groups for whom it was  written.    Also, the authoring tool guidelines should refer to the page author  guidelines, and explain how software tools can implement them (E.G. by  including in the user interface features which encourage appropriate  practice).        

      I think that my original position has been somewhat overlooked in the  ensuing discussion. What I am suggesting is:    1. A paragraph of two of text introducing assistive technology, in the  appendix to the guidelines.    2. A sentence referring to this information, included in the introduction.    Given that the appendix already includes (1) checklist, (2)  acknowledgments, and (3) references, and that it is not part of the  guidelines proper, I do not think that the issue of unduly lengthening the  guidelines genuinely arises. An author who wishes to do so can retrieve  the document via the web, read quickly through the introduction and the  guidelines, and then ignore the appendix, without any loss of efficiency.    I would also reiterate Judy's point that "how does a person with a visual  disability use a computer, let alone the web?" must be placed at the top  of my list of frequently asked questions, in any discussion of these  issues with people who are unacquainted with assistive technology. A brief  explanation would not only satisfy understandable curiosity, but also  provide insight into the rationale for the guidelines. The more interested  readers can then refer to the level 2 document or the central reference  document for a more detailed analysis.        

      Responding to Charles Oppermann's comment, the feature here being  considered does not actually refresh the page. It moves the reader from  one page to another. In relation more generally to refreshing, the user  agent should provide an option to freeze any changes so that the text can  be read without the confusion that may be created by dynamic  modifications.        

      I agree with T.V. Raman that it should not be the responsibility of  content providers to accommodate the idiosyncrasies of specific user  agents. HTML should be written in accordance with the standards set by  W3C, and the developers of user agents have a responsibility to conform to  those requirements. Those who are using older versions of lynx can and  should obtain a software upgrade, which is freely available over the  internet and can easily be compiled and installed.    I would therefore not support the suggested addition to the guidelines.        

      In response to Daniel's question concerning the meaning of rel="alternate  stylesheet", my understanding of the spec is as follows:    1. If no TITLE attribute is present, then the style is persistent  (provided that the media types match, it is invoked irrespective of user's  preference).    2. If TITLE is present, then the stylesheet is loaded (subject to the  media types' matching), but the user can enter a configuration menu or  other comparable component of the user interface and deactivate the style  by name, if he or she so chooses.    3. If rel="alternate stylesheet" is specified, then the user is presented  with the title of the style sheet before the document is rendered, and is  given the choice of whether to apply it or not, or in the case of several  alternate style sheets, the user can select one of them. I don't know what  the result is supposed to be if rel="alternate stylesheet" and no title is  given in the LINK element.        

      Section 9.1 of the HTML 4.0 specification is also relevant here, in as  much as it states that authors can not rely on user agents to render space  immediately following a start tag. Thus, even if guidelines recommended  insertion of a space after the IMG element, it might not be rendered by  some user agents. I think this issue should be sent (1) to the lynx  developers; and (2) to the UI guidelines working group. I would also like  to know whether any other user agents, for example the text-based browser  used under Emacs, have the same problem. If so, then their developers  should be alerted.        

      A few clarifications are needed:    Speakrow is a property which applies to each row of the table in turn and  governs the procedure by which it is read. Similarly, Speakcell is a  property that controls the reading of every data cell.    Example:    tr { speakrow: cue(bell.aiff), cells(1-n) }  td { speakcell: pause(100%), header, data }    CSS experts: please check the syntax of my examples for correctness and  elegance.    In my previous messages, I explained that the CELLS variable accepted  numerical parameters as well as the variable "n", which refers to the last  cell in the row (n being the number of cells). I forgot to mention that if  a numerical value is out of range (greater than n), then it should be  taken as referring to cell n.    I hope these remarks deflect certain objections and make it easier to  understand my proposal.    We still need a mechanism to control the reading of tables which are  column rather than row dominant.        

      I agree with Daniel and Al on this point: until and unless there is a  relatively universal scripting language implemented by most user agents,  it must be assumed that for a certain proportion of users, it will not be  possible to execute the script at all, and that an alternative version of  the document is needed.    I would also be reluctant to endorse any changes to the guidelines  regarding ALT text, which is based purely on the way in which some  graphical browsers present the value of the TITLE and ALT attributes. This  question has been discussed before and the consensus was that, due to the  variety of devices which may support HTML user agents, which may be  graphical, text-based, auditory, etc., the guidelines should not make any  assumptions regarding the manner in which the ALT attribute is or is not  presented by the user agent, other than that it can be accessed when the  user is unable to or chooses not to view the image.    I would suggest that the presentation issue is largely a user agent  concern that should be addressed in the u a guidelines.        

      It should be remembered that there is not always a "screen reader"  intermediary between the user agent and the text to speech software.  Indeed, some user agents are designed from the start to provide speech  output. I am not sure whether any of them supports the LANG attribute yet,  but they will undoubtedly do so reasonably soon. The user agent group  could introduce a priority 1 requirement to the effect that speech output  systems must offer the user an option to override the language choice  which is in effect. This would enable users to handle situations in which  no language, or an incorrect language, is specified via the LANG  attribute.    Thus, I think there is a priority 1 issue here, but it belongs in the user  agent guidelines. For our guidelines, the existing priority 2 requirement  that the LANG attribute be specified where necessary, should remain.        

      Al is of course correct. One point that could be added, however, is that  some of the macros (which do not involve embedded text strings but simply  control the order of reading, the audio cues before and after the header  and the data, etc.) can be generalised, and therefore belong in the style  system.        

      My basic position would be that any recommendations pertaining to natural  language should at most be priority 3 suggestions. Clear examples of  difficulty that come to mind are those in which the content is in itself  complex, or in which the person who is responsible for the markup and  other technical aspects of design has no control over the text itself. For  example, the developers of a web site which provides the full text of  court decisions can presumably influence the markup, but not the content,  which is written by the Court itself.    Similarly, there is inherent complexity in documents that are devoted to  highly technical subjects, in whatever discipline they may occur. This is  what I mean by maintaining that stylistic appropriateness is context  dependent. A governmental web site intended to inform the public regarding  electoral matters, to take a somewhat different example, should present  the information in a range of different languages (assuming a reasonably  heterogeneous society) and take steps to aid comprehension by avoiding  unnecessary technicalities, using direct and succinct language, providing  a clear structure, etc.        

      The HTML 4.0 draft allows labels and keyboard commands to be associated  with each item in a form. The WAI HC working group has also proposed an  important enhancement to the SELECT element, whereby options can be  grouped into hierarchically organised lists. If all of these features are  widely used by authors and supported in braille and speech-based HTML  software, there should be no further accessibility problems with respect  to forms.    At present, I use Lynx version 2.7.1 and have not encountered any  access barriers related to forms. Some of them are slow and cumbersome to  complete, and I hope this shortcoming will be resolved by (1) the ability  to select items in a form by way of keyboard commands; and (2) the  hierarchical grouping of options as proposed by the WAI.        

      I disagree with Josh's suggestion. The guidelines should remain consistent  with the HTML 4.0 specification, and with other W3C documents, by  discouraging all use of deprecated HTML features in favour of style  sheets, thereby emphasizing their transitional nature. After all, these  guidelines will be used as the basis of authoring tool design as well as  providing best practice recommendations for the designers of HTML  documents. However, the guideline which suggests the avoidance of  deprecated HTML features should be recommended, as it is not strictly  required for accessibility.        

      There is an apparent inconsistency between the guidelines concerned with  image maps. One can not both require that client-side maps be used, and  then provide an alternative in the event that server-side maps are needed.  By definition, the "required" classification in this context would  preclude the use of server-side maps altogether. Perhaps an alternative  would be: (1) Required: either make the image map accessible or provide a  textual alternative. Recommended: use client-side maps. Required: if  server-side maps must be used ...    Also, the document as a whole needs to be proofread and edited for grammar  and style. It contains a number of obvious errors which have probably  resulted from the many rounds of revision which the text has undergone.  I know from personal experience that elementary mistakes can easily arise  during the editing of a document and that careful proofreading is the best  means of identifying them.        

      Having reviewed the section on tables in the September draft, it appears  that most of the requirements which Al and T.V. Raman have identified are  adequately supported in HTML. Of course, it would be possible for a user  agent to employ more sophisticated techniques for identifying which header  cells correspond to each data cell, then those stated in the algorithm  which is outlined in the specification. For example, if column groups are  defined, the first heading in each group might be taken by default as a  branch in the tree structure, as though it had been labeled with the AXIS  attribute.    I would appreciate clarification of what a "row header" is, and of how  such a header is to be marked up in the HTML. Row headers are mentioned in  the algorithm for determining which headers correspond to a data cell, but  nowhere else in the discussion of tables generally can I find any further  reference to them.    Another issue which deserves to be raised at this point is the default  reading order of a table, in cases where interactive navigation is not  desired. Obviously it would be best if a speech-based user agent could  read the entire table in a comprehensible fashion, without requiring the  user to issue navigational commands to control the rendering. This need is  at the centre of T.V. Raman's requirement that readings such as  "Population growth in [cell 1] was [cell 2]". We need to ascertain to what  extent such readings can be automatically generated from the HTML source,  and whether there is a need for further semantic information to be  supplied. In the latter case, what kind of additional content would a  speech-based user agent need?    It appears to me that the relationships between data and header cells can  be adequately expressed by way of the AXES attribute, and that hierarchies  can be built by means of a default algorithm (for example, by recognising  the first column in a column group as a first-level branch in the tree  structure), together with the AXIS attribute which may, in some cases, be  supplied by the author. What additional semantic content can a table  contain which would not be captured in such a model? Perhaps Al could  clarify the types of relationships between cells which he wishes to take  into account, but which he thinks are not adequately representable in the  existing markup repertoire.        

      My thinking in this area is moving toward embracing the proposal of  including an extra key word in CSS 2 (such as !required; as Al has  suggested). The main reason for this stems from the specificity problem.  As discussed in an earlier example, the desired effect is that the user's  requirement should take precedence over all of the author's rules,  including those which would otherwise have greater specificity. The  !important key word currently has no impact on specificity. Thus, an extra  directive could be defined which (1) only has effect when it occurs in a  user's style sheet; and (2) ensures that the rule to which it applies has  priority over such of the author's rules as would otherwise have greater  specificity.    I would envisage the priority scheme as follows:    User Required  Author Important  User Important  Author Required Author Normal  User Normal    This retains existing priorities, but adds "user required" at the top of  the hierarchy, as well as changing the specificity rules.    I would favour a key word such as "!required" rather than  "!accessibility".        

      Following recent discussion on the WAI IG list and elsewhere, I spent a  few minutes this afternoon re-reading the section of the CSS 2 draft that  deals with cascading order. I think there is definitely a problem that  needs to be considered by this working group, resulting from the fact that  where two or more inconsistent declarations are made, each of them having  the same specificity, the author-supplied declaration overrides the  reader's default style sheet. Furthermore, if a declaration in the  reader's default style sheet is marked as important, any inconsistent  declaration in the author's style sheet which is likewise marked as  important will prevail. It has been pointed out to me that some authors  may tend to mark all of their colour and font declarations as important,  thereby defeating the reader's preferences. Obviously this has important  consequences for people with disabilities.    A second problem results from the definition of specificity. It was  mentioned some time ago on the interest group list that it is difficult to  design, for example, a "large font" style sheet, because more specific  declarations override those which are of greater generality. Thus if, for  instance, a second level heading with a particular class value <h2  class="abc"> is declared by the author to have a particular font, this  will override any of the reader's font declarations relating to <h2>  (unless the reader has defined an IMPORTANT style specifically for <h2  class="abc">).    Perhaps what is required is a mechanism by which the reader can designate  certain properties as being (1) so important that they can not be modified  subsequently in the cascading process; and (2) inheritable in such a way  that they will not be modified by any declaration in the author's style  sheet which has greater specificity. This only applies to situations in  which there are two or more inconsistent declarations of the same  property.    This entire issue is obviously of concern to the interest group, and  therefore it is desirable that the HC working group should develop a  position with respect to it.    I have previously outlined an alternative solution which addresses the  problem by requiring an exact match of media types in order for a style  sheet to participate in the cascade. That solution has its disadvantages,  as Daniel has pointed out. One approach might be to include a directive  which the reader could specify in her or his default style sheet,  requiring that no subsequent style sheet should participate in the cascade  unless it has a parameterised media type which exactly matches the  parameterised media type of the style sheet in which the declaration  occurs. Thus, a style sheet with media="screen enlarged" (my hypothetical  example) would, if it contained this declaration, not be modified in its  application by a subsequent style sheet with the less specific media type  of media="screen".    If the proposed declaration is not given, then a subsequent style sheet of  type media="screen" would participate in the cascade and, where  applicable, override the provisions of the style sheet of type  media="screen enlarged". This should take care of Daniel's example of a  style sheet with media="braille embossed 42" being modified by a later  style sheet of type media="braille".    Personally, I would prefer the first of the two solutions which have here  been outlined, namely the one which modifies the definition of the  !important declaration and its role in the cascading process.        

      On Fri, 24 Oct 1997, Daniel Dardailler wrote:    >   > > If any parameters are added to the base type which the user agent can not  > > interpret, then the resource to which the media type relates (E.G. a style  > > sheet) should not be accessed.  >   > I'm a little confused by the position taken here.  >   > If I get a document with a pointer to a media="braille embossed" CSS  > file and HTML and my CSS setup only defines "braille", am I suppoed to  > ignore it altogether ?  >   This is indeed what I had in mind, since the user agent can not in such a  case determine whether the output medium satisfies the requirements of the  style sheet. The problem can be exemplified as follows:    media="braille displayed 80" (a style sheet for an 80-cell braille  display).    Suppose that the user agent does not recognise the parameters, and  truncates the media type to:  media="braille"  and the output device is a braille embosser with a maximum of 40  characters per line. The style sheet includes properties that require text  to be positioned horizontally in columns 41-80.    Another solution, which might perhaps be better, would be to access the  style sheet, ignore the extra media type parameters, and then activate  error checking to ensure that none of the style properties results in  output that would exceed the capabilities of the hardware.    I do not recall reading any discussion of such error checking in the CSS  specification, but I may have overlooked it.        

      I agree completely with Al's proposed response to the quotation issue. He  is also correct in his summary of its likely impact on braille and audio  user agents.    If this response is to be submitted to the HTML WG, it would also be  desirable to include a reference to the HC message thread on the subject,  so that interested parties can become acquainted with this problem from  the perspective of braille and audio representations.    I agree with Al's general sentiment that we are here concerned with a  relatively minor issue, but it ought nevertheless to be addressed in the  manner which he has proposed.        

      On Wed, 10 Dec 1997, Al Gilman wrote:    > ASG:: He actually had two suggestions.  For straw poll, my $.02:  >   > make required? no.    >         > populate the attribute in examples in the spec? yes.  >   I agree completely with Al's comment.        

      I entirely concur with Charles' comments and would only add that most of  the techniques listed in the document are easy to implement and will  substantially improve the usefulness of a web site for a significant  proportion of visitors.    The new structure of the guidelines attempts to derive the detailed  recommendations from basic principles in a way that minimises the number  of distinct guidelines. The techniques then provide specific methods  whereby the requirements specified in the guidelines can be satisfied. The  table which summarises the guidelines also offers an excellent overview  and makes it possible to ascertain which items are of the highest  priority.    So long as the guidelines are clear and well organised, any competent site  designer should be able to follow them without an unduly inordinate  expenditure of effort. I have spoken to page authors in the university  context who have applied these principles successfully, indeed  enthusiastically. This task has been substantially simplified by the  tendency to generate web pages dynamically in the server, with templates  providing the basic, uniform structure and with the content of each  documented being inserted automatically by means of a script or "include"  directive. This approach even allows different versions of the same  page to be generated based on the user's preferences, and eases the  maintenance burden.        

      I concur with T.V. Raman's general statement that poor design practice  should not be encouraged in the name of accessibility. Nevertheless, a  macro which is specific to an individual table, owing to the fact that it  combines variables and customised text strings, transcends the conceptual  dichotomy between content and style. If a generalised reading strategy is  to be employed, involving a mixture of audio cues, changes in voice  characteristics, pauses, etc., then it should be regulated by a style  sheet, but if the author wishes to offer a custom rendering of a  particular table, which includes both text strings and references to data  cells, then there is a strong argument for either treating at as either  (1) an in-line style; or (2) a kind of description of the table which can  be linked to it via RDF or a similar mechanism. If the former option be  preferred, then all that is needed is a style language of sufficient  complexity, which incorporates the features required for such a rendering.  The latter option would involve the creation of a scripting language for  generating audio descriptions of tables (including speech characteristics,  text strings supplied in the script, etc.). The main problem with the  script approach is that there is no universal scripting language currently  available and, so far as I am aware, none has been or is about to be  endorsed by the W3C.        

      1. I agree with the name change: these guidelines are for the most part  specific to HTML. At a later stage, we shall need to consider whether  separate guidelines need to be written in relation to XML resources.    2. The guidelines provide an example of an image map in which the  coordinates of the active regions are given in anchor elements, as  permitted by HTML 4.0. This version of HTML also allows block-level  content to be included in MAP. The example could be enriched by providing  a more detailed description of the library within the MAP element, such as  would appear from the image map (for example, a brief synopsis of the  layout of certain facilities).    3. The guidelines suggest taking advantage of the media attribute of the  LINK element to facilitate automatic retrieval of "text only" alternative  documents, where these are deemed necessary. While I would not disapprove  of this approach, I would emphasise that alternative pages should be  avoided wherever possible. As Daniel has correctly stated on more than one  occasion, the goal of the WAI is for there to be a single document which  can be rendered in different media with equal success. In relation to the  technical side of this proposal, the HTML 4.0 specification (at 6.13)  defines a media type of "aural" for speech synthesizers, rather than  "speech" as is incorrectly claimed in the guidelines. Also, to encompass  all types of non-graphical devices, the MEDIA value should read:  media="aural, braille, tty".    4. A "tips and tricks" note could be added to the discussion of ALT text  to assist authors in deciding what to write as a label or description of  the image. Perhaps a good test would be as follows: if you were reading  the document aloud over the telephone, what would you say upon  encountering this image to make the page comprehensible to the listener?  Aim for a functional and contextualized label or description rather than a  visual description. This suggestion is based on a comment made by Al  Gilman a number of months ago.        

      If Al is right (and he usually is), then there could be an argument for a  modification to HTTP that would facilitate the extraction of titles from  HTML head elements, text fields from PNG images, etc. I have not had time  to read through the HTTP specification (I am still working through the  HTML 4.0 draft in my spare moments), but one solution that comes to mind  is a pattern matching scheme. The server would read the file until a  pattern supplied by the client was matched, and then transmit all of the  data up to and including the octets that matched the pattern. This  approach would eliminate the need for the server software to be able to  interpret each particular file format (HTML, PNG, audio file formats,  etc.), since the pattern matching request would be provided by the client  (E.G. "</title>").    Patterns could be regular expressions, although it would probably be  necessary to adopt a more sophisticated technique for handling binary  files.        

      I have recently been devoting consideration to the reading order issue and  would like to share some initial thoughts.    For purposes of the present discussion, the following definitions hold:    1. "Document order" denotes the order in which the elements comprising a  document are given in the object language (E.G. HTML).    2. "Presentational order" refers to the sequence in which the elements of  a document are to be presented in the output.    Style sheet properties could be defined which enable the document order to  be modified according to specific rules so as to establish the  presentational order. This could be achieved by means of properties which  cause selected elements to be transposed within the document structure  during the formatting process. Thus, an element could be moved to the  beginning or end of the block defined by its parent element, or to the  beginning or end of its grandparent block, etc. This would enable certain  parts of the document (such as tables, perhaps also descriptions contained  within OBJECT elements etc.) to be moved to the beginning or, perhaps more  frequently in practice, the end of a section of the document, or indeed to  the beginning or end of the document itself. Selection of elements would  be based on CLASS or ID values. In the former case, all of the elements  of a particular class would be moved, with the movement operations taking  place sequentially throughout the document. It should also be possible to  move a selected element so that it precedes or follows another designated  element, the latter being identified by a specific ID value. Provision  should also be made for moving specific elements to the beginning or end  of the document, thus allowing navigation bars and forms to be relocated  as required. Perhaps this can be achieved by the generic movement controls  described above, given that the text of the document is entirely enclosed  within the BODY element; thus a command that moves the selected element or  elements to the end of the second level of the document hierarchy would  achieve the desired result (I am counting the HTML element as the first,  or outermost, level in the hierarchy).    The development of an ordering mechanism should not be considered in  isolation from the CSS work on notes. The treatment of an element within  the document as a note essentially involves two steps: (1) substituting a  reference marker (whether it be an asterisk, a sequential letter or  number, or another character) for the original element; and (2) moving the  original element to another location in the presentational order (E.G. to  the bottom of the page, the end of the paragraph or document division,  etc.). This second stage requires, at least in so far as it allows notes  to be collected at the end of a paragraph or other structural component in  the document hierarchy, the kind of control over presentational order that  has already been described. Moreover, for the purpose of spoken or braille  output, it is often convenient that notes be floated to the end of an  enclosing paragraph or section than is the case in print formatting.    However, the following example, which employs hypothetical style  properties for affecting the presentational order, would also be useful in  print:    <p class="note"> Text of note. [...]    and later in the document:  <h2 style="display: none" id="notes"> End Notes </h2>    A style property would be included in the relevant style sheet, or in the  head of the document, which would cause the notes to be moved, in order of  their occurrence in the HTML source, to a location which is defined as  immediately following the element with id="notes" (in this case, the  heading, which would not be displayed on screen due to the "display: none"  style property). Incidentally, I would like confirmation from a CSS expert  of whether, due to the default media type of SCREEN, the heading in the  foregoing example would be suppressed from screen output, but would still  appear in print or an audio rendering as desired.    Another style property would, of course, also need to be given, which  would define the kind of reference marker that would be used in the main  text of the document to indicate the note.    With regard to tables, it may be necessary to define style properties that  would enable elements to be arranged, in the presentational order, in  accordance with numerical values supplied in their ID attributes. I seem  to recall discussion of such a possibility on the list.    In closing, I wish to emphasise that I am definitely not an expert in the  document ordering issue, and have not had time to read relevant parts of  the DSSSL standard, in which a transformation language is defined that  could perhaps provide a suitable model on which to build a CSS mechanism  for rearranging the structure of documents. I am sure that members of this  working group who have had more experience in this field can quickly  decide whether the ideas expressed in this message are of any value.    Regards,    Jason.        

      Apparently an effort was made during the early stages of the WAI to  catalogue all of the anti-discrimination laws, in different countries,  which might be interpreted as mandating web accessibility. I am not sure  what the results of that survey were. Anti-discrimination is not an area  of law which I have studied in any detail, but it is my general  understanding that, since Australia's federal Disability Discrimination  Act covers the provision of goods and services, it would prohibit  discrimination against people with disabilities in relation to the service  which is provided to the public by a web site. The details are discussed  in a paper released by the Human Rights and Equal Opportunity Commission,  the URL for which I have forgotten.    I have heard that there were plans afoot in the United Kingdom to enact  comparable legislation.        

      Since the media attribute is meant to designate the type of medium in  which the document is to be presented rather than the type of output  device, I would amend my original suggestion as follows:    media="braille embossed" (formatting for a braille embosser)    media="braille displayed" (formatting for presentation by a refreshable  braille display)    It may also be desirable to include extra parameters for designating the  line and page dimensions of the braille device. I suggest that it would be  premature to include these suggestions in Tuesday's HTML release and that  the entire matter requires further consideration and discussion. The  implications of recent developments in braille display technology, which  may lead to the wider availability of refreshable displays that are  capable of representing multiple lines of text, should also be examined.    Jason White.        

      Two comments are in order here:    1. The guidelines document itself should comply to the HTML 4.0 strict DTD  and take advantage of all relevant features of the HTML specification,  especially in the marking up of the table which summarises its substantive  requirements.    2. It is, and ought to be, mandatory for authors to comply with a W3C HTML  DTD (or ISO HTML, assuming that the latter is adopted). Perhaps a note  could be added in the explanatory text which calls the attention of page  designers and software developers to the deprecated elements mentioned in  the HTML 4.0 specification, which ought to be avoided in favour of style  sheets, particularly when user agent developers have implemented the  latter in a reasonably consistent manner.        

      I think there has been some confusion between two distinct issues: (1)  client-side scripts, which involve a scripting language that creates  dynamic content, validates form entries, etc., and (2) client-side image  maps, which have been with us since HTML 3.2 and are widely supported in  practice.    If some user agents do not properly render the value of the ALT attribute  on an image map, then this is a problem for the user agent developer and  not for the author.        

        I noticed in Al's discussion points relating to the media type issue, a  suggestion that braille displays could be treated as terminal or TTY  output devices. This is only true in the most primitive applications in  in which a braille display is being used effectively as a screen reader;  computer braille codes are used to give an exact, one to one  correspondence between each character on the screen and a braille cell.  However, such an approach is extremely inefficient, and most braille  readers prefer to use the standard braille codes (for literary text,  mathematics etc.) which have been defined by various national and  international bodies. This often involves a system of contractions and  other conventions that are unique to braille. Furthermore, the formatting  of a document so that it will be optimally presented on a braille display  is essentially different from the presentation that would be appropriate  to an 80 character by 24 line terminal device.    I hope that Al was not suggesting that the media type of BRAILLE be  abandoned in favour of TTY.        

      Further to Josh's comment, why should the textual alternative be included  in the TITLE attribute of OBJECT? If I remember the HTML 4.0 specification  correctly, an empty OBJECT element (one that contains no content) is not  permitted. Thus, the guideline should state that the alternative text  belongs in the content of OBJECT, and that authors may wish to include a  brief label for the resource in the TITLE attribute. Some user agents may  simply present the title, and leave it to the user's discretion to decide  whether to read the more detailed text which is included in the content of  OBJECT.        

      On Thu, 18 Dec 1997, Charles (Chuck) Oppermann wrote:    > I think we're in agreement.  Going back to my original message, and ignoring  > the browser UI option (#3), which of the other two options do you prefer?  > Option #1 which defines a new directive, or Option #2 which changes the  > ordering of the rules?    Option 1 I take to be that which changes the definition of !important; so  that it only has effect when used within a reader's style sheet (any use  of !important; in an author's style sheet would thus be ignored, and the  author's rules would all have normal weight, thereby giving precedence to  the reader's explicitly important rules). This is the option which I  prefe. The only counter-argument is one of backward compatibility. If the  use of !important; in authors' style sheets is ignored, then it can still  be said that all valid CSS 1 style sheets are likewise valid in CSS 2, but  the definition of importance changes. Given that the !important; directive  is a little-used feature at present, I think this change could be made  without resulting in major backward compatibility problems.        

      Even if the user agent and access software both support frames, at prsent  they are still somewhat inconvenient to use, because the TITLE attribute  is not yet supported. Both Emacs/W3 and Lynx attempt to derive the title  from the NAME attribute, which, as mentioned on this list, is meant to  identify the frame to the software and not to be read by the user. The  value of NAME thus often provides only a very limited clue as to the  intended content of the frame.        

      I have just visited the GL page, following the recent announcement of the  updated guidelines, and noticed the following:    1. The GL home page has not been updated to provide links to the January  98 version of the various documents. This should be done so that a member  of the public who visits the GL page will be able to read the latest  drafts. In this respect it is noteworthy that the WAI home page, which is  publicly accessible, provides a link to the GL work area.    2. The January 98 documents still claim to be version 8 of the Trace  Centre guidelines. As Daniel pointed out late last year, the introductory  paragraphs should be changed to reflect the status of the documents as WAI  working drafts. In the acknowledgments, it should, however, be clearly  stated that this document is based on the Trace Centre's unified  accessibility guidelines, in order that the invaluable and continuing  contribution of the Trace Centre to their development be fully recognised.        

      This issue has been discussed before on this list, in the context of media  types. The outcome of those deliberations can be conveniently  recapitulated by contrasting two examples.    1. The user's default style sheet is of type media="aural". In this case,  only subsequent style sheets of type media="oral" will modify the user's  preferences. This is a desirable outcome, for it allows the author, should  he or she wish to do so, to exercise control over the audio rendering,  with the default being supplied by the user.    2. The media type of the user's default style sheet is a parameterized  value, for instance a hypothetical media type of media="screen enlarged",  which is not presently defined in any specification but which, for the  sake of illustration, may be regarded as designating a style sheet which  establishes a large font and perhaps a particular colour scheme. Now there  are two ways in which subsequent styles of the same base type, in this  scenario they would be of type media="screen", could be treated: (I) they  could be ignored; (II) they could participate in the cascade and thus  override the provisions of the default style sheet of type media="screen  enlarged".    Now it was generally agreed, in our previous treatment of this topic, that  behaviour (II) should be preferred. It was argued that, for example, it  would be absurd if the provisions of a default style sheet of type  media="braille embossed 40" could not be modified by a style later in the  cascading order of type media="braille". However, as the example of large  fonts indicates, there are cases in which behaviour (I) as enumerated  above would be the preferable option, thereby preventing style sheets of  type media="screen enlarged" from being subject to later styles of type  media="screen".    One solution might be to introduce a directive into CSS which, if present  in a style sheet, indicates that only subsequent styles which match the  media type exactly will participate in the cascade. Thus, in the default  style sheet of type media="screen enlarged", the proposed directive would  be included. Any later style sheet of type media="screen" would, pursuant  to this directive, be excluded from the cascade, since it would not  exactly match the media type of "screen enlarged". A fortiori, any later  style of type media="screen enlarged", whether supplied by the user or the  author, would match and would thus participate in the cascade.        

      Another difficulty with Al's approach is that an HTML user agent which is  4.0 compliant, but which does not support any style language, would be  unable to take advantage of such expressions as the following (this  is an approximation of one of the examples given in the 4.0 draft):    <link media="print" href="document.ps" rel="alternate">    Note that if certain base types, such as "print", "screen" etc., are  defined within HTML, there is no need for style support, or for dependence  on any particular style language, in order for the above expression to be  processed correctly.    Al is also correct in acknowledging that, according to his strategy, a  media type unaware style language will preclude the user agent from  determining the applicability of the style sheet to the output medium  before fetching the style sheet itself. I suspect, though can not confirm,  that DSSSL does not include provision for media types as such, and thus  the disadvantage just outlined may produce inefficiency in practice more  often than might be initially apparent.    The solution that I would like to propose adopts a midway course between  exhaustively defining media types in the HTML specification, and  completely letting go of such responsibility.    The HTML specification should first present the rules for correctly  parsing the MEDIA attribute. These rules were briefly set out in the  initial draft but have been dropped in the specification itself. It should  then be stated that an HTML user agent should be able to recognise the  following media types, irrespective of the style language being used [list  of fundamental base types]. This provision is designed to overcome both of  the limitations that were discussed earlier in this message. The  specification would then go on to explain that a conforming HTML user  agent may recognise additional media types, including such new base types,  and extensions to existing base types, as are defined in the currently  active style language, or, if supported, the style language which is  designated by the internet MIME type of the style sheet to which the link  refers.    This exposition is admittedly somewhat inaccurate but I hope that it  suffices to communicate the general scheme.    In closing I would like to remark that Al and I are perhaps not too far  from agreement on this issue.        

      On balance, I do not think at this stage that it would be appropriate to  add a LONGDESC attribute to IMG. Image maps can already be made partially  accessible by means of the ALT attribute which can provide a textual label  for each of the sensitive areas on a client-side map. I think we should  accept that this is the maximum degree of accessibility which can be  achieved by means of the IMG element, and encourage authors to take  advantage of the greater flexibility of OBJECT so soon as compatible  software is available and widely deployed. It is important to recognise  that a LONGDESC attribute is not supported by any existing user agent, and  that even if it were incorporated into HTML 4.0, it would not be supported  by future user agents until the HTML 4.0 compliant versions were released.  I doubt that manufacturers are likely to make available intermediate  versions of their software which support LONGDESC but are in other  respects not HTML 4.0 compliant. Rather, they will release and widely  publicise the HTML 4.0 compatible versions of their applications, which  will support OBJECT in any case. Hence LONGDESC is superfluous and  unnecessary.    I also concur with Al's point that it would be best to concentrate the  WAI's educational effort on promotion of the long term solution, rather  than encouraging authors to adopt an interim approach which has already  been rendered obsolete in principle.        

      Currently there are two alternative techniques which have been proposed as  long-term solutions:    1. Clusters of navigational links can be identified by using CLASS="nav"  on a container element, inserting DIV as a container if necessary.    2. Alternatively, MAP can be used to enclose the navigational links: <map>  <p> [links] </map> without any corresponding image and with no need forany  AREA elements.    Given the uncertain backward compatibility of (2) and Al's persuasive  argument that it is entirely consistent with the HTML 4.0 specification  and the existence of users' style sheets to establish widespread  conventions for associating particular semantics with CLASS values, I  would opt for solution (1) as originally proposed.    Both of these solutions are compatible with the preferred short term  strategy of including at the start of the navigation cluster a link to the  block of text which immediately follows it, for example, the next heading  or paragraph.        

      On Mon, 22 Dec 1997, Hakon Lie wrote:    > Personally I hate when dialog boxes pop up, and I'd certainly not want  > to acknowledge that the browser substitues Univers with Helvetica for  > every page I hit. The negotiation should happen seamlessly on my  > behalf and I, as a user, should be given a vocabulary which leaves  > room for negotiation. Is there a diplomat among us?  >     JW:: Perhaps the least intrusive option would be for the user agent, after  having processed the user's style sheet, to issue a warning, if necessary,  indicating that it contains illegal values. In the case of numerical  parameters, the closest legal value could then be substituted. Font names  admittedly lead to greater difficulty. An option in the user interface  could then allow exposure of the illegal values, and perhaps even allow  the user to change them if the automatically supplied substitutes are not  regarded as appropriate.    Perhaps this is largely a user interface question which could be  conveniently submitted to the UI group for further consideration.        

      I think there is a need for the following:    1. An evaluation of MATHML to determine whether it provides the necessary  semantic content to enable a reliable audio rendering to be produced.  Modifications, if necessary, could presumably be discussed with the  relevant groups within W3C.    2. The development of software that would accept MATHML as input and  produce spoken output. T.V. Raman's Aster is the only working example of  such an application so far as I am aware, and it is very impressive  (unfortunately I have never had the opportunity to use the software, but I  have heard an audio tape of the results).    3. Cooperation with developers of braille software, including the Maths  project within the TIDE programme, that will lead to the construction of  software for converting MATHML content into braille. Raised Dot Computing  and Duxbury Systems, both in the U.S., have recently incorporated support  for the North American braille mathematics code into their products. The  Maths project supports the British and German codes.    4. The development of a scheme for embedding XML content in HTML  documents, so that the mathematics can be fully integrated into the text,  while retaining the necessary semantic value.    5. Implementation by authoring tools and browsers of MathML and the XML  embedding scheme as mentioned above.    Concretely, this would involve cooperation between the PF, UI and tool  development activities of the WAI, as well as relevant groups within W3C.  The TIDE programme's Maths project, as already mentioned, is relevant,  I understand that the TIDE Maths project has also been considering SGML as  an input format, but O do not know who is involved in this work.        

      In an earlier discussion of this topic, Dave Raggett noted that as  software-based speech synthesizers, running with standard audio hardware,  continue to supersede hardware-based systems, it should become easier to  incorporate phonetic data processing into the over-all design.    The IPA has the advantage of being widely known and recognised. I  understand that it is the principal phonetic script used by linguists  throughout the world. It is supposed to include representations of all of  the sounds that are found in human languages. Is IPA included in Unicode?    Phonetic dictionaries could be created, in a format yet to be defined  (perhaps based on an XML DTD) and then linked into a document via RDF.  Each IPA character also needs to be associated with an SGML character  entity so that the phonetic markup can be typed into a standard text  editor. There are many users, including myself, who type HTML directly  into a standard text editor or word processor instead of using a dedicated  HTML authoring tool..    Unfortunately I know very little about the Unicode character set and thus  can not be of much assistance here.        

      Thank you for clarification of the language issue. May I suggest that when  defining style guidelines for the accessibility of HTML documents, that  proper use of the lang attribute be included as a requirement? Also, web  page developers should try to avoid cases in which a language change  occurs within a paragraph without any surrounding markup; thus, text in  the new language should always be distinguished by emphasis, a block  quotation etc. wherever possible, so that the lang attribute can be  specified.    Has the subject of markup for designating computer notation (namely,  extracts from computer programmes etc. that are presented within the  document) been raised as an issue in the discussion so far?    Regards,    Jason White.        

      Another scenario involves user agents that support multilingual speech  synthesizers: the text to speech conversion process is highly language  dependent.        

      Currently, there are few solutions available in this area. MathML, once  supported by appropriate braille and speech output software, will work,  but it is difficult to incorporate MathML into an HTML document at this  stage. I understand that most authors use in-line images as a kludge to  present the mathematical notation visually. Perhaps as an interim measure  they could use LaTeX markup as convenient ALT text (it has the advantage  of being relatively compact and well known).    The other alternative would be to use OBJECT to incorporate each  mathematical expression into a document:    <object type\"text/xml" data="equation1.xml" Equation 1, marked up in  MathML </object>    and likewise for every mathematical expression in the document.        

      Here is a solution that may be worth considering:    1. The user agent must delete any quotation marks that occur in the text  immediately adjacent to the start and end tags of the Q element.    2. Once any such quotation marks have been deleted, the user agent is  required to insert quotation marks in accordance with any applicable style  sheet. Speech-based user agents are of course exempt from this  requirement.    Incidentally, the practice of misusing the BLOCKQUOTE element as a means  of indenting text in circumstances in which no quotation is intended,  should be strongly discouraged. This issue ought to be discussed in the  WAI markup guidelines. In braille, block quotations are treated  identically to in-line quotations. They are never indented, and are always  enclosed in quotation marks. Sometimes a long quotation is treated as  though it were a separate paragraph, in which case the first line only is  indented, and the text is surrounded by quotation marks. Thus, the misuse  of BLOCKQUOTE would be of concern to braille readers.        

      The HTML 4.0 draft gives a list of priorities which determine how a client  should acquire the ALT text if no ALT attribute has been specified  explicitly. Perhaps it could serve as the point of departure for this  discussion.        

      The CSS 2 specification and now been announced as a W3C recommendation.  See the W3C home page, and in particular the press release at  http://www.w3.org/Press/1998/CSS2-REC        

      An on-line data base devoted to web accessibility was launched last month  by the Australian government. The URL is http://accessability.noie.gov.au/  (note to screen reader users: the word "accessibility" in the above URL is  misspelled; apparently this was a deliberate policy decision which I  personally consider to be somewhat ill-informed, given that, for example,  the DECTALK synthesizer pronounces "accessibility" and "accessability"  almost identically).    The data base is quite comprehensive and includes a description of each  entry.        

      Further to my last message, the sections of the CSS 2 draft which discuss  flow objects and the "visual flow model" appear to be of limited relevance  to the reading order problem. The flow model is primarily concerned with  the positioning of elements in a two-dimensional space (the canvas) rather  than manipulation of the document's structure. However, some of the  properties (FLOAT in particular) might perhaps be extended to accommodate  additional functions associated with controlling the presentational order,  as discussed in my previous message. It might of course be more convenient  to define entirely new properties rather than burdening the existing  properties with new syntactic constructs and additional purposes which,  although related to positioning in general, are not directly concerned  with visual formatting.        

      In response to Wendy's question, I think the suggestions referring to  ASCII art can be given as a single guideline; the avoidance of spaces and  non-alphanumeric characters within words deserves the status of a separate  guideline. It should be categorised as "recommended", given the strict  definition of "required" which is in place.        

      On Thu, 19 Mar 1998, Scott Luebking wrote:    > Hi,  > Can WAI establish a web site for legal information concerning  > web accessibility?  It be great to have a one-stop shopping center.  > It would need to be broken down by country.    JW:: I understand that in the early stages of the WAI, a project of this  kind was attempted, but that reliable information was not readily  obtainable. I think there is definitely scope for such a site. However,  the primary task of the WAI educational effort should be to persuade  authors and software developers to adopt universal design strategies out  of a sense of justice and responsibility, rather than to raise the threat  of legal liability. It is preferable to appeal to the high ethical  standards and integrity of web content providers and software developers  than to base one's argument on the provisions of antidiscrimination law.  Nevertheless, it may be useful to provide information concerning the  relevance of anti-discrimination laws in different countries to the  provision of web-based documents and services. The Human Rights and Equal  Opportunity Commission in Australia has already done so by releasing a  discussion paper, a reference to which is included in the WAI page author  guidelines.        

      I think the guidelines need to be edited for style, grammar and  readability. Cumbersome phrases such as occur in guideline B1 ("navigation  information and [...] presentations of information") should be avoided.  Suitable synonyms could be substituted for words such as "information"  provided that the meaning remains clear in the given context. Expressions  such as "making useful to all users" strike me as stylistically  objectionable: one could say "accessible", "intelligible", "convenient",  "navigable", "understandable", etc., with an appropriate term in each  context.    I am sure that, once the substantive issues have been finalised, the  editors will turn their rigorous intellectual skills to questions of  grammar and style, but it would be irresponsible of me at this stage not  to mention these aspects of the guidelines, which are integral to  effective communication. I think that style and vocabulary are significant  issues in the current draft. Technical terminology has been used  appropriately, but a more liberal choice of synonyms and careful attention  to expression would improve the text immeasurably.        

      AXIS and CLASS should be kept distinct. The possibility of a conflict  between a category name and a class used by a style sheet, is significant  enough to justify a separate AXIS attribute as proposed in the HTML 4.0  draft. The table markup should be as simple as possible, whilst providing  the flexibility that is needed for effective audio rendering. I would  therefore discourage excessive dependence on dictionaries or other  external data formats. Such supplements to the markup are useful  extensions, but should not be essential to the representation of the  table's structure.        

      A beginning or casual author would probably start by reading educational  materials which would include suggestions relevant to universal design  (E.G. documents produced by the Education and Outreach working group). The  next stage in this progression would be to look at the summary of the  guidelines which has been conveniently provided in the form of a table,  referring to the extended descriptions provided in the guidelines where  clarification is necessary. If examples and detailed discussion are  required, the techniques document would be consulted.    The page author guidelines have thus been carefully layered in such manner  as to take account of diverse reader needs. They are supplemented by the  invaluable efforts of the Education and Outreach working group.        

      I think the reason was that the user is expected to be able to set the  language of the braille or speech software manually if the LANG attribute  is not supplied.        

      Having read the editors' helpful comments in their recent summary of  changes, I would suggest that the guidelines indicate that future user  agents supporting speech and/or braille output may alter the reading order  of the document. In particular, navigation bars may be read only in  response to a command issued by the user, or may be moved to the end of  the document so that they are not repetitively announced at the start of  each page on a site. To facilitate such intervention, authors are advised  to identify explicitly the block of HTML that comprises the navigation  bar: E.G. <div class="navbar"> [...] </div> or to use LINK in the head of  the document as a substitute. The second alternative only applies where  the target documents provide tables of contents, indeces, previous and  next sections in a composite document, etc., and can thus be classified  according to the link types listed in section 6.12 of the HTML spec.        

      The question of what proportion of content authors will be able to take  advantage of these techniques is irrelevant to the observation that a  server which is configured to generate correct HTTP headers (especially in  identifying the language and character set of the document) is of benefit  to accessibility. HTTP headers should therefore be mentioned in the  guidelines.        

      The transcript of a web accessibility seminar that was presented in Sydney  during February of this year, is now available at  http://www.fl.asn.au/lawtech/access/seminar98.html    The occasion was organised jointly by the New South Wales Law Foundation  and the Victoria Law Foundation, and generously hosted by Blake Dawson  Waldron Solicitors.        

      nOn Tue, 16 Sep 1997, Dave Raggett wrote:    > On Tue, 16 Sep 1997, Jason White wrote:  >   > > What other kinds of dictionaries did you have in mind?  >   >   - Abbreviations  >   - Pronunciations  >   - Hypertext links  >   There are two alternative approaches that could be considered.    1: Define a single link type (rel="dictionary"); then develop an XML DTD  for dictionaries in general, with an attribute near the beginning of the  dictionary file that indicates whether it is an  abbreviation/phonetic//pronunciation dictionary, or a dictionary  containing hypertext links of the kind that Dave has described. If this  strategy is followed, then the user agent must retrieve the dictionary  file before it can ascertain what type of dictionary it contains. Could  this be a disadvantage?    2. Define separate link types, one for each kind of dictionary; or perhaps  one for abbreviation/phonetics/pronunciation dictionaries, and another for  dictionaries that provide hypertext links. If such an approach is adopted,  then user agents which are not speech-based (and this of course includes a  majority of HTML user agents) will not load dictionaries unnecessarily,  only to discover that they are pronunciation dictionaries and not  hypertext dictionaries.    Thus, the issue is whether the link type should indicate to the user agent  the type of dictionary involved, or whether this function should be left  to the dictionary file format itself, as suggested in option (1) above. I  would tend to support the second approach, since I think it would be  better for user agents to be able to decide, based on the link type,  whether or not to load a particular dictionary.        

      I concur with Charles' suggestions in respect of both A2 and A4.        

      A point of clarification: the proposed changes need only apply to CSS 2. I  would not expect CSS 1 implementations to be modified at all. The move  from CSS 1 to CSS 2 would involve a significant amount of software  development; and the improvements with respect to cascading could be made  as part of the migration.        

      On Sat, 16 Aug 1997, Al Gilman wrote:  > I see some alternatives to USEMAP on OBJECT that we should be  > prepared to discuss.  >   > One is to embed a link to the long description of the image in a  > client-side map of links.  [As with all MAP AREAs this would  > require ALT text.]  This suggests that IMG+USEMAP can meet  > minimum requirements, although OBJECT+USEMAP give better  > capability to say things well.  As Al recognises, this is not a viable substitute for the capacity to  include image maps by means of the OBJECT element, due to the degree to  which OBJECT allows the links to be embedded within the descriptive text.     > > The other approach is what, after my conversation with Murray  at > the meeting, I would call metadata-related approaches.  This  > involves getting accessibility needs integrated into a more  > general approach to how information about resources is made  > available.    It would be of interest to know how such an approach would operate  concretely to overcome accessibility problems. Taking Daniel's example of  a description which is to be displayed as an alternative to an image map,  with the link to each map area being incorporated directly into the  description, how would such functionality be reproduced using a metadata  approach?  From what Al has said, it is evident that metadata may have considerable  advantages in reducing the effort required of authors in preparing  accessible documents. Perhaps this is a convenient opportunity to consider  how such a solution would be implemented.        

      On Fri, 15 Jan 1999, Charles (Chuck) Oppermann wrote:    > Well then, be specific and reflect what the document is  "HTML and CSS  > Authoring Guidelines".    The guidelines are not specific to HTML or CSS, although the examples  associated with some of the checkpoints are.    "Web content" appears to express most accurately the essence of what the  guidelines are intended to address; thus my vote at this stage would be  for "W3C web content accessibility guidelines".        

      Firstly, I must correct an error which was made in my previous message  regarding dictionaries. Contrary to what I therein suggested, it is  possible to have a general link type (rel="dictionary") and still ensure  that a dictionary which is intended to control a speech synthesizer is  only loaded by speech-based user agents:    <link href="dictionary.html" rel="dictionary" media="speech">    The user agent can then retrieve the dictionary and determine from the  file format, which is yet to be defined, whether it contains phonetic data  or abbreviations and their expansions.    Now I would like to turn to the second issue, namely a possible ambiguity  in the definition of the default media type. This working group has  proposed, and the HTML/CSS working groups have accepted, that "screen"  should be the default media type. This default gives a correct result when  the target of the link is a style sheet:    <link rel="stylesheet" href="mystyles.css" type="text/css">    This refers to a CSS style sheet which, owing to the default media type of  "screen", will be retrieved by the user agent and acted upon only if  output is being directed to a screen display.    However, in the section of the HTML 4.0 draft devoted to the LINK element,  there are various other link types defined, for which a default media type  of "screen" would be inappropriate. Thus:    <link rel="contents" href="contents.html" title="Table of Contents">    In this case, the default media type of "screen" should not be implied;  the link to the table of contents is capable of being rendered in any  medium. For example, a speech-based user agent might announce the title  defined in the LINK element prior to rendering the text of the document.    Thus, media="screen" should only be the default where rel="stylesheet" or  rel="alternate stylesheet"    Is this correct, or am I falling into error and confusion again?        

      The guidelines state that where an OBJECT element refers to an image,  script or applet, alternative (textual) content must be provided where the  object in question conveys important information. I think this formulation  may give designers too much latitude in deciding which items convey  "important information" and which do not. The issue is made even more  confusing by the "priority 1" rating of this guideline.    Suggestion: Rewrite the guideline so that images are treated separately.  It should be made clear, as in other parts of the guidelines, that  alternative textual content is always required with respect to images. As  regards scripts and applets, an appropriate statement would be to the  effect that alternative content is needed where these convey visual or  auditory? information which is significant in relation to the purpose to  be fulfilled by the web page.    I am sure that the editors can express this idea more succinctly.        

      On Thu, 17 Jul 1997, Daniel Dardailler wrote:    > True, but one could argue that it is a perfect application for XML,  > where you could define a more semantically richer set of tags, using a  > small DTD with things like <ABBREV> and <EXPAN>.  >   > Anyway, I'll bring it up in the HTML forum.  >   Since XML syntax is reasonably stable, this solution would indeed be  suitable even in the short term, provided that W3C is planning to create,  or at least register, a certain number of official DTD's for use in  specialised applications.        

      There are three means of creating unobtrusive, or at least visually  appealing d-links:    1. Use the CSS DISPLAY property to prevent the d-link from being presented  in a graphical rendering of the page. For example: <a  href="description.html" style="display: none"> D </a> Note that the link  would nevertheless be displayed by speaking browsers, or exposed to  assistive technology via DOM or similar mechanisms. One might also use a  CLASS value and specify the style in the HEAD section of the document.    2. Use an invisible image with ALT text as the content of the d-link: <a  href="description.html"> <img href="invisible.jpg" alt="D"> </a>    3. Use a stylised d-link graphic. The code would be the same as that  exemplified in paragraph (2) above, save for the content of the image  file.    I think the page author guidelines need to recommend one or more of these  strategies, perhaps in an appendix, and include at least a single example.   This issue was raised in the authoring tool discussion held as part of the  WAI meeting at the WWW7 conference.         

      Another purpose of adding LONGDESC to FRAME was to allow a long  description to be provided where the content of the frame, designated by  the SRC attribute, is either an image or another non-textual resource.  Under such circumstances, instead of using SRC in the frame itself to  refer to the image, authors are supposed to provide a "wrapper page", that  is an HTML document which contains nothing other than an IMG or OBJECT  element, including the necessary textual alternative. However, recognising  that this is a cumbersome approach which some authors may not be inclined  to follow, LONGDESC has been added to FRAME and IFRAME. Thus, the long  description of the non-textual resource referred to by the SRC attribute  can be associated with the frame itself.    Also, LONGDESC enables a more detailed description to be given, where  necessary, of the nature of the frame's content (where this can not be  conveyed in the TITLE attribute).        

      Following Al's example, I wish to make explicit the constraints which I  take to be fundamental in proposing enhancements to the CSS 2  specification. These constraints apply both to the table reading issue and  to the tree transformation properties which I have proposed.    1. CSS syntax does not permit the use of variables, the construction of  loops or the conditional execution of commands. Perhaps the @MEDIA rule  can be regarded as amounting to a limited form of conditional statement,  but in general, such constructs are unavailable.    2. The concept of applying style properties to selected elements of a  document is fundamental to CSS 2, as is the basic syntax of selectors and  style properties.    3. The existing range of selectors and style properties, as defined in the  current CSS 2 draft, is, so far as possible, to remain unmodified,  although the WAI may propose such changes (if any) that are deemed  necessary for the purpose of ensuring accessibility. Extensions can  however be proposed with a greater degree of freedom, provided that they  can be justified as desirable for the purpose of enhancing the formatting  of documents in braille, audio or other media (such as text-only displays)  that are of importance to people with disabilities.    My tree transformation proposal fully respects the foregoing limitations,  since it envisages that the transformation properties would be applied to  elements which are to be selected on the basis of their CLASS and ID  values, in accordance with CSS syntax. The transformations are to be  applied sequentially throughout a document in the order in which the  transformation rules appear in the style sheet.    My suggestion for adding style properties to facilitate the audio  rendering of tables, modifies CSS syntax to the extent of permitting  commands to be embedded in text strings, whereby reference to the cells of  a table can be made. The essence of the proposal, however, does not rely  on this extension and could be implemented without it, albeit less  elegantly. It should be noted that in the current CSS 2 draft, the  sections on generic prefix/suffix text and numbering, two of the areas  which are high on the WAI agenda, are simply "place holders" and do not  contain any substantive material.        

      Given the urgency of the HTML 4.0 review, there are a few points that I  think could be clarified. Firstly, on the Formats and Protocols working  group page, it is stated that there are issues concerning alternate style  sheets and media types which are yet to be resolved. I would like to know  what problems remain to be dealt with in these areas. Secondly, should  this working group recommend that a TITLE attribute be added to the FRAME  element so that authors can specify a meaningful label for each frame? I  understand the present situation in this respect to be as follows. The  NAME attribute is intended to define a target to which reference can be  made via an URL fragment, for example in an anchor. NAME is an optional  attribute, in that it is implied in the published DTD. Clearly, the value  of NAME is not intended for human consumption, and nor is the value of  SRC, which gives the URL of the document that comprises the content of the  frame. This situation appears to be unsatisfactory. Lynx version 2..7.1  provides an interesting illustration of how a user agent can attempt to  make the best of it. Lynx displays a document in which frames are defined  as a series of links. The text comprising each link is derived as follows:   if the corresponding frame includes the NAME attribute, then that name is  displayed as the text of the link (E.G. "FRAME: INDEX", where "INDEX" is  the value of the NAME attribute); but if NAME is not specified, then the  URL of the target document, as given in SRC, is presented (E.G. "FRAME:   "sidebar.htm").     As suggested above, a TITLE attribute could be added so as to enable a  more adequate label to be associated with each frame. It would be best if  TITLE were required, but assuming this is not possible in the short time  available to us, I would suggest that a default behaviour be defined, such  as that exemplified above, for representing frames in a non-visual  environment.    The foregoing suggestions are only tentative and I would appreciate  comments from other members of the working group.        

      I concur completely with T.V. Raman's assertion that once a mechanism for  marking up notes has been defined, and the required style sheet properties  have been established to control their presentation in the print medium,  all that may be needed for purposes of accessibility is an additional set  of style properties to ensure that braille and audio formatting of notes  can be successfully effected. I also agree that any continued discussion  of general note markup would amount to straying too far from the topic of  accessibility. It should be recognised, however, that the availability of  a convenient method of representing notes in HTML is arguably a greater  priority for people with print disabilities, given the movement by the  International Committee for Accessible Document Design toward HTML as the  standard format in which text books and other academic and technical  materials are to be made accessible. Consequently, it is legitimate to  raise this issue in the context of the WAI, just as it has likewise been  deemed appropriate to address the need for print page indicators, which  also arises from ICADD involvement.         

      Comments on http://www.w3.org/TR/1998/WD-WAI-PAGEAUTH-0414    In the suggestions for revision which follow, I have first quoted the  existing text and then indicated the proposed change, preceded, for clarity,  with "JW:".    Abstract: "Tools that generate documents in HTML (authoring tools, file  conversion packages or other products) should produce documents that follow  these guidelines.    JW: "Software that generates documents in HTML, including authoring tools,  file conversion packages, data base applications etc., should produce markup  that complies with these guidelines."    Rating and Classification: "This strategy takes advantage of features being  incorporated into tomorrow's browsers     and assistive technologies (that  incorporate Web Access Initiative [sic] recommendations."    JW: ""This strategy takes advantage of features being incorporated into  tomorrow's browsers     and assistive technologies (that take advantage of  emerging standards and Web Accessibility Initiative recommendations."    Style and Structure: "Use style sheets rather than converting text to  images."    JW: Shouldn't this guideline be categorised as "required"? If text is  represented as an image, it can not be read by assistive technologies.    "Documents that use style sheets for     presentation allow users to adjust  the look of the document (e.g., larger print, color     contrast, etc.)  through personal style sheets or browser settings."    JW: "Documents that use style sheets for     presentation allow users to  adjust the appearance of the text (e.g., larger print, color     contrast,  etc.) through personal style rules or browser settings."    "Structural elements enforce consistency in documents and supply information  to other tools     (e.g., indexing tools, search engines, [...]"    JW: Automatic translation software should be mentioned here.    "To test if the text and background contrast is sufficient enough [sic] to be  read [...]"    JW: This is a tautology. It should say: "sufficient to be read".    Section 2: "Each image should have alternative text that represents [...]"    JW: "Each image should have a textual alternative that represents [...]"    "Provide a longer description for graphics that present important information  (especially     charts, tables, and diagrams)."    JW: Is it right to mention tables here? After all, a table is supposed to be  represented by proper HTML markup, not as an in-line graphic. Undoubtedly, it  is appropriate to include a summary of the table (for instance by means of  the SUMMARY attribute), but this is not relevant to the present discussion of  images.    "The D-link links to a page or a phrase at the bottom of the page with a          longer description of the graphic."    JW: "The D-link links to a separate page or a phrase? [should this be  "paragraph?"] at the bottom of the current document which gives a longer  description of the image."    "One final possibility is     to create an alternative page that is  accessible."    JW: Since we are discouraging the use of alternative pages, this should not  be mentioned here. It belongs in the "if all else fails" section only.    Perhaps the discussion of "images used as links" and ASCII art should precede  the detailed treatment of image maps. Those who are reading the document  quickly may assume that the remainder of the section is concerned with image  maps only, and could therefore miss the important guidelines at the end.    Section 3: "More information is available through the Java Accessibility page  at the Trace     Center."    JW: "More information is available from the references cited at the end of  this section."    Under "For more information", include a reference to the Trace Java  accessibility page.    "Note. More exploration is needed in this area. Please stay tuned."    JW: Is this proviso still necessary?    Section 4: "A text transcript of the video descriptions [sic] provides the  same information as in     recommendation 4.2, but in a text format."    JW: This should read: "transcript of the video description". The phrase "but  in a text format" does not convey much information and is implied by the term  "text transcript". Perhaps a better explanation could be provided.    Section 5: "This will be particularly useful for     future speaking  technologies that will read row and column labels for each cell."    JW: "[...] that can read row and column labels [...]"    "[...] are especially useful for non-visual     users."    JW: This should say: "non-visual readers".    Section 6: Should the discussion of images used as links be moved into this  section of the document? At least, it should be referred to explicitly, along  with the existing reference to the guidelines concerning image maps.    "For example, when associated with a link, it takes the user to the  associated     document."    JW: "[...] it takes the user to the destination document." (this sentence  needs further attention).    Section 7: "Please refer to the example in the Central     Reference  Document."    JW: Since the page authoring guidelines are intended to be relatively self-  contained, this illustration should be given in the appendix, along with the  examples of tables, ALT text, etc.    Section 8: find and exploit synonyms for the word "associate".    "Associate labels with their form controls.      Labels can be associated explicitly using the "for" attribute of the       LABEL     element."    JW: The second sentence should read: "This can be achieved using the "for"  attribute of the LABEL element, as shown in the following example.".    "The "for" attribute of the LABEL     element allows explicit association."    JW: This sentence is redundant and should be deleted.    "Include default, place-holding characters in edit     boxes and text areas."    JW: The classification of this guideline, namely "interim" should precede  this sentence instead of following it. The same suggestion holds in respect  of the next guideline as well.    Appendix: "The following example shows how to     associate header  information with the "headers" attribute."    JW: "The following example shows how to associate data cells with their  corresponding headers by means of the "headers" attribute defined in HTML  4.0."    Edit the following sentence, as required, to avoid redundancy.    "A speech synthesizer might render by speaking the following:"    JW: "A speech synthesizer might render this table as follows:"    "The following example associates the     same header and data information as  the previous example, but uses the "scope"     attribute rather than  "headers."    JW: "The next example associates the same header and data cells as before,  but this time uses the "scope" attribute rather than "headers"."    "This example might be rendered by a speech     synthesizer as the previous  example."    JW: "It should be noted that the spoken rendering of this table would be  identical to that of the previous example; a choice between the HEADERS and  SCOPE attributes is dependent on the complexity of the table and  considerations of convenience for the author, but does not affect the output  so long as the relationships between header and data cells are made clear in  the markup."    "Appendix B"    JW: Either make this into a sub-heading of a single appendix, or rename the  preceding section "Appendix A". At present, the latter is simply entitled  "Appendix". If two or more appendices are to be created, then the references  to "the appendix" in the body of the document need to be updated.    "In general, authors should specify alternative text that describes the  function of the graphic or image and not its visual appearance."    JW: The purpose of the ALT text is not to "describe" the function of the  graphic but to be a substitute which achieves the same function as the image.    "[...] what would you say upon encountering this image or graphic to make the  page comprehensible to the listener?"    JW: The phrase "or graphic" in this sentence is redundant.    "Note. Providing alternative text for images embedded with the OBJECT element  is a different beast and will be covered in the future."    JW: To the contrary, this topic should be briefly discussed now. The  essential principles are the same as for long descriptions, except that the  textual alternative will be displayed as an integral component of the  document rather than as a link to a separate page. If the textual alternative  is particularly long or inessential to the reader's comprehension of the  document as a whole, the author may wish to emulate the LONGDESC attribute by  including in the OBJECT element a link to a separate page containing a  description of the image (an example could be provided here if necessary).      Unordered lists: since CSS 2 allows audible cues to precede bulleted list  items, the recommendation that ALT text such as "item" be included, should be  marked as interim, and a note should be added mentioning audio style  properties.    Ordered lists: Since user agents are supposed to generate the item numbering  automatically,, the inclusion of this information in ALT text is surely  redundant and potentially confusing. A null ALT attribute should be used  instead.        

      When printed publications are transcribed into braille, it is often  important that the original print page numbers be preserved in the braille  copy so that braille and print readers can use a common standard of  reference. Furthermore, the print page number is the standard, indeed  often the mandatory form of reference in most educational and academic  contexts. The exact mechanism by which the print page number is formatted  on the braille page varies as a matter of stylistic preference.    In British braille, the print page number is included in the running  header, which appears only on right hand pages. In addition, at the exact  point in the text at which a new print page begins, a new line is started  in the braille, and the new print page number is centred on that line,  preceded by dots 2-5 (a colon).    By contrast, in North American braille, the print page numbers do not  appear in the running header. The braille page number appears in the lower  right corner of the page; the print page number in the upper right corner.  At the transition from one print page to the next, a new line is commenced  in the braille, which is filled by a series of hyphens, followed by the  new print page number, which is placed at the end of the line (after the  last hyphen).    Other countries may have different conventions. This whole issue needs to  be investigated further and incorporated into a comprehensive braille  style sheet proposal. This task should be on the agenda for the Formats  and Protocols working group.    Daniel and myself have discussed in detail a scheme of HTML markup which  would enable print page numbers to be indicated in an HTML document. See  http://lists.w3.org/Archives/Public/w3c-wai-wg/1997JulSep/0002.html  and all of the follow-up messages in that thread.    Another useful resource is my Braille CSS requirements document, which  needs to be updated:    http://www.w3.org/WAI/group/FP/braillecss.html    I would encourage those who are interested in participating in the  development of a braille style sheet system to read and comment upon this  document.        

      It may be necessary to define additional ACSS properties to control the  reading of tables, which could be incorporated into CSS 2. These should  include the ability to specify the order in which the cells in each row  should be read, and any text which is to be announced before or after the  contents of each data cell. Thus, to expand T.V. Raman's example, one  might envisage a two-column table, with the first column designating the  year, and the second giving the corresponding human population growth (as  a number of persons).    A style property could then be defined which would take a value similar to  the following:    "Population growth in {col=1} was {col=2}"    The cell designation is thus embedded within the text, enclosed in braces  as shown. More complex cell coordinates should be expressable, and of  course it should also be possible just to specify a reading order without  any surrounding text, as in:  "{col=2,h} {col=1,h}"  where the "h" suffix indicates that the corresponding header cell is to be  read prior to each cell. The table would thus be read row by row, with an  announcement of each column header prior to the reading of the associated  data cell.    Note that the foregoing examples make use of a syntax which differs from  that offered by CSS 2. I have represented the reading order as a string  which may contain text as well as embedded commands that refer to cells in  the table. Perhaps it would be better to take advantage of a coordinate  system (with variables that stand for the "current row" or the "current  column"), than to employ commands of the type exemplified above. If a  coordinate system were used, how would one handle cells which span rows  and/or columns, and still retain some degree of generality in the style  that specifies the reading order, so that it need not be rewritten for  each particular table?    The style property which I am proposing would take the form:    reading: STRING  where STRING may contain text and/or embedded commands as previously  described. The user agent would interpret any text enclosed in braces as a  command that refers to one or more elements of the table, according to a  command syntax that would need to be defined.        

      Proprietary extensions to HTML should be completely avoided. In the first  place, they tend to be layout mechanisms that would be better implemented  through style sheets. Secondly, they are only supported by specific user  agents and are thus detrimental to interoperability. This is a  particularly important point: an accessible document must be able to be  rendered equally well in a variety of different media with a range of  software and output devices. The effect of proprietary elements and  attributes is that the author's intention is only fully realised by a  particular user agent. Thus I disagree radically with Chuck Opperman's  assertion that recommending against the use of such extensions involves  moving beyond the purview of universal design. Use by all, irrespective of  ability, implies interoperability in the sense that the reader should be  able to access the document via different devices, employing different  HTML user agents.        

      I understand that one of the action items currently in progress pertains  to the development of a mechanism for representing print page numbers in  HTML documents. This requirement is especially significant when the HTML  document is a transcript of a text that was originally supplied in printed  form, and it is desirable that users be able to refer to the page numbers  of the source document. The most obvious application would be the use of  HTML in the preparation of electronic texts for people with print  disabilities.    I have thought of a solution which, if valid, would not require any  modification to the HTML Cougar proposal. Essentially, it involves taking  advantage of the id attribute defined by HTML Cougar, as in the following  example:    <P>Last line from print page 2. <span ID=ipp3> First line from print page  3.    This would make the pagination available to speech and braille user  agents. One disadvantage of this suggestion is that existing user agents  would not display the ID value as part of the text of the document.    It might even be possible for id values beginning with the letters "ipp"   to be reserved as print page indicators. If necessary, the page number  could be stated twice, once in an ID value and, immediately thereafter, in  the text of the document.     End of page 2. <span ID=ipp3> {3} Start of page 3.    I am not completely sure that the above proposal is technically accurate,  but I understand from reading Cougar material that the ID attribute is  available in sufficiently many contexts to make this kind of approach  feasible.  I also recall reading that id values must be unique; this would allow  verification software to detect inadvertent duplication of page numbers  within a document.    Jason White.        

      I like Ian's approach to the problem. There are already two changes logs  associated with the GL home page, one of which provides a detailed list,  whereas the other is more of a summary. It these logs can be maintained,  then it should be relatively easy to prepare a brief statement of changes  that could be distributed via the list with each release of the document.        

      On Sat, 11 Apr 1998, Alan J. Flavell wrote:    > I don't really understand what the drafters meant by "when a  > server-side map must be used", but I'm assuming they have some  > concrete situation in mind.  Are they for example thinking of a  > contest or puzzle, with the answers hidden in the server, and the use  > of a client-side map could give the answers away?     Each region of a client side map must conform to one of the shapes  supported by the SHAPE attribute defined in the HTML 4.0 specification. If  a more complex map is to be created, in which the regions are irregular in  shape, then the author has no choice but to opt for a server side map.  Hence it is necessary for the guidelines to provide an alternative  solution which can be applied whenever this contingency arises.        

      On Mon, 15 Sep 1997, Al Gilman wrote:    > At one point I believe that Dave Raggett and I were humming in tune  > to the tune that the link type should be for dictionaries and the  > dictionary should be for abbreviations, but the link type should not  > be so narrow as to be just for abbreviation dictionaries.  Does  > this change cause you any heartburn?  >   > --  I suppose the critical issue here is whether a user agent would need to  distinguish between different types of dictionaries that might be linked  into a document. What other kinds of dictionaries did you have in mind?  The user agent must obviously be able to recognise that the link refers to  a dictionary which is to be used to control the speech output by  substituting each occurrence of a defined term (such as an abbreviation)  with its definition (for example the expansion of the abbreviation). I  agree in general terms that a unified approach to dictionaries would be  desirable, provided that the foregoing requirement can be satisfied. I  have also noted Daniel's response to the suggestion of implementing  phonetic markup as a dictionary. Clearly, this possibility also needs to  be considered here.        

      Once again taking Al's lead, there is no doubt that greater flexibility is  achieved by classifying dictionaries in terms of the types of data which  they contain. Thus, if the user agent is informed (via REL and/or CLASS),  in advance of fetching the dictionary file, of the kinds of entries which  it offers, then the software can decide, on whatever basis is most  appropriate, whether to access the resource and, if so, how to process it.  Thus, a speech-based user agent might be configured to respond to  dictionaries containing abbreviations and/or pronunciation data, which  would then be relied upon during the conversion of the associated document  into an audio rendering (audio formatting).    If other members of this WG are supportive of this solution, then it  merely remains for us to work out the implementation details so that a  precise recommendation can be made. What we need, I think, is a key word  such as DICTIONARY, followed by a provision for a list of dictionary data  types to be given (either in the REL attribute along with the DICTIONARY  key word, or in the CLASS attribute). There is no need to define  exhaustively the types of dictionary data for which designators should be  reserved, but it would be best to name a few, such as "abbreviation",  "pronunciation" (or "phonetic"), "definition", "etymology", etc. We should  highlight those which are of most benefit to people with disabilities.        

      I originally sent this message to the HC list instead of the IG list. This  was an error, and I apologize to those who will now be receiving the  message for a second time.     ---------- Forwarded message ----------  Date: Thu, 23 Oct 1997 12:27:58 +1000 (AEST)  From: Jason White <jasonw@ariel.ucs.unimelb.EDU.AU>  Subject: Re: DESC and TABLE: descriptions for groups of elements    Al's META and LINK enhancements are intended to enable the logical order  of a document's contents to be preserved in circumstances in which the  successive blocks of text are not contiguous in the HTML file. This should  allow the correct reading order to be marked up, even if the author has  used tables to control the visual layout of the document. Of course, such  abuse of table markup should be discontinued in favour of style sheets,  which offer a much better means of specifying visual presentation, and are  in complete conformity with the semantics of HTML.    Al's linking proposal also enables external resources, including  descriptive text, to be associated with tables and other elements of the  document.    I doubt that the TITLE attribute of the DIV element is likely to be  misused. Consequently there is no need for ALT (or a comparable attribute)  to be added to DIV, and the same reasoning applies to LONGDESC, given Al's  linking proposal as already discussed.    I agree with Dave Raggett's observation that screen readers are becoming  increasingly anachronistic and should not be considered as the paradigm of  accessibility on the basis of which HTML design decisions are to be made.  Backward compatibility is no doubt desirable, but not at the expense of an  efficient, long-lasting design. The WAI should not introduce features into  HTML which are likely soon to be rendered obsolete as screen readers are  dispensed with in favour of genuine braille and audio formatting software,  which has access to both markup and style sheets.    I think that the current proposals achieve an appropriate balance between  backward compatibility and future-oriented thinking. LONGDESC is probably  the best example of this approach, as is Al's linking proposal to the  extent that it is intended to remedy the access problems which result from  the abuse of table markup.        

      I would be interested in receiving feedback from members of this list with  respect to my proposal for adding parameters to the braille media type for  designating (1) whether the output is to be embossed or presented on a  refreshable display; and (2) the dimensions of the braille device. The  form of the relevant media declaration would thus be as follows:    media="braille embossed [x] [y]"  or  media="braille displayed [x] [y]"  where the optional x and y values represent, respectively, the number of  cells per line and the number of lines per page available on the braille  device. The concept of a "page" is not directly applicable to braille  displays, since most of them can present only a single line of text at  once. However, larger displays have recently been developed, although they  are not as yet widely available and are the subject of ongoing research.    Rationale:    The principal reason for distinguishing between embossed and displayed  braille is that some stylistic features which are useful on paper, are not  applicable when reading a document with a braille display. These include  headers and footers, page numbering and block protection (to keep related  text on a single page), all of which may potentially be controlled by  style sheets. The formatting of tables may also differ depending upon  whether the document is being embossed or displayed dynamically by the  HTML user agent.    The justification for the optional x and y parameters that specify the  dimensions of the output device, is not so clear. The motivation for this  concept stemmed from consideration of the problems associated with the  formatting of tables in braille, and the need for tables to be presented  differently depending upon whether or not they exceed the line length of  the braille line. If the presentation of tables is to be controlled via  style sheets, then it may be desirable to create alternative styles, with  different parameters, for producing tables on devices with various line  lengths. For example, some braille embossers support narrow paper and thus  generate output of 32 cells per line, and braille displays vary in size  between 20 and 80 cells. The treatment of tables in braille is a complex  issue which in my opinion needs to be considered and discussed thoroughly.  I am aware that other subscribers to this list are much better qualified  in this area than I am, and would be interested to know whether a solution  has yet been proposed. The number of lines per page may also be a useful  parameter that would affect the formatting of tables, especially if they  were presented in paragraph form and there was a need to keep all of the  contents of a particular element in the table on a single output page. One  difficulty which is also relevant in this context is that the number of  lines per page varies depending upon whether six-dot or eight-dot braille  is being used. Although most braille codes available today employ a  six-dot system, eight-dot braille is becoming more common. For example, in  Denmark, it is being used to increase the correspondence between print and  braille character sets, thereby facilitating the deployment of  software-based translation schemes. For further details, see ch. 9 of Lars  Christensen's AITIIB research project report, details of which can be  found at http://www.sensus.dk/aitiib.htm. An eight-dot code is also  proposed by the Science Access Project at Oregon State University:  http://dots.physics.orst.edu/. Furthermore, it is theoretically possible  that six-dot and eight-dot codes may both occur within a single document,  thus resulting in different numbers of lines per output page in different  parts of the same text. The specification of page dimensions may not be so  important when reading a document with a braille display, since the  controls on the display, in conjunction with controlling software, should  provide ample means of traversing a document. However, in formatting  tables, it may still be desirable for style sheets to be able to ensure  that a certain item of text is presented on a single line, in which event  the line length parameter is once again crucial.    As is evident from the foregoing discussion, I have not reached firm  conclusions in relation to these issues. Nevertheless, I thought that it  would be appropriate to seek input from others rather than to continue  pondering these questions alone.    Regards,    Jason White.        

      I concur with Daniel's comments. In fact, the HTML 4.0 specification  provides a default algorithm which is to be applied whenever explicit  HEADERS and SCOPE attributes are not included. For the sake of simplicity,  should we recommend (as a helpful, not a required guideline) that HEADERS  and SCOPE be introduced in all cases, and also make it clear that HEADERS  and SCOPE are required whenever the algorithm would not properly identify  the headers associated with each data cell?    Stated differently, the recommendation would be that authors include  HEADERS and SCOPE just to ensure that the user agent will render the table  correctly, but these are only really necessary where the algorithm  detailed in the HTML 4.0 specification would otherwise fail.    The two sections dealing with the use of tables for layout purposes can be  collapsed into one, perhaps with two separate guidelines: (1) required, do  not misuse tables to generate columns of text; (2) recommended, do not use  tables for layout purposes at all, but take advantage of style sheet  positioning instead.        

      How is Murray's submission related to the WAI process and the various  relevant action items which the WAI working group has been considering for  the past few months? I thought there was intended to be a WAI results page  established that would act as a means of communicating proposals and  recommendations to the various W3C working groups, including the HTML WG.  I admit to being somewhat confused as to how Murray's action item is  integrated into ongoing WAI activities and the development of mechanisms  whereby the WAI can influence the development of W3C standards.  Incidentally, I would have expected the internal W3C procedures for  dealing with WAI recommendations to have been established right from the  outset of the project, as part of the W3C commitment to ensuring that its  standards enable web technologies and resources to be fully accessible.    Turning briefly to the specific proposals which Murray has mentioned, it  is clear that most of them have been discussed in detail on this mailing  list. Daniel Dardailler, Al Gilman and I have strongly and consistently  argued for the inclusion of image maps within the definition of the OBJECT  element. The question of whether ALT should be a required attribute of the  IMG element still appears to be controversial, as is the related issue of  whether an empty ALT string would be acceptable, even desirable, in  certain circumstances. I am surprised that Murray is suggesting that  LONGDESC should be associated with OBJECT. Rather, I understood that it  was intended to be an attribute of IMG. If I recall the HTML 4.0 draft  correctly, it effectively prescribes that the innermost OBJECT in a nested  series of OBJECT elements contain a textual description or label of the  resource to which reference is being made. Thus, the long description can  be incorporated within OBJECT (given that it is a block level element) and  there appears to be no need for a separate LONGDESC element or attribute.  The contents of OBJECT are displayed whenever the user agent is unable to  present the resource in question, or, presumably, in circumstances where  the user has opted not to display images, etc.        

      Has anyone developed a means of representing automatically numbered  footnotes in HTML? Currently, it is possible to represent footnotes using  anchors, as in:    [...] Text before footnote. <a name=txt1 href="#fn1"> [1] </a>  and at the end of the document:  <h2> Footnotes [really end notes] </h2>  <p>  <a name=fn1 href="#txt1"> [1] </a> Footnote text.  [...]    The disadvantage of this approach is that it requires the author of the  document to specify all of the footnote numbers explicitly, and to  renumber subsequent notes if a new note is inserted into the text. Also,  the footnotes appear as end notes rather than as actual footnotes.  Undoubtedly, authoring software could handle the renumbering if it were  designed to do so, but if the document is being typed directly into a text  editor or the authoring tool does not specifically support a convention  for representing footnotes such as that described above, then an  alternative means is necessary. This issue would presumably be of  importance in the ICADD work, given the intention to use HTML as the basis  for the production of academic and technical materials for people with  print disabilities. I have also noticed a substantial number of documents  on the web which make use of footnotes (anchors are used as in the above  example).    Has a better solution to this problem been proposed, and is there any  interest in developing one?        

      I must admit that I do not understand why the proposed attributes are  named AXIS and AXES. It is a geometrical metaphor which is not obvious to  the uninitiated. I am inclined to agree with Al that the names could be  changed, but would like to know what the original motivations for the  names AXIS and AXES were.        

      I agree that it would be advisable to use the TYPE attribute in this case,  but the basic guideline should still recommend that non-W3C technologies  be avoided, as there will necessarily be one or more user agents that do  not support it. Needless to say, if such file formats are used, standard  alternatives need to be provided.    I also encountered a page recently which required client-side Javascript  functionality in order for any of the links to be activated. This kind of  design needs to be avoided also.        

      On several occasions I have mentioned, in this forum, the need for  multilingual texts to be marked up appropriately with the LANG attribute.  Unfortunately, this suggestion has not yet been included in the  guidelines, and I fail to understand why. It is essential for both braille  translation software and speech synthesizers that the language always be  clearly identified.        

      There are two further issues that I would like to raise at this point:    1. The relationship between LONGDESC and the metadata approach which Al  has been patiently and consistently advocating for the past few months.  Conceptually, of course, the two solutions are not mutually exclusive: it  would be possible to make available both a LONGDESC attribute and an HTTP  mechanism, each of which would be in itself capable of correlating an  image with a long description. In practice, I wonder to what extent a move  in favour of the LONGDESC attribute, assuming that it were to be adopted  by HTML user agents, authoring tools and content providers, together with  increasing acceptance of OBJECT, would preclude the widespread adoption of  a metadata framework, perhaps even rendering it unnecessary. The impact of  LONGDESC on metadata is another imponderable which falls for consideration  in determining the merits of the proposed LONGDESC attribute. I am not  acquainted with the details of the metadata approach and do not know how  far it is from being widely available. Based on limited evidence I would  tend to support LONGDESC as a regrettable necessity, but this is of course  open to argument.    2. A few corrections need to be made to what I earlier said regarding  frames. The value of NAME is not an URL fragment; TARGET is a separate  concept which allows a document or other resource, designated by an URL,  to be loaded into a particular frame. Nevertheless, the general point is  still valid: NAME is not really intended as a title that can be presented  to the user, even though, as Lynx 2.7.1 demonstrates, it can be coopted  for this purpose. Furthermore, the example of frames which is given in the  HTML 4.0 draft highlights the fact that the resource referred to by SRC  can be an image, in which case, there is no provision for ALT text, let  alone a long description. In the absence of a metadata framework, it would  appear that modification of the FRAME element is necessary. Frames can be  nested, thereby realising quite complex visual structures, and the content  of any frame can be changed whenever a link is activated. How can such  functionality be conveniently transported into the braille or audio media?   How should an audio user agent render frames, and what implications does  this have for markup considerations? Can it be said a priori that it would  be best if each frame were labeled with a descriptive title, as proposed  in my earlier message?         

      Might it be possible to construct HTML guidelines which would enable a  long description to be associated with a server side map, but in a  visually unobtrusive fashion; analogously to using coordinates of (0, 0)  in a server side map as a link to a textual alternative? One approach  could be to define coordinates that refer to an area which is actually  outside the boundaries of the client side map, but which is appropriately  labeled as a description. The typical user, who is interacting with the  graphical presentation, would be unlikely to select these coordinates, but  a person who is reading the ALT text would be able to do so, thereby  activating a link to a long description. I am not sure whether this  solution would be feasible in practice. It is purely speculative, but  perhaps worth raising nonetheless. Another possibility would be to  associate a title with the image map (perhaps a heading above the map, or  a caption below it) which could serve also as a link to a more detailed  description.    Stated more generally, my question is whether guidelines that are  compatible with existing implementations and standards, but not  objectionable on the ground that, like the d-link proposal, they result in  substantial detriment to the visual appearance of a document, could be  developed to accommodate the Longdesc requirement with respect to image  maps.        

      On Mon, 15 Sep 1997, Al Gilman wrote:    > I think there is still another issue you raised which is  > approximately:  >   > Do images loaded in to FRAMEs have the  > same mapping and alternate-text   > capabilities as images imported with  > the IMG tag?  Should they?  A long term solution would be to encourage authors to import an image into  a frame by firstly referring to the image using OBJECT, in an otherwise  empty HTML document, being sure to include an appropriate textual  substitute for the image in the content of OBJECT; and then pointing to  the HTML document which has thus been created in the SRC attribute of the  frame definition. Thus, there would be an HTML document consisting of only  a title and an OBJECT element, which would offer an indirect mechanism by  which the image could be imported into the frame.    I agree however that a short term solution also needs to be sought.        

      It was decided late last year that any reference to what user agents have  or have not implemented, which by nature is transient and rapidly changing  information, should be left to third parties but may be linked to the  techniques document.    If I were designing a web site, I would want to include appropriate SCREEN  and PRINT style sheets to improve the visual presentation. Now it so  happens that I would be unable to see the results of such effort, yet I  would nonetheless consider it important that the style sheets be included,  whether they be borrowed directly from another source or adapted to meet  the particular demands of my documents. This scenario is completely  analogous to that of an author who edits and displays the document in a  visual setting but who nevertheless introduces attributes, following the  guidance and examples provided in the techniques document, to improve the  auditory and braille presentations. In short, when designing a document  with the aim of ensuring that it can be read with equal efficiency across  a range of hardware and software platforms and input and output devices,  it is sometimes necessary to take advantage of technical facilities that  are not applicable to one's own situation; and this should not be a cause  for concern.        

      There is no need to define any default browser behaviour for the rendering  of LONGDESC, other than in very general terms. The details should be left  to the discretion of the user and the software developer. The essential  point is that the HTML document to which the attribute refers will be  presented at the point in the principal document where the image would  otherwise appear, either automatically or at the request of the user. The  presence of LONGDESC will be indicated appropriately by the user agent,  for example by means of an audio cue, a special marker in the text (like  the D-link) etc.    For GUI browsers, the presence of LONGDESC should be exposed to external  applications such as braille and audio output software. I agree with Al  that GUI browsers should also indicate LONGDESC visually if graphics have  been turned off. However, being mindful of Dave Raggett's warnings, DOM  exposure should be taken as a minimal requirement; inclusion as an option  in the visual interface is an extra demand that can be made, though we  know in advance that it is likely to be rejected.        

      On Wed, 10 Dec 1997, Al Gilman wrote:    > ASG:: Enforcing some "meaning" or "intention" for HTML structures  > such as TABLE that is narrower than the range of useful things  > that the structure can and will do for you will likely be futile.  >   > HTML is a win because it is so natural.  The rule of natural  > language is "Whatever works."  This is short for the orthodox  > sentence "Whatever works, goes."  The syntactically unorthodox  > form is frequently used because it is usually understood.  >   > Occam's razor applies to languages and media.  The fewer rules  > one has to follow to get one's point across, the more desirable  > the language or medium.    >   JW:: However, it is the semantic value of the HTML markup which is relied  upon by, for instance, braille and audio formatting software to produce an  appropriate rendering in these media. Such a process requires consistency  in the meanings conveyed by the HTML elements and attributes, through  which the author's intention is manifested. Only under this condition  especially in the absence of braille or audio style sheets supplied by the  author, can the output software transform the structure and content of the  document into a format that will be appropriate, without misleading the  reader.    The question which thus falls to be considered, and this is best done with  the aid of examples rather than by attempting a purely a priori analysis,  is whether those structures which, semantically at least, are not genuine  tables would be misunderstood or inappropriately formatted if the  formatting algorithms that a braille or audio application would ordinarily  apply to tables were invoked. To the extent that such a problem would  arise, there is a need for authors to avoid table markup in cases where it  is so contrary to the intended semantics as to result in misleading output  in different media.    Two types of solution are available. Either the bad practices could be  dispensed with in favour of CSS positioning, or those practices could be  accepted, but accommodations made in the HTML markup (E.G. standardised  class names) which alert formatting software to the fact that what appears  to be a table is actually not so. My preference is for the first of these  options. To the extent that the decision of whether to use table markup or  style sheets will often be made automatically by authoring tools rather  than by authors themselves, there will be no additional burdens imposed on  the developers of HTML documents once CSS positioning is widely available.  In the long term therefore, I think the balance of these considerations  leads to the conclusion that the abuse of table markup ought to be  discouraged and that more appropriate strategies, involving style sheets,  provide a semantically appropriate solution that satisfies the  requirements of all media.    Natural language affords a variety of means by which unorthodox usage can  be explained in order to avoid misunderstanding. HTML, is much less  flexible in this respect, and therefore the intended correlation between  markup and meaning, as defined in the specification, needs to be observed  more strictly. The formatting of documents in braille and audio media is a  process which highlights the fundamental importance of this requirement.         

      On Tue, 23 Sep 1997, Al Gilman wrote:    > > The short answer is the RDF is intended to be used  > > to identify resources and make assertions about  > > what those resources are. So, you could say that  > > a resource exists at a specific URL and that it  > > is a "phonetic dictionary". Any application that  > > wanted to find a phonetic dictionary would look  > > at the list of resources identified and get that  > > resource.  > >   >   > Jason, is that concrete enough?  Or should we try to   > expand on this scenario to make it clear how it works?  >   Provided that RDF enables the dictionary resource to be described with  sufficient flexibility, then I agree that it offers the best solution. RDF  has not been mentioned in our previous discussions on this mailing list,  and I was unaware of it until today. Is there a specification available?    Returning to the immediate problem, what consequences would exploiting RDF  have for the definition of a dictionary link type, or does RDF avoid the  LINK element altogether?    The main requirement is that it be possible to associate several  descriptors with each resource, so that a dictionary could be described as  containing, for example, both abbreviations and phonetic data, as  exemplified in my earlier proposal.    The HTML 4.0 specification already defines a number of link types,  including glossary, index, contents, etc. Presumably at least some of  these are likely to be superseded by RDF in any case. Is that right?        

      It is also necessary to distinguish how the alt attribute should be  defined in the HTML specification from the usage suggestions that would be  included in style guidelines. However, the treatment of alt by user agents  could at least be partially explained within the HTML specification itself  rather than in UI guidelines. HTML 2.0 and 3.2 already offer suggestions  as to how certain features of HTML should be presented to the user. Thus,  a recommendation that the value of alt should be defaulted to the name of  the image file, would be reasonable to include within the HTML  specification, provided that the WAI Working Group were to reach a  consensus in favour of that approach. My personal opinion is that authors  should be strongly encouraged to devise their own labels for images, and  that in the case of purely decorative graphics such descriptive contents  should be kept as brief as possible. However, this suggestion belongs  within the province of style guidelines.     Another possible point of confusion for authors is that HTML offers the  potential for both an alt attribute and an advisory title whenever an  image appears as the content of an anchor element. In most instances that  I have encountered of proper use of the alt attribute, the link target is  described within the alt text. Assuming that readers would not benefit  significantly from both an advisory title and a brief description of the  image, the value of one of the two attributes would become redundant in  such cases. Again, this is probably an issue that should be addressed in  style guidelines.     I am also in favour of making provision for long descriptions of images,  which could be used whenever the meaning conveyed by a graphic can not be  stated in a brief description, as is required by the alt attribute. I  would rather wait to read the action item before making further comments  on this matter.    Jason White.        

      The purpose of the transformation is to relieve the author of the document  or of the DTD from the responsibility of writing braille and audio style  sheets. Once the document has been transformed into valid HTML, the user's  default braille or audio style sheet can then be applied. This is also the  basis of the ICADD mechanism and should offer a good solution in those  cases in which the semantic content of the document can be adequately  represented in HTML.    The draft XML syntax specification omits those aspects of SGML that were  used by ICADD to effect transformations of this kind. What is needed, I  think, is a document transformation facility that is built into XSL or  another widely deployed style or scripting language, so that an XML  document can be linked to a transformation script or style sheet, which  the user can invoke to convert the document instance into HTML. Braille  and audio style sheets are then applied in the usual manner.        

      On Wed, 11 Nov 1998, Marja-Riitta Koivunen wrote:  > What I really would like to have is a navigation bar that is always  > available to the user at a consistent place in each page and which highlighs  > the current selection. The highlighting tells the user immediately where he  > is at that site (what he selected earlier) and the navigation bar what the  > other higher level topics are. This is important for orienting every user.    The guidelines which require consistency in the design of all pages on a  site, should partially meet this requirement. However, another mechanism  which is also relevant here is the LINK element, with the predefined REL  and REV values provided in the HTML 4.0 specification. This approach was  briefly mentioned in today's teleconference, but it was not decided  whether authors should be encouraged to use this technique, and what  recommendations the user agent group should make with regard to it.    Since the usage of LINK is defined in HTML 4.0, a conforming user agent  should support it; but how well is it implemented by current software? I  assume that a user agent which directly supports, for example, speech  output could read the links automatically or at the user's request, and  that they could also be made available via the DOM to external software  components.        

      I agree that equivalent text does not describe the function of the  graphic, but rather fulfills it. This point had been made before and, due  to inattentiveness on my part, I had not noticed that it was not reflected  in the actual text.        

      I realize that the original proposal was that the link should refer to a  small, practically invisible, image file. I had thought that it might be  possible to avoid specifying an actual image file by giving a null value  for SRC, but Daniel has kindly corrected me. A null SRC value is to be  taken as referring to the base URL.    At a more general level, perhaps the "invisible d-link" idea should be  regarded as complementing LONGDESC rather than as a substitute for it.  LONGDESC offers more control to the extent that the user agent can  determine how it is to be acted upon, whereas d-link, in any of its forms,  must be explicitly activated by the user as a link to the description or  textual alternative to the graphical resource.    There is an independent argument in support of including LONGDESC (or a  comparable attribute) in the FRAME element.        

      Upon reflection, it is plainly evident that the image itself, together  with ALT text, should be found within the document rather than as part of  a style sheet. If an audio or braille-based user agent is formatting the  document, then it will only apply styles which are explicitly labeled as  pertaining, respectively, to the AURAL and BRAILLE media types. Thus, the  author's SCREEN (or perhaps PRINT) style sheet, in which the image  corresponding to the list bullet is referred to, will under such  circumstances be ignored completely by the user agent.    Consequently, if the image is intended to convey any semantically  significant content, then it will need to be included in the HTML document  itself, in the manner that Daniel has suggested.        

      A structure which divides the guidelines into sections according to  the relevant features of HTML would presumably make it easier for an  author to locate the appropriate parts of the document as required. This  purpose is achieved by the current parallel with the HTML specification.  Perhaps the checklist could be organised differently, for example by  grouping problems and solutions in order of their frequency of occurrence,  with the most common problems listed first. This strategy assumes that it  is possible to make such an estimate. Of course, one could always write  two or three index documents which group the guidelines in different ways.        

      Since they are not found in any W3C HTML DTD, they should be avoided  altogether. They might be mentioned in the techniques document as examples  of proprietary extensions, but authors should be validating their  documents against a W3C DTD anyway (preferably HTML 4.0), and thus it  should become clear which elements and attributes are standard and which  are not.        

      The proposed say-before and say-after properties (I am using Al's names)  have my support as well. They are similar in design to my speakrow and  speakcell properties.    In connection with the latter, Al is correct in observing that the HEADER  variable in SPEAKCELL would require the user agent to be able to identify  the headers associated with the current cell (namely the cell which is to  be spoken). Given the HEADERS and SCOPE attributes in HTML, this  requirement should be easily satisfied. The only problem here is that the  solution would be somewhat HTML-specific and may not apply to other  structured document formats such as XML documents, at least without  software support from the user agent and appropriate markup constructs in  the DTD.        

