      On Mon, 5 Nov 2001, Jesper Lillesoe wrote:  > Am I the only one having problems with the dtd:  > http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.dtd  > It seem like there is missing a "(" at line 159 col 23...    You are not alone, this has already been noted and corrected in [1]. Let  me know if you have any problems with that version!    [1]  http://www.w3.org/Signature/Drafts/xmldsig-core/xmldsig-core-schema.dtd        

      At 10:33 3/30/2001 -0800, John Boyer wrote:  >Your problem has little to do with a 'consistency' issue on C14N, and is  >trivially solvable.  The solution you are considering is fraught with  >problems.  Details below.    I fear that it is not trivially solvable, but it's not through any fault of   C14N.    ><john>  >As to your practical problem, it does not appear to have a very  >difficult solution.  The fact that it is a sign-then-encrypt scenario  >does not mean you are restricted to two black box operations to be done  >in precisely that sequence.  If you know it is a sign then encrypt, then  >you should simply apply the C14N to the block to be encrypted, then  >affix the signature, then perform the encryption.  ></john>    If you are a single signor-encryptor this works, but it doesn't if its two   different parties. Consequently we need to define an encryption process that   allows one to serialize and then encrypt some portion of a parsed document   such that the decrypt leaves it in as untouched a state as possible:           canonicalize(foo) == canonicalize(decrypt(encrypt(foo)))    ><john>  >When you C14N the <el2enc> element, you are canonicalizing it outside of  >the context of its parent, so transferring the xml:lang into the element  >is necessary.  To wit, you may have an application scenario where you  >send only the encrypted blob (containing the scrambled version of the  ><el2enc> element) to the holder of the appropriate private key.  The  >absence of xml:lang in such a case would be detrimental.  ></john>    I think I agree with this: this is a fine behavior for canonicalizing prior   to signature. But it is problematic as Hiroshi describes for serialization   of the parsed XML that is about to be encrypted.    So in the relation, where foo is some parsed XML (a node or item), the bit   is we need an XML serialization algorithm that maintains the identity:           canonicalize(foo) == canonicalize(decrypt(encrypt(serialize(foo))))  the question we are considering is can serialize=canonicalize and Hiroshi   has pointed out a case where this is problematic.      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      John, here's my draft, feel free to tweak/add as appropriate, I have one explicit question for you at the end.    WG:Other comments/corrections before we send this to the Core WG?  ______    Comments on XML Infoset [1].    While Canonical XML [2] is not based on the XML Information Set specification, future canonicalization (C14N) algorithms might be. Consequently, these comments try to identify limitations of the present C14N design in the context of the latest Infoset draft. As a point of history, Canonical XML was originally based on a selection and serialization of Information Set items. When Canonical XML was transferred to the XML Signature WG, it was changed so as to be based on XPath because XPath provided useful features related to document subsets (serializing portions of an XML document) and was already a W3C Recommendation.    These brief comments do not contain any editorial or substantive comments or suggestions. Instead, it points out similarities and divergences should a canonical form ever be based on [1].    [Infoset]  http://www.w3.org/TR/2001/WD-xml-infoset-20010202  [C14N] http://www.w3.org/TR/2001/PR-xml-c14n-20010119     __    The Canonical XML specification identifies three limitations where:    >The difficulties arise due to the loss of the following information not available in the data model:  >1. base URI, especially in content derived from the replacement text   >  of external general parsed entity references   >2. notations and external unparsed entity references   >3. attribute types in the document type declaration   >http://www.w3.org/TR/2001/PR-xml-c14n-20010119#Limitations    While some of these issues arise because information was "not available in the [XPath] data model" they also arise from the fact that this information is not represented in a standalone well-formed XML document which was one of the goals of Canonical XML. Where applications are concerned with this information, the Canonical XML specification (non-normatively) mentions how the information might be reintegrated into the canonical form if it will undergo subsequent processing -- but typically it is not, it is merely used in the hash computation of the signature creation. Having this information available via the Infoset makes the task of the application that wishes to do this much easier.    1. Canonical XML requires that Base URI be explicitly declared to mitigate problems of resolving relative URIs when the URI context is not known or when external entities with relative URI are incorporated into the document. This information is explicitly part of the InformationSet data model.     **However, if I have a InfoSet and BaseURI compliant parser which resolves an external entity without explicit BaseURI declarations, would the BaseURI Infoset properties still be available via the heuristics of finding the BaseURI given in that specification:    >4. Resolving Relative URIs   >4.1. Relation to RFC 2396   >RFC 2396 [IETF RFC 2396] provides for base URI information to be embedded within a document. The rules for determining the base URI can be summarized as follows (highest priority to lowest):  >http://www.w3.org/TR/2000/PR-xmlbase-20001220/#rfc2396      2. "The loss of external unparsed entity references and the notations that bind them to applications means that canonical forms cannot properly distinguish among XML documents that incorporate unparsed data via this mechanism." [C14N]    C14N only preserves name of external unparsed entity references from the complete set available under the Infoset {name,  system identifier, public identifier, or notation}. An application with all of this information can more easily generate an additional signature reference over the actual external entity.    3. "the loss of attribute types can affect the canonical form in different ways depending on the type. Attributes of type ID cease to be ID attributes. Hence, any XPath expressions that refer to the canonical form using the id() function cease to operate... Applications can avoid the difficulties of this case by ensuring that an appropriate document type declaration is prepended prior to using the canonical form in further XML processing." [C14N]     This information is preserved in the Information Set. However, as stated earlier, it's loss in canonical form is a result of the choice to create a standalone XML serialization, this data would be lost  under this constraint even if the C14N was based on Infoset though it might be easier to prepend the appropriate DTD as recommended above.    __    >http://www.w3.org/TR/xml-infoset/#intro  >Furthermore, this specification does not define an information set for documents which use relative URI references in namespace declarations. This is in accordance with the decision of the W3C XML Plenary Interest Group described in [Relative Namespace URI References]. Thus the value of a [namespace name] property is always an absolute URI with an optional fragment identifier.     This corresponds with Canonical XML design:    >http://www.w3.org/TR/2001/PR-xml-c14n-20010119#DataModel  >Note: This specification supports the recent XML plenary decision to deprecate relative namespace URIs as follows: implementations of XML canonicalization MUST report an operation failure on documents containing relative namespace URIs. XML canonicalization MUST NOT be implemented with an XML parser that converts relative URIs to absolute URIs.    __    >http://www.w3.org/TR/xml-infoset/#intro  >Entities  >An information set describes its XML document with entity references already expanded, that is, represented by the information items corresponding to their replacement text. However, there are various circumstances in which a processor may not perform this expansion.     Canonical XML purposefully fails when external parsed entities can not resolve.    __    >http://www.w3.org/TR/xml-infoset/#intro  >Base URIs  >Several information items have a [base URI] property. This is computed according to [XML Base]. Note that retrieval of a resource may involve redirection at the parser level (for example, in an entity resolver) or below; in this case the base URI is the final URI used to retrieve the resource after all redirection.     Canonical XML can also work with explicit declarations of Base URI, see issue 1 above.    __    The Infoset specification introduces the concept of a "Synthetic Infoset" that is not a result of parsing an XML document; instead its a Infoset of partial XML that might result by use of an API or DOM. This corresponds to the "document subset" of Canonical XML.    __    Information Set provides for Entity and CDATA start and end mark information items.     {John: could you take a stab at describing how this is useful in dealing with PIs in external entities?}      __   Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 08:30 99/08/24 -0400, david.solo@citicorp.com wrote:   >Based on the recent discussion, I want to propose the following resolution  for    >the detached/embedded and transform discussions.    Part of my confusion related to the intermediate steps of content which have  no representation in the syntax -- they area intermediate steps.     >In order to address this, I'm proposing moving back to a variation on  prior    >suggestions in which the sigInfo element always contains a single  reference (a    >resource element) to the object being signed(which may be a manifest, a  PDF    >file, etc.).            The resource element in sigInfo contains the location, a set of    >transformations to be applied prior to digest calculation (e.g. c14n,    >exclusion, encoding), and the digest alg and value (calculated over the    >contents of the object element or the referenced document, but excluding  the    ><object> start and end tags.  An embedded object may be contained within  the    >signature element, but not within siginfo.   >   >This approach allows switching between embedded and detached signatures  without    >breaking the signature (as long as we get the digest computation rules  right),    >and separates the c14n of sigInfo from the transformations applied to the    >object.  It does impose the cost of an additional digest calculation in  some    >instances.   >   >In addition to documenting and refining this (example below), I expect the    >draft for next Monday to also begin to define some of the keyInfo and  algorithm    >structures.  I should have the new draft out later this week.   >   >Dave   >   >P.S.  My citicorp.com email address is currently in send-only mode (?), so  send    >any replies to dsolo@alum.mit.edu   >   >---   >   >Sample revised syntax:   >   ><signature id="...">   >  <signedInfo>   >    <c14nAlg type="null"/>   >      <!-- applies to signedInfo, should have a default value -->   >    <sigAlg type="rsaWithSHA-1"/>   >    <resource>   >      <reference type="http://..." href="..."/>    >      <transformations>   >        <!--applies to object-->   >         <c14nAlg type="http://..."/>   >         <encoding type="http://..."/>   >      </transformations>   >      <digestAlg type="sha-1"/>   >      <digestValue> a23bcd43 </digest>   >    </resource>   >    <signedAttributes>   >      <attributeData type="http://...">19990824132700Z</attributeData>   >    </signedAttributes>   >  </signedInfo>   >  <object ID="...">   >    <!-- present if embedded object -->   >    jhasodutoinwoiahsh   >  </object>   >  <keyInfo type="keyName"> 3 </keyInfo>   >  <sigValue> dd2323dd </sigValue>   ></signature>   >   >Attachment Converted: "I:\3attach\WINMAIL3.DAT"   >    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      http://www.w3.org/Signature/Drafts/xmldsig-core-991001.html    1. Includes changes based on that days discussions.          http://www.w3.org/Signature/Minutes/990930-tele.html  2. Includes section 7 text from Bartel, will send more tonight.  3. Includes text from Eastlake on MIME types.  4. Includes additional editing from Reagle for clarity/organization.          _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

          text/enriched attachment: stored          

      At 12:31 PM 6/13/00 -0700, Marshall Rose wrote:   >first, you really ought to be talking to the rfc-editor@isi.edu, since   >they're the ones who manage the rfc editorial process.    Ok, done.     >in particular, you don't get to do pdf, or html, and postscript when   >publishing an rfc. (well, they'll allow postscript for figures, but you'll   >get so much feedback that you'll prefer to chew off your right arm rather   >than actually publish anything in postscript...) this means that the   >translater is going to have to be very, very smart, or you'll need to allow   >dual markup for the same content. messy.    I'm not following. RFC2222 [1] requires ASCII. [2] specifies an XML source  format that could generate ASCII. RFC2629 specifies an XML source format  that generates ASCII and HTML. So we don't have to go from source (xml) ->  output (pdf) -> source (xml) -> ascii ?    [1] http://www.ietf.org/rfc/rfc2222.txt  [2] http://www.w3.org/XML/1998/06/xmlspec-report-v21.htm  [3] http://www.ietf.org/rfc/rfc2629.txt     >from it. however, ascii art is the lowest common denominator. the entire  RFC   >database is available in biblio format for including as references (which  is   >a major selling point).    ASCII art is tricky. However, this bit only hassles those that need to  present in both the IETF and W3C. One could have a graphic element type, and  an alternative type, which might even be included as the Web Accessibility  Initiative encourages this sort of thing.    However, one day there might be neat SVG to ASCII art formats, AND you never  know, IETF might permit HTML/XML one day. <grin>     >it's not really clear to me that a harmonization effort would work, given   >the limitations in rfc 2222. however, i could certainly imagine someone   >writing some XSLT that would translate from the 2629 format to whatever the   >new format becomes, presumably because the new format would be a functional   >superset.     Do you have a public list set up for discussion of and maintaining 2629? If  not, would you mind having those discussion in this forum? Dan Connolly,  would this be acceptable to you as the guy that started this list?    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 15:56 8/11/2000 -0400, Donald E. Eastlake 3rd wrote:   >Here is a modified version of the section on X509Data as per the   >discussion in Pittsburgh:    Ok, including with tweaks.     ><p>An <code>X509Data</code> element within <code>KeyInfo</code>   >contains one or more identifiers of keys or identifiers of 509   >certificates or X509 certificates or X509 certificate revocation lists   >that may be useful for validation.     Tweaked (compact and trying to preserve our definition of validation, which  this has nothing to do with):  An X509Data element within KeyInfo contains one or more key identifiers or  X.509 certificates (or the certificates' identifiers or revocation lists).  Five types of X509Data are defined:       _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 10:20 10/6/2000 +0200, Gregor Karlinger wrote:  >I DO think that inserting whitespace text inside SignedInfo will break the  >signature, since  >  >* even a validating parser must not remove insignificant white space during  >   parsing. Instead, he must inform the "application" whether white space is  >   insignificant or not.  >  >* We have not defined any rules in the XMLSignature spec (which is the  >   norm for the "application") how a XMLSignature application must treat  >   whitespace in the SignedInfo element and its descendants.  >  >* And finally, canonical XML does not remove whitespace text.    Hrmmm... well my immediate goal was to make your examples a bit more pretty   like Kent's example from the last version [1]; this has white space   indenting in SignedInfo. However, Tidy started as an HTML processor and   white space isn't important in that context for element content. But I think   your right, in our context it  does matter. Consequently, this means that   while you might verify Kent's Signature and Kent might verify your   Signature, your two applications (when signing the same document with the   same key and everything else equal) will yield a different SignatureValue   depending on how you output the XML.    Regardless, I restored your tested examples (if I grabbed the right ones out   of my attach directory! <smile>) to [2], and if someone provides me with   pretty and tested examples, I'll include them.    [1]   http://www.w3.org/TR/2000/WD-xmldsig-core-20000918/signature-example-rsa.xml  [2] http://www.w3.org/Signature/Drafts/WD-xmldsig-core-latest/    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      http://www.w3.org/Signature/Minutes/000907-tele.html  >* ACTION: Reagle, email poll of which option people want.  >* ACTION: Reagle, get Brian/Barb to tweak text once resolved..    Based on the summary of options provided by Merlin [1] it is presently clear   that 2 OR 4 (everyone seems to agree supporting both is not good) are the   preferred methods. My present tally is as follows:    2) B64 (C(P(ASN1(D(data))))) (PKCS#1 wrapped digest)  a. Merlin Hugues  b. Mark Bartel    4) B64 (OID . C(P(ASN1(D(data)))))  a. Philip Hallam-Baker    If you have an opinion on this matter (or need to correct the above tally),   please make it known by close of business (eastern time) Monday.    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0398.html      _________________________________________________________  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 13:20 99/09/09 -0700, John Boyer wrote:   >Document Closure    John, could you please define "document closure"?    ___    http://work.ucsd.edu:5141/cgi-bin/http_webster?closure&method=exact    From The Free On-line Dictionary of Computing (15Feb98)     closure   1. <programming> In a {reduction system}, a closure is a data structure that  holds an expression and an environment of variable bindings in which that  expression is to be evaluated. The variables may be local or global.  Closures are used to represent unevaluated expressions when implementing  {functional programming languages} with {lazy evaluation}. In a real  implementation, both expression and environment are represented by pointers.     A {suspension} is a closure which includes a flag to say whether or not it  has been evaluated. The term "{thunk}" has come to be synonymous with  "closure" but originated outside {functional programming}.     2. <theory> In {domain theory}, given a {partially ordered set}, D and a  subset, X of D, the upward closure of X in D is the union over all x in X of  the sets of all d in D such that x <= d. Thus the upward closure of X in D  contains the elements of X and any greater element of D. A set is "upward  closed" if it is the same as its upward closure, i.e. there is no d greater  than an element which is not an element. The downward closure (or "left  closure") is similar but with d <= x and a downward closed set is one for  which there is no d less than an element which is not an element.     ("<=" is written in {LaTeX} as {\subseteq} and the upward closure of X in D  is written \uparrow_{D} X).     (16 Dec 1994)       _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      Examples of the three files can be found temporalily at:    http://policy.w3.org/schema/signature-schema-dtd.xml  http://policy.w3.org/schema/xmldsig-core-schema.xsd  http://policy.w3.org/schema/000105.dtd                  _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      http://www.w3.org/Submission/2001/08/Comment  >... This submission will be referred to the attention of the XML Protocol,   >the XML Signature, and the XML Encryption Working Groups' email lists for   >the reasons stated above. This submission may also be of interest to   >participants of the upcoming Workshop on Web Services.      Forwarded Text ----  >This message is to inform you of the Director's Acknowledgment of  >the following Submission Request:  >  >         XML Key Management Specification (XKMS)  >         30 March 2001  >         Authors:  >                 Warwick Ford, VeriSign  >                 Phillip Hallam-Baker, VeriSign  >                 Barbara Fox, Microsoft  >                 Blair Dillaway, Microsoft  >                 Brian LaMacchia, Microsoft  >                 Jeremy Epstein, webMethods  >                 Joe Lapp, webMethods  >  >The complete Submission Request, including the submitted materials and  >specification, is publicly available at:  >  >         http://www.w3.org/Submission/2001/08/  >  >The W3C Team comment is located at  >  >         http://www.w3.org/Submission/2001/08/Comment  >  >Abstract  >  >         This document specifies protocols for distributing and  >         registering public keys, suitable for use in conjunction  >         with the proposed standard for XML Signature [XML-SIG]  >         developed by the World Wide Web Consortium (W3C) and the  >         Internet Engineering Task Force (IETF) and an anticipated  >         companion standard for XML encryption.  The XML Key  >         Management Specification (XKMS) comprises two parts --  >         the XML Key Information Service Specification (X-KISS) and  >         the XML Key Registration Service Specification (X-KRSS).  >  >  >The W3C Contact for this Submission is Joseph Reagle <reagle@w3.org>.  >  >Section 8.3 (Acknowledgment of a Submission request) of the W3C  >Process Document explains the significance of the Director's  >acknowledgment, at:  >  >http://www.w3.org/Consortium/Process-20010208/submission.html  >  >         Publication of a Note by W3C does not imply endorsement  >         by W3C, including the W3C Team or Membership.  >         The acknowledgment of a Submission request does not  >         imply that any action will be taken by W3C. It merely  >         records publicly that the Submission request has been  >         made by the Submitter. Documents that are part of an  >         acknowledged Submission request may not be referred to  >         as "work in progress" of the W3C.  >  >A listing of all acknowledged Submissions can be found at  >  >         http://www.w3.org/Submission/  >  >For Tim Berners-Lee, W3C Director;  >Janet Daly, Head of Communications  End Forwarded Text ----    __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      [woops, didn't finish]  http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JanMar/att-0250/01-transforms2.htm    It would probably be useful to show the example in 6.6.3.4 in the context  of the transform and Xpath element.    >SignatureValue and KeyInfo child elements and the and the DigestValu    (typo)    In the SignatureValue example I might be confused (these small screens at  the IETF make it hard for me to think <smile>) but why eliminate  DigestValue? That element type is reserved for the reference digests,   which do not change during actual signature generation. The digest value  of the SignedInfo does change, but that is not explicitly represented so  it need not be eliminated. Also, eliminating KeyInfo (and any  objects) seems odd. This is at the signers option, but if I were signing  the Signature, I'd want to sign that info as well. Also, would it be  better to set the context node to the the closest ancestor Signature  element (instead of at the document root)?  A good way to test that Xpath  expression would be to match it up to a variant of Ed's killer example  (make one of the examples enveloped) <smile>    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JanMar/0226.html        

      Under windows, some of the dialogs could be made a bit more efficient. For   instance, when I hit control-f (Find) it'd be nice of the cursor was in the   text entry box. Also, when I do a link the cursor should be in the URL field   and the default text of "D:\PROGRA~1\Amaya\Windows\bin\\" should not be   present.    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        In response to [1]; cc'd to chairs since I think it is a common issue to all  W3C WGs.    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/1999OctDec/0132.html    At 21:32 99/10/21 -0400, Donald E. Eastlake 3rd wrote:   >Seems like a good argument for a shorter namespace URI, like   >"http://w3.org/sig-v1".    >>At Thu, 21 Oct 1999 16:06:57 -0700 , Jim Schaad wrote:  >>In this example, the first 62% of the document (roughly 840 characters) is  >>the same for all signed messages. (This assumes that the same  >>canonicalization and signature algorithm are routinely used.)  This means    I would certainly like smaller namespaces, but (unfortunately) the namespace  I provided is in compliance with the editorial/namespace allocation policies  of the W3C -- though I'm not sure where they are formally documented, but  TimBL stated www.w3.org is the host name of the W3C, so not much to do  there. I don't think W3C would allocate a top level directory for a  namespace and the W3C tends to lean towards dated spaces...    1. For xml-namespace purposes I don't see this as too much of a readability  problem since you can declare it once and use a prefix.  2. For xml-namespaces when expaned in c14n form and hashed, we have a unique  problem that we are going to have _lots_ of redundancy that can lead to  weaker signatures. I hope we create a nonce element that one can stick at  the beginning of the signature.  3. For readable property types I do see this as a big problem, stuff like:          http://www.w3.org/1999/10/signature-core/manifest   is pretty ugly. It'd be nice if there were a "entity" or "macro" (similar to  prefix) that one could use to map namespaces to something more terse.      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      Ok, Done360 and IBM should now be reflected in:          http://www.w3.org/Signature/2001/04/05-xmldsig-interop.html    __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 09:44 7/27/2000 +0200, Gregor Karlinger wrote:   >Correctly, it should look like:   >   >  (<Reference (URI=)? >   >    (Transforms)?   >    (DigestMethod)   >    (DigestValue)   >  </Reference>)+    ahh... I call those parentheses (wasn't sure if bracket meant [ ;)!)     >>  >?[GK9]Only correct for values created with methods   >>  >specified by XML-Signature standard   ...   >I am OK with the current datatype definition, but currently it is   >contradicting   >with the explanation of section 4.2:   >   ...   >I suggest to tweak the text as follows:   >   >  While we specify a mandatory and optional to implement SignatureMethod   >algorithms,   >  user specified algorithms are permitted. Both algorithms specified by  this   >  specification and user specified ones MUST use Base64 [MIME] as their   >encoding   >  method.    Changed.     >>  >?[GK11]Why is it always base64 encoded? I suggest the   >>  >same mechanism as with SignatureValue, i. e. the encoding (if any) is   >> determined by the DigestMethod.   >>   >> Do you mean there is an attribute in DigestMethod, or that it is   >> an implicit   >> parameter? (Please include complete proposal.)   >   >Now, with my suggested new text for [GK10], my remark [GK11] gets obsolete.   >Both SignatureValues and DigestValues shall be Base64 encoded in any case.    Ok.     >>  >?[GK20]Only a single certificate possible here?   >>   >> ?   >   >The first sentence in section 4.4.4. reads:   >   >  An X509Data element within KeyInfo contains one or more identifiers   >  of keys/X509 certificates that may be useful for validation.   >   >It says "one or more X509 certificates" in a X509Data element, which   >seems reasonable, since I can include a whole certificate chain and   >not only one EE certificate. But the grammar (now, in your latest   >editorial copy both Schema and DTD) only allow for a single certificate.    Addressed in other email, Barb said limited to 1.     >>  >?[GK22]Content Model is different from that in the   >>  >Schema Definition   >>   >> Based on previous comment Editors' copy reads:   >>   >>    <!ELEMENT X509Data ((X509IssuerSerial | X509SKI | X509SubjectName)+ |   >>                       X509Certificate | X509CRL)>   >   >See also my comment on [GK20] above.    Given you only have one cert, I think this is ok, right?     >>  >?[GK26]Why is there still this superfluous   >http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000AprJun/0188.html   >   >If we make this restriction (I do not see an argument against it), I   >   >to reject the SignatureProperties element at all, since it only works  as   >   >an additional "container" level between Object and SignatureProperty,   >   >nothing else.     Right, I agreed it is superflous and wanted to see if anyone else opposed  it's removal. I will confirm next week at the FTF.        _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 13:30 99/09/23 -0400, dee3@us.ibm.com wrote:   >@@@ Since signaturevalue is opaque, it has no internal structure visible.  So it   >doesn't have to be content, one of whose advantages is that it can be  composite.   >It's also the case that ' value=""' is shorter thant '><signaturevalue'.  These   >may not make any sense as reasons from a data model view but they are  probably   >how some people in the WG are thinking.  I agree that <dsig:sigval   >encoding="base64">8uj38idk</dsig:sigval> where encoding defaulted to base64   >would be more logical.    Ok. I didn't make that change, but once we do the big syntax jiggle, I think  we'll want to be consistent with the way we use attributes and element  content.     >  <dsig:keyinfo>   >     <dsig:keyattributes>   >       <dsig:keyname>3</dsig:keyname>   >       <dsig:keyvalue>4</dsig:keyvalue>   >       <dsig:keyretrievalmethod>urn:DH</dsig:keyretrievalmethod>   >     </dsig:keyattributes>   >  </dsig:keyinfo>   >keyinfo is a property that relates signature to keyattributes.  keyattributes   >has numerous properties (keyname, keyvalue) all with different values.   >   >@@@ I'm not sure you need the "keyattributes" level but otherwise I tend to   >agree with you.    This is the trick with using "striped XML syntax" to represent the data  structure. keyattributes is there such that one can say "keyinfo is a  property that relates signature to keyattributes." For instance the DLG  would look like where '('$resource')' and '"'literal'"':    (signature) --keinfo--> (keyattributes)          (keyattributes) --keyname--> "3"          (keyattributes) --keyvalue--> "4"    Or translated into tuple syntax    {signature, keyinfo, keyattributes}  {keyattributes, keyname, "3"}  {keyattributes, kevalue, "4"}    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      >I've updated the internal tool to correspond to the Last Call release.  >It does better at finding schemas to validate with.   >If you give it as the only argument a file with is a schema with the   >right namespace on the root <schema> element,   >(i.e. http://www.w3.org/1999/XMLSchema) it will automagically validate   >it with the schema for schemas.     What if I have a declaration and doctype so my examples also validate  against a DTD? I can't find the DTD nor XSD within [1] and any reference to  them seems to cause errors ... ?    [1] http://www.w3.org/TR/2000/WD-xmlschema-1-20000407/    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 07:13 5/18/2001 -0700, johnmessing wrote:  >I would make mime-type optional.    They are both optional [1]. The question is can we find a compelling   reasoning for maintaining both of them, and if so, how do they interact?    [1] http://www.w3.org/TR/2001/CR-xmldsig-core-20010419/#sec-Object      <element name="Object" type="ds:ObjectType"/>      <complexType name="ObjectType" mixed="true">        <sequence minOccurs="0" maxOccurs="unbounded">          <any namespace="##any" processContents="lax"/>        </sequence>        <attribute name="Id" type="ID" use="optional"/>        <attribute name="MimeType" type="string" use="optional"/>        <attribute name="Encoding" type="anyURI" use="optional"/>      </complexType>      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      Hi Gregor,    At 10:04 00/04/14 +0200, Gregor Karlinger wrote:   >  In [1] I found out that you have not found one of my reported typos.   >  Actually the parenthesis can be found in section 2.1.1 (and not in   >  2.2.1, as I stated before):     That's why I couldn't find it! <smile> Fixed.     >I just have glanced at both the schema definitions and the new schema   >drafts. Unfortunately the schema drafts have undergone lots of changes   >(apart from the change to simpletype/complextype), e. g.   >   >  * the '*' value in maxOccurs is now called 'unbounded'   >   >  * the former group attribute "order" with values like "sequence",  "choice"   >    has been rejected. These semantics now can be exressed by subelements   >    named "sequence", "choice".   >   >  * the former simple type "uri" is now called "uriReference"   >To put it in a nutshell, I think we must (once again) redesign our schema   >definitions so that they conform with XML Schema again.    Right you are. Odd. Perhaps I can explain it in that I've been using Henry  Thompson's validator and maybe it's still permitting bits of the older  syntax. However, he's presently rewriting it for public release, so I'll  speak to him about the above.      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      I can't find the reference, but I remember being asked about the ability for   attributes from external namespaces to be included within the Signature   element types for extension purposes. For example:    <Signature xmlns="..." xmlns:tricky="..." tricky:not-valid="Tuesdays">  ...    Historically, they're hasn't been much support (or a proposal even) for this   functionality. If there was, I'd have great concerns about it because of the   interpretation folks would lend to such attributes (as demonstrated in the   example above). I prefer people make syntactic extensions through the Object   element, and semantic extensions (what it means and what you are signing)   via SignatureProperties and Transforms.    __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 09:19 AM 7/21/99 -0400, Mary_Ellen_Zurko@iris.com wrote:   >It's always fun to see which culture will dominate the other in each aspect   >of this working group. The minutes are clearly in W3C style. I'd like to   >put in a plea for IETF style minutes in the future. W3C style is to capture   >detailed though sketchy notes. IETF style is to produce short readable   >paragraphs that convey the essence of that part of the meeting. As much as   >I enjoy seeing my name in lights in the former style, I would prefer the   >time-savings and clear communications of the latter style.    You realized you've just nominated yourself as scribe at the next FTF you  attend, yes?! <smile> As already stated I rather like the notes, first they  clearly state resulting action items, and they give a sense of the issue,  who participated in that discussion, and what the general direction/closure  of the issue was. I see the goal of the minutes as a record of consideration  if/when those issues come back up again. Regardless, it is often nice to  provide a succinct paragraph level summary of what happened. I prepared such  a summary [1] from the Workshop notes which are quite large. [2] But this  can be a lot of work, and as Donald says we have to do the best with what  resources we have.    Regardless, can you point me to a good example of IETF style notes?    [1] http://www.w3.org/DSig/signed-XML99/summary.html  [2] http://www.w3.org/DSig/signed-XML99/notes.html    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      Reminder to W3C Members: In order to gauge the stength of community  interest, member organizations have the ability [1] to vote and/or comment  on a proposed charter/activity. [2] The deadline is tomorrow. If you want  your company to participate in the approval of this activity (on the W3C  side) but you are unsure how to do so, contact your AC representative. [3]    [1] http://www.w3.org/Consortium/Process/#ActivityProposal  [2] http://lists.w3.org/Archives/Member/w3c-ac-members/1999AprJun/0011.html  [3] http://www.w3.org/Member/ACList.html  _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 12:28 7/26/2000 -0400, Ed Simon wrote:   >Ed responds:   >If we can enforce, to a reasonable degree, that XSLT <Transform>s indeed   >have   >a <stylesheet> root element, then I think the derived benefits of    >interoperability more than outweigh the cost of two or three more lines in   >the schema.     I'm not sure how to. I was thinking we could define our own XSLT root and  pretend its of the XSLT namespace, or even create our own schema stub with  the root node defined and everything else open (so we don't have to recreate  a whole schema). But, I'd be happier with some prose in that section stating  a recommendation over the content. So if you want to propose some prose or  clever schema tricks, please do so. <smile>     > (It would certainly be nice is XSLT did provide a schema and   >I hope they do in their next Recommendation version.)     The XSLT spec is littered with comments saying they plan to next time around.    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 09:30 1/12/2001 -0800, Brian LaMacchia wrote:  >This is the issue on which I am confused: why do you believe we have to  >prohibit X509Data/PGPData/SPKIData elements that contain only children from  >an external namespace?  Thinking about it more, I really don't see why we  >should ban structures like this:  >  >         <PGPData>  >            <MyPGPNS:foo>barbaz</MyPGPNS:foo>  >         </PGPData>    Because I want to strongly discourage this! If someone is going to have   something from MyPGPNS, what's the benefit/meaning of having this included   in our namespace qualified PGP element? This is meaningless to parsers and   schema validators. How would they define their own schema such that children   are going to get used from their namespace in our context (and away from   their own parent)? This approach of ANY (trying to hack an extensibility   mechanism when schema provides a very nice one) pretty much destroys schema   classes and the meaning between the elements. It also makes it unlikely that   if a useful construct is built, it will be useable to others.    --    <ds:PGPData>     <ds:PGPKeyID>foo</ds:PGPKeyID>  </ds:PGPData>    Is well defined and can be strictly schema validated, and used as a class   elsewhere.    --    <ds:PGPData>     <ds:PGPKeyID>foo</ds:PGPKeyID>     <mypgp:GreatElement>bat</mypgp:GreatElement>  </ds:PGPData>    Is confusing. What's the relationship between PGPData's and GreatExtension?   GreatExtension had a parent, but now it's just been plucked from it's schema   and stuck in PGPData, maybe in its schema, it was never intended to be used   alone like this (because of the definition of its parent), but now it is!   You've advocated the need for this for extension capabilities in the short   term because schema isn't a REC yet, and I've budged. However, any other   KeyStructure standards that are written expecting to be used like this I   would object to.    Plus, if the above instance ended up being a useful structure, others can't   extend it themselves as a class. It's a mule (donkey+horse) and unable to go   further.    --  <ds:PGPData>     <mypgp:PGPData>       <mypgp:BetterPGPKeyID>foo</mypgp:BetterPGPKeyID>       <mypgp:GreatElement>foo</mypgp:GreatElement>     </mypgp:PGPData>  </ds:PGPData>    Has the unique characteristic of being ambiguous (relationship between the   two PGPData's) and when disambiguated (requires human) redundant! It should   be under KeyInfo.    --    <mypgp:PGPData>     <mypgp:PGPKeyID>foo</mypgp:PGPKeyID>     <mypgp:GreatElement>foo</mypgp:GreatElement>  </mypgp:PGPData>    with the schema declaration:    <complexType name="PGPData">    <complexContent>     <extension base="ds:PGPData">      <sequence>       <element name="GreatExtension" type="string"/>      </sequence>     </extension>    </complexContent>  </complexType>    Is clean! A parser knowns that any instance of mypgp:PGPData is just like   ds:PGPData but with a new element!    >but could we just do that with a minOccurs="1" on a sequence, like this:  >  >    <complexType name="PGPDataType">  >      <choice>  >        <sequence minOccurs="1">  >          <element name="PGPKeyID" type="string" minOccurs="0"/>  >          <element name="PGPKeyPacket" type="ds:CryptoBinary" minOccurs="0"/>  >  >          <any namespace="##other" processContents="lax" minOccurs="0"  >           maxOccurs="unbounded"/>  >        </sequence>  >      </choice>  >    </complexType>  >  >Is that allowed?  This would also work nicely for X509Data & SPKIData.    My main concern in an editorial capacity has been to clarify any ambiguities   in the spec. In discovering/understanding your need for this extension hack,   we've moved towards deploying the ANYs consistently in the limited context   of complementing/extending elements from the dsig namespace. BUT I'm opposed   to going so far as to allow them to sit alone as you suggest. If we go   there, I want to take it back to the WG and the schema reviewers. In fact,   we've made enough tweaks we need to post this to the WG regardless -- and   I'm thinking it might be useful to move this thread to the WG (including   this email, if you'd like to forward your first one?)      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      http://www.verisign.com/rsc/wp/xml/xkms_spec/xkms_spec_wp.pdf    Some of these comments might be the result of my own careless reading, but   this is what I scribbled in the margin for what it's worth:    >Tier 1 Processing of the <ds: KeyInfo> element by the application is   >delegated to a service.    This is later called the Locate service, might as well include definition   here.    >Tier 2 Validation Service As in tier 1, but in addition, the service   >reports further information    "Validation" might be confused with "Signature Validation" in that a reader   might think the service actually validates the signature. (Maybe "Binding   Service"?) Either case, it'd probably be good to call it Binding Validation   and distinguish between the formal definition of Signature Validation.    >Tier 3 Assertion Service Establishment and management of long term trust   >relationships.    Is this a generalizable assertion service?    >of the URI and Type attributes is mandatory    Type is now optional (prose and schema disagreed (in your spec too), but now   harmonized:  http://www.w3.org/TR/2000/CR-xmldsig-core-20001031/#sec-RetrievalMethod    ><ds: KeyInfo>  >   <RetrievalMethod .../>  ></ ds: KeyInfo>    You should qualify the RetreivalMethod with ds: too .    ><Locate> <Query>    I wonder if the query/response could be generalized using XPath (perhaps   less appropriate) or XML Query (they have a data model and algebra, haven't   designated an XML syntax yet though).    ><Validate> and <ValidateResult>    Is there a data model behind the request, the input, and output? Should the   Query have an ID to match one then provided in the ValidateResult?    >Authenticating the response messages using the XML Signature Specification.    Where in the content model do these Signatures go, and which elements must   be signed?    >Authentication  >An XML document node that provides information that authenticates the   >request.    Probably better to call this an XML element type (instead of document node).          __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

          text/enriched attachment: stored          

      Slight change of bridge logistics this week:    Thursday January 6, from 12pm-1pm ET  The dial-in number:  505-766-5458   Participant code:  635391    AGENDA:  0. WG status and solicit other issues.  1. Core spec edits/status.  2. Preparing for FTF meeting:          2.1 Upcoming WG last call.          2.2. A FAQ/scenarios document to address use cases.          2.3 Generating validating XML Signature syntax.          2.4 Generating applied examples.      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        The last two open issues for XMLDSIG [1] (aside from discussion and   editorial tweaks) included questions about the format of the base64 type and   invariances resulting from one person using schema validation, and another   not.    In the last two weeks we've addressed these by:  1. Receiving feedback [2] from the Schema WG as to the lexical forms of   base64 types. I'll also forward the results of our minutes to that WG with   respect to our preferences for its schema normalized form [3].  2. Understanding that schema validation is like any other transform: if   transmitter executes it, but the recipient doesn't, the signature may break.   This is best addressed by the use of an explicit transform [4]    Consequently, I have marked these issues as closed and Don and I will start   the process to advance the spec to the next maturity level in the IETF and   W3C.    [1] http://www.w3.org/Signature/20000228-last-call-issues.html#CandidateREC-2  [2] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001JulSep/0085.html  [3] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001JulSep/0103.html  [4] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001JulSep/0074.html    --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 11:33 2/2/2001 +0900, TAMURA Kent wrote:  >So, we should add a sentence like "The resultant octet stream  >MUST be an XML instance of that the root element is FooData If  >the KeyInfo type is not ...#rawX509Certificate."    Ok, text now reads as below, does this caputre it correctly?    >Type is an optional identifier for the type of data to be retrieved. The   >result of dereferencing a RetrievalMethod Reference for all KeyInfo types   >defined by this specification (section 4.4) with a corresponding XML   >structure is an XML element or document with that element as the root. The   >rawX509Certificate KeyInfo (for which there is no XML structure) returns a   >binary X509 certificate. Note, if the result of dereferencing and   >transforming the specified URI  is a node set,  it may need to be   >canonicalized. Consequently the Signature application is expected to   >attempt to canonicalize the nodeset via the The Reference Processing Model   >(section 4.3.3.2)  >http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html#sec-RetrievalMethod          __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 18:42 7/15/2001, merlin wrote:  >parameter encoding. The &exc; document is not tied to &dsig; and really  >doesn't need to know how it will be encoded.    That's true, but I think my preference is not to spread out things if it can   be helped, consequently I'd prefer a section in the exclusive that states   how it could be used with disgi.      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      Please see:           http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#translate    The W3C does sometimes include the alternative language version on the site.    At 07:44 11/30/2000 +0800, coral wrote:  >Dear Sir:  >  >I am Hurui from China, Many programmers in China cannot read your documents   >fluently, So I want to translate some of your documents into Chinese. I   >selected the document Extensible Stylesheet Language (XSL) Version 1.0 W3C   >Candidate Recommendation 21 November 2000 for the first one.  >Shall I got the permit from you? Will you put the translated documents on   >your site so other Chinese may save time for it.      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 09:52 AM 5/29/00 +0200, Gregor Karlinger wrote:   >If we make this restriction (I do not see an argument against it), I  suggest   >to reject the SignatureProperties element at all, since it only works as   >an additional "container" level between Object and SignatureProperty, but   >nothing else.    That's a good point. It is rather superflous. I'd be interested in what  others have to say...     >In this case I also suggest to reject SignatureProperties. Instead, supply   >each SignatureProperty element with an Id AND a Target attribute.    Well, I changed the example to make it clearer this is what should happpen  (though I'm hesitant to make the change of removing SignatureProperties' ID,  or the element itself without further discussion (though I agree with you on  removing it.))       [p10]  <Object>      [p11]   <SignatureProperties>      [p12]     <SignatureProperty Id="AMadeUpTimeStamp"                    Target=" #MySecondSignature ">      [p13]        <timestamp xmlns="http://www.ietf.org/rfcXXXX.txt">       [p14]          <date>19990908</date>       [p15]          <time>14:34:34:34</time>       [p16]        </timestamp>       [p17]     </SignatureProperty>      [p18]   </SignatureProperties>      [p19]  </Object>      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      The candidate version of the RD that I plan to post as the next  public-working-draft/ietf-draft is now available. [3] It also includes a  contributor section. In keeping with the XML Signature WG Contributor  Policies [1] I have included a subset of those WG members who opted into the  Participants list [2] AND opted in to inclusion of this document's  contributor section through request or obvious participation on the issues.  I do this as a short-cut/favor, it is ultimately the WG members  responsibility to inform me that they think they meet the criteria defined  in [1]. If I made a mistake and included you and you do not want to be  listed, please let me know. I had hoped to advance this prior to my leaving  for a week (this Friday), but I now I expect I will advance this document as  soon  I return.    [1] http://www.w3.org/Signature/Contributor.html  [2] http://www.w3.org/Signature/Participants.html  [3] http://www.w3.org/Signature/Drafts/xmldsig-requirements-990806.html    ...       W3C Status of this Document           This is a WG [17]XML Signature Requirements consensus candidate draft.     Upon final confirmation by the WG, this document will be published as     a working-draft/ietf-draft. This forthcoming publication will be     similar to a last-call in that it is asking for substantive community     wide review, particularly with respect to the dependencies identified     in this document. It is different from a last call in that it is not     intended to be advanced to a W3C Proposed Recommendation. Once     dependencies and commitments have been confirmed with the identified     WGs, this document may be advanced as an IETF Informational RFC. Aside     from these caveats, this WG deliverable is largely on schedule with     respect to the timeline in the [18]WG Charter:            Aug 99 Requirements document to Last Call for NOTE / Informational       RFC            This document attempts to capture the Working Group's consensus though     it contains points which are still in dispute or not well     specified. Issues which are still being actively discussed during the     publication of this document are of class="discuss" and rendered as     color:navy by style sheet compliant applications. Editorial comments     about a discussion point are of class="comment" and rendered in a box     with a light background.       ...            5. Acknowledgements                                              The work of producing this specification was accomplished by the     membership of the [101]IETF/W3C XML Signature Working Group (WG). The     list of contributors below was generated by the process specified in     the [102]XML Signature WG Contributor Policies.          Mark Bartel (JetForm Corporation ), John Boyer (UWI.com), Richard     Brown (Globeset), Donald Eastlake (Co-Chair, IBM ), Barbara Fox     (Microsoft ), Todd Glassey (Meridianus/GMTsw ), Phillip Hallam-Baker     (VeriSign Inc ), Peter Lipp (IAIK TU Graz ), Hiroshi Maruyama (IBM ),     Joseph Reagle (Co-Chair, W3C), Chris Smithies (PenOp), David Solo     (Citigroup), Winchel "Todd" Vincent (GSU)    __    *Note: I will be at LawTech'99 Conference and taking some holiday     from August 7-15. I will respond to any email as soon as possible     after my return.  _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 17:44 7/12/00 +0900, Yoshiaki KAWATSURA wrote:   >I propose to revise the example of <X509IssuerName> in order to be the   >correct one and add "The value of X509IssuerName (MUST?) conforms to   >RFC2253" in XMLDSIG document (,for example).    I added SHOULD so as not to preclude an XML representation in the future.    4.4.4 The X509Data Element  An X509Data element within KeyInfo contains one or more identifiers of  keys/X509 certificates that may be useful for validation. Five types of  X509Data pointers are defined:   1. The X509IssuerSerial element, which contains an X.509 issuer  distinguished name/serial number pair that SHOULD be compliant with RFC2253  [LDAP-DN],  ...    And tweaked the example as follows:       <X509Data> <!-- two pointers to certificate-A -->       <X509IssuerSerial>          <X509IssuerName>CN=TAMURA Kent, OU=TRL, O=IBM,           L=Yamato-shi, ST=Kanagawa, C=JP</X509IssuerName>         <X509SerialNumber>12345678</X509SerialNumber>       </X509IssuerSerial>       <X509SKI>31d97bd7</X509SKI>      </X509Data>     <X509Data> <!-- single pointer to certificate-B -->       <X509SubjectName>Subject of Certificate B</X509SubjectName>     </X509Data>    Is there a constraint on X509SubjectName?      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        At the beginning of the month the Chairs requested that the management of  the W3C/IETF (Director/Area-Director-IESG) consider the Signature  specification for advancement onto the Standards track of both institutions.  [1] We know the request was aggressive (particularly with respect to the  C14N dependency) but we felt we were close and might as well get the ball  rolling. (Also, CR is a new thing at the W3C and there's not a large body of  experience regarding the entry criteria and dependencies which I wanted to  push on.)    Berners-Lee has reviewed the Last Call comments and dependencies and his  comments should make it to this list eventually. Basically, we need to hear  back from Martin/I18N with respect to their Internationalization meeting  last week; and we should normatively reference the "New Canonical XML"  instead of something we plan to deprecate. I think we'll hear back from  Martin soon, and we're making progress on C14N. What I'd like to do in the  next version is have examples using the New Canonical XML that have been  generated and confirmed by two independent implementations (we've been using  ones from Kent and Petteri). Once we cover those two bases (I18N and stable  C14N) I'm confident we can move forward in the W3C.    Schiller ack'd our request and stated he will review the document    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000AprJun/0260.html    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 01:57 PM 3/17/98 -0500, Ian B. Jacobs wrote:   >When translating a technical document, I think translators should stay   >as close to the text as they can since (I don't feel as strongly   >about translating non-technical documents). However, I don't think   >it makes sense to translate recognized editorial errors, i.e., those   >that the original authors have clearly listed on the errata page.    >If we wrote "the the" by mistake, French translators should not   >have to write "le le" and translate the errata sheet to read "Le   >texte d'origine contient par erreur 'le le'".     Makes sense.     >The HTML 4.0 errata sheet is clearly divided into two sections:   >stupid editorial mistakes on one hand and editorial or semantic    This is good for HTML, that it even has an errata sheet, but other specs may  not and I'd like to keep people constrained.     >ambiguities on the other. I think translators should be allowed   >to eliminate the first class of errors, perhaps   >with a note in the translation stating that the error was corrected ;    This seems reasonable, but I hesitate to even mention this in a sense, it  makes are  policy that more complicated in a sense. I think this may be one  of those instances where the official policy is, "please translate  literally" but "if you delete a 'the the' we aren't going to complain." In  the specific instance of HTML4.0, the "minor typographical errors" could be  something we accept.      >the erratum itself should not be translated. For the second class   >of errors, translators should leave the spec as is and point to   >a translated errata sheet. In the latter case, it makes sense   >(and is important) to provide a translation of the semantic error.    Agreed. If the other editors of the HTML spec don't mind having the "minor  typographical errors" corrected in translations, I'll be happy to follow up  with Mr. Diodati. (Or you can even, please cc: me.)        

      For those that wish to participate in a W3C Member context, the following  Call for Participation has been sent to the W3C Advisory Committee. However,  once we have news of IETF approval, I will confirm the configuration of the  WG mailing list and we can start work there in preparation of the Oslo FTF.  I will add everyone on w3c-xml-sig-ws@w3.org to  w3c-ietf-xmldsig@w3.org . I  also hope to put up a WG Web page sometime this week.    Forwarded Text ----   From: "Josef Dietl" <jdietl@w3.org>   To: <w3c-ac-members@w3.org>   Date: Tue, 25 May 1999 18:00:04 +0200   Subject: Call for Review / Call for Participation: XML-DSig Activity   Status:         Dear Advisory Committee Representative,      Please take the time to review the just issued Briefing Package for the   XML-DSig Activity, and the XML-DSig charter, and send in your review   and/or participation commitment using the forms below. We appreciate   your understanding that the Web forms for voting are not yet available.   Please note that, however, the Reply-To is correctly set and that an   "abstain" item has been added to the review.   Please note also that, if the Activity is approved, the first   face-to-face meeting is planned for the 45th IETF meeting in Oslo (see   http://www.ietf.org/meetings/IETF-45.html).   We specifically value your opinion on this Activity, as it is a   pioneering effort in the collaboration between W3C and the IETF.      Briefing Package:           http://www.w3.org/1999/05/XML-DSig-CFP-990521.html   XML-DSig charter:           http://www.w3.org/1999/05/XML-DSig-charter-990521.html      >From the executive summary of the Briefing Package:      Structured information permits data to be easily read, exchanged, and   acted upon by Web agents. The scope of such information often includes   media-independent data for electronic publishing, electronic commerce   and -- critically -- information about other information (metadata). The   W3C's Extensible Markup Language (XML) Recommendation specifies a   standard syntax for structuring Web documents. The content of the   document structure is arbitrary; anyone can create a XML data structure   (be it a bibliographic format or cooking recipe) as long as it is well   formed. One can also associate (through RDF or Xlink) the meaning of the   structured information to a Web resource. For example, "The resource at   http://foo.com/~bar.html has a bibliographic entry as follows ...." This   is very powerful!   However, the usefulness of structured information is dependent on how   trustworthy it is. Is the authenticity of an assertion or the integrity   of a price list assured? This Briefing Package follows the conclusion of   the XML-DSig workshop in which the participants advocated the initiation   of a XML-DSig activity. The activity will initially consist of a single   WG with an explicit requirements, constraints, deliverables, and   time-table. One such deliverable is the chartering of additional work   once the first phase is complete. At such a time, ghe Adisory Committee   must be notified of such additional work and is subject to the approval   of the Director.   - -----------------------------------------------------------      Procedure            1. Read the full Briefing Package and Charters           http://www.w3.org/1999/05/XML-DSig-CFP-990521.html           http://www.w3.org/1999/05/XML-DSig-charter-990521.html            2. Before 24:00 GMT 22 June 1999, to comment on the            creation of the XML-DSig Activity and/or the            Working Group, or to indicate likely participation,            fill out the following form and send it to            xml-dsig-review@w3.org            3. If you have intellectual property rights related to            the XML-DSig Activity, please disclose them following            http://www.w3.org/Consortium/Process/#ipr            4. The W3C Director will announce the disposition of            the review by 30 June 1999      - -----------------------------------------------------------      XML-DSig Activity Review Form         1) AC Representative First Name:      2) AC Representative Last Name:      3) AC Representative Email Address:      4) Employer (W3C Member Company/Organization):      5) Choose one of the following by marking with an X:         [ ] We agree that W3C should create the XML-DSig Activity          as proposed or with slight changes suggested in other reviews         [ ] We agree that W3C should create the XML-DSig Activity,          but request the following changes to Briefing          Package or charters:         [ ] We abstain from expressing an opinion on the creation of the    XML-DSig Activity         [ ] W3C resources should not be spent on the XML-DSig          Activity because (please explain why):      6) Intellectual Property Rights (please choose one)      [ ] We do not have intellectual property rights          relating to the XML-DSig Activity      [ ] We have disclosed our IPR following the procedure at          http://www.w3.org/Consortium/Process/#ipr      - --------------------------------------------------      XML-DSig Working Group Participation      1) AC Representative First Name:      2) AC Representative Last Name:      3) AC Representative Email Address:      4) Employer (W3C Member Company/Organization):      5) In the case of the creation of the XML-DSig Working Group, we      propose the following participant:      Name:   Email Address:   Telephone Number:   Employer:      We understand the level of commitment as outlined in the   Charter. We are willing to commit to this.      6) Intellectual Property Rights (please choose one)      [ ] We do not have intellectual property rights          relating to the Privacy Activity      [ ] We have disclosed our IPR following the procedure at          http://www.w3.org/Consortium/Process/#ipr      [The following entries are optional; delete each one if it is not   applicable.]            We will participate only under the following conditions:         Other items to be considered by the W3C Staff Activity Leader:      FORM ENDS           End Forwarded Text ----  ___________________________________________________________  Joseph Reagle Jr.  http://www.w3.org/People/Reagle/  Policy Analyst     mailto:reagle@w3.org        

      I often find it helps me when their's contention to have two proposals  before me, with examples. Since I'm not sure there _is any_ disagreement,  would someone do me the favor of writing up at least one quick example  showing what a CMS blob would look like in (an extension) of Richard's  synatx? If someone then sees they disagree, it should be clear what type of  example would demonstrate the difference.    ___________________________________________________________  Joseph Reagle Jr.  W3C:     http://www.w3.org/People/Reagle/  Policy Analyst     Personal:  http://web.mit.edu/reagle/www/                     mailto:reagle@w3.org        

      At 15:18 7/27/2000 -0400, Steve Wang wrote:   >After reading the XMLDSIG documents, I am wondering how a XML data object  is   >hashed.   >For example, an object has the following data:   ><book>   ><name> XML for dummy </name>   ><author> Suresh </author>   ></book>   >   >How is the input stream to the hash function composed? Does it contain the   >XML tags? (I guess so).   >How are the spaces handled?    It is canonicalized.  http://www.w3.org/TR/2000/WD-xmldsig-core-20000711/#sec-c14nAlg    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 11:25 99/10/08 -0700, John Boyer wrote:   >a) Section 4.3.1 Location does not say whether it will allow fragment Ids   >after the the URI.  It would probably make a better data model if we did  all   >partial document work in the transformations (and this could be treated as  a   >special transformation that is required as opposed to recommended).    I think I agree with this. In the HTML context that which comes after a URI  is merely a "view" on the whole document, and thinking that way in our  context can be dangerous; I like transformations. But I also understand  Don's point that we still need to refer to objects elsewhere in the  document. However, I think this can be satisfied by saying the location must  be a URI-clean or IDREF [1].    This seems like an abitrary restriction though, and if someone puts and XPtr  in their URI and also specify a XSLT, we need to define what happens, or say  that the signature engine will throw an error.    [1] http://www.xml.com/axml/notes/FindingIDs.html      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      Congradulations (and thanks) to John and the Working Group!    Now I hope we can wrap up our interop report [1] over the next four weeks.   If you would like your implementation to be listed, or can give further   feedback on that status of your implementation with respect to empty boxes,   please forward that information on to the list.    [1] http://www.w3.org/Signature/2000/10/10-c14n-interop    Forwarded Text ----  Date: Thu, 26 Oct 2000 09:26:08 -0700  From: Janet Daly <janet@w3.org>  Organization: W3C  Subject: Call for Implementation: Canonical XML Becomes a W3C Candidate    Recommendation      Dear W3C Advisory Committee Representative,    W3C is pleased to announce the advancement of Canonical XML to Candidate  Recommendation status.    Canonical XML Version 1.0  26 October 2000  http://www.w3.org/TR/2000/CR-xml-c14n-20001026  ed. John Boyer, <jboyer@PureEdge.com>    1 Abstract    Any XML document is part of a set of XML documents that are logically  equivalent within an application context, but which vary in physical  representation based on syntactic changes permitted by XML 1.0 [XML] and  Namespaces in XML [Names]. This specification describes a method for  generating a physical representation, the canonical form, of an XML  document that accounts for the permissible changes. Except for  limitations regarding a few unusual cases, if two documents have the  same canonical form, then the two documents are logically equivalent  within the given application context. Note that two documents may have  differing canonical forms yet still be equivalent in a given context  based on application-specific equivalence rules for which no generalized  XML specification could account.    2 Request for publication and outstanding issues    The publication of the Canonical XML Version 1.0 Candidate  Recommendation is a result of a request sent to the Director and the W3C  Chairs, archived at:    http://lists.w3.org/Archives/Member/chairs/2000OctDec/0021    The XML Signature WG reports that all last call issues have been  resolved. The Canonical XML Version 1.0 Last Call Issue Report is at:    http://www.w3.org/Signature/2000/09/06-c14n-last-call-issues    There were no minority objections.    Results of the initial operability report already show two independent  implementations. The interoperability report is at:    http://www.w3.org/Signature/2000/10/10-c14n-interop      3 Exit criteria    The XML Signature Working Group encourages implementations during the CR  period, which ends on 24 November 2000. The XML Signature Working Group  must produce an amended version of the implementation report, taking  into account new implementations, in order to exit the Candidate  Recommendation phase, and showing that they have addressed all issues  raised during the CR period.      4 Description of what Candidate Recommendation status means    The W3C Process Document describes the Candidate Recommendation status  of a specification in Section 6.2.3:  http://www.w3.org/Consortium/Process/Process-19991111/tr.html#RecsCR        Advancement of a document to Candidate Recommendation is an explicit      call to those outside of the related Working Groups or the W3C itself      for implementation and technical feedback.    5 Status of This Document    The "status of this document" section for the Candidate Recommendation  reads:    This specification from the IETF/W3C XML Signature Working  Group (W3C Activity Statement) is a Candidate Recommendation  of the W3C. While this was originally a deliverable of the XML  Core Working Group, completion of this specification has been  delegated to the XML Signature Working Group.    The XML Signature Working Group believes this specification  incorporates the resolution of all last call issues;  furthermore it considers the specification to be very stable  (as demonstrated by its interoperability report) and invites  further implementation feedback during this period. The  duration of Candidate Recommendation will last approximately  four weeks (November 24).    Please send comments to the editors and cc: the list  <w3c-ietf-xmldsig@w3.org>.    There have been no declarations regarding patents related  to this specification within the XML Signature Working Group.    A list of current W3C Recommendations and other technical  documents can be found at http://www.w3.org/TR.    For Tim Berners-Lee, Director;  Janet Daly, Head of Communcations  End Forwarded Text ----    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 08:30 99/08/24 -0400, david.solo@citicorp.com wrote:   >Based on the recent discussion, I want to propose the following resolution  for    >the detached/embedded and transform discussions.    Part of my confusion on all of this was that we are dealing with  intermediate steps of content which have no representation in the syntax --  they are intermediate! However, in the data model they are clearly  identified.     >his introduced two problems (at least):     >one was the potential for nested c14n's where one alg applied to the  object and    >the other to the sigInfo wrapper; and the other the fact that the  processing    >for an embedded vs. detached signature were different (thus, one couldn't    >convert between the methods without breaking the signature).    Do these problems apply to the data-model/syntax [1] I've proposed? I don't  think so:    [1] http://www.w3.org/Signature/Drafts/xml-dsig-datamodel-990823.html   >  Objects and References   >     >   <reference> and <object> take content.inline and content.EB and yield   >   *.result. This production occurs based on the parameters of the   >   operations (hash, c14n, encoding, etc.). This intermediate results are   >   not represented in the syntax explicitly. However, we do need a   >   feature for distinguishing between signing the actual <object> (the   >   encoded form) and content.inline.result (the decoded (processed)   >   form.). See the [28]section on signing the native encoding of a   >   packaged document.          _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      I'm not an X509 expert (or even novice) but I can speak to the XML issues   and the spec.    At 15:30 3/9/2001 -0500, Ken Goldman wrote:  >1  >  >The DSIG schema says it's type is integer. In XML Schema, an integer  >is a base 10 number, using the characters 0-9.  Is this right?    Basically, yes. Though it could include (+,-) as well.    http://www.w3.org/TR/2000/CR-xmlschema-2-20001024/#integer  3.3.11 integer  [Definition:] integer is derived from decimal by fixing the value of scale   to be 0. This results in the standard mathematical concept of the integer   numbers. The value space of integer is the infinite set   {...,-2,-1,0,1,2,...}. The base type of integer is decimal.  3.3.11.1 Lexical representation  integer has a lexical representation consisting of a finite-length sequence   of decimal digits (#x30-#x39) with an optional leading sign. If the sign is   omitted, "+" is assumed. For example: -1, 0, 12678967543233, +100000.  3.3.11.2 Canonical representation  The canonical representation for integer is defined by prohibiting certain   options from the Lexical representation (?3.3.11.1). Specifically, the   preceding optional "+" sign is prohibited and leading zeroes are prohibited.      >2  >  >Assuming that (1) is right - If I have an X509SerialNumber from a  >certificate that is a long string of bits (Tom Ginden mentioned back on  >July that some certificates use a hash value of 160 bits) doesn't the  >binary to decimal conversion become computationally painful.  >  >It would seem like this might be often required in verification to  >match the XML to the ASN.1 in the certificate.    The natural language part of xmldsig relies upon the [LDAP-DN] reference   (RFC2253) to say what the content should be a string.    http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html#sec-X509Data  >The X509IssuerSerial element, which contains an X.509 issuer distinguished   >name/serial number pair that SHOULD be compliant with RFC2253 [LDAP-DN],    RFC2253 is concerned with strings, not integer:  http://www.ietf.org/rfc/rfc2253.txt  >This specification defines the string format for representing names, which   >is designed to give a clean representation of commonly used distinguished   >names, while being able to represent any distinguished name.      >3  >  >Assuming that (1) is right - I recently received a document claiming to be  >signed using DSIG, which included the following XML fragment:  >  >         <X509SerialNumber>39F497CA</X509SerialNumber>  >  >Is this valid XML DSIG?  Was it valid at one time in the past?    It does not comply with the most recent schema definition of course. It does   comply with the June version          http://www.w3.org/TR/2000/WD-xmldsig-core-20000601/  which was then changed to type integery in the July version:          http://www.w3.org/TR/2000/WD-xmldsig-core-20000711/    This change apparently happened because of discussion in Pittsburgh:          http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0254.html      >4  >  >Assuming all of the above, why was integer chosen?  It would seem like  >binary, hex or base64 encoded, would be computationally easier when  >handling X509SerialNumber's with many bits.    I don't recall, perhaps Don or Tom could speak to this.      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 14:10 11/15/2000 -0800, Kevin Regan wrote:  >...  >Interoperability with non-validating processors might be a noble cause,  >but it may cause many more problems for those (the majority?) using  >validating processors.  I predict a large number of problems down the  >road for many applications...    Hi Kevin,    To change this decision (and the momentum) in the present specification you   need to:  1. Forge a new consensus that it needs to be changed.  2. Show the existing consensus/position should be reconsidered given new   evidence.    If you can get a bunch of folks (particularly the implementors) to advocate   this change, we'll re-open the issue. Or if it's clear that white spaces are   being mangled in transport or that everyone is using validating parsers   anyway we can also re-open the issue.    However, momentum seems to be carrying the day and we don't have any   specific evidence (I don't think) to counter our previous expectations on   white space and validating parsers.    >It seems that most folks will not be getting the expected results  >with signatures.  Any transport that modifies insignificant white space  >will break the signature.  I would assume that in most protocols that  >send XML documents, insignficant white space is removed for efficiency  >reasons.  In addition, whenever a document is displayed (such as in IE),  >the spacing is changed (in fact, the spacing of the examples at the end  >of the XML C14N spec are probably spaced according to the displaying  >application).  Finally, the size of a document can not be minimized when  >being stored because the signature would break.  >  >  >  >--Kevin  >  >-----Original Message-----  >From: John Boyer [mailto:jboyer@PureEdge.com]  >Sent: Wednesday, November 15, 2000 2:06 PM  >To: Kevin Regan  >Cc: w3c-ietf-xmldsig@w3.org  >Subject: RE: question on latest spec  >  >  >Hi Kevin,  >  >The reason is signature interoperability with non-validating processors.  >  >I empathize, though :)  >  >Thanks,  >John Boyer  >  >  >-----Original Message-----  >From: Kevin Regan [mailto:kevinr@valicert.com]  >Sent: Wednesday, November 15, 2000 1:50 PM  >To: John Boyer  >Cc: w3c-ietf-xmldsig@w3.org  >Subject: RE: question on latest spec  >  >  >  >What is the reason for doing this?  Isn't the exclusion of insignificant  >white space one of the key forms of equivalence?  XML documents can be  >displayed and handled in many different ways, with white space being  >added  >or removed from element content at various steps.  In general, this is  >not a problem if a DTD is being used.  The meaning of the document  >is clear.  However, this form of equivalence is eliminated in the XML  >C14N  >specification.  Why?  >  >Sincerely,  >Kevin Regan  >  >  >-----Original Message-----  >From: John Boyer [mailto:jboyer@PureEdge.com]  >Sent: Wednesday, November 15, 2000 1:12 PM  >To: Kevin Regan; w3c-ietf-xmldsig@w3.org  >Cc: Joseph Reagle  >Subject: RE: question on latest spec  >  >  >Hi Kevin,  >  >Actually, Section 2.10 of the XML spec makes it quite clear that all XML  >processors must be capable of providing to the application ALL  >whitespace  >within the document element.  Validating processors must further be  >capable  >of telling the application whether a given whitespace character appeared  >in  >element content, i.e. was insignificant.  >  >Many implementers of validating processors allow the application  >developer  >to configure whether the whitespace should simply be discarded.  >  >The statement you've come across in Section 2.1 is telling you how to  >configure your validating parser.  You MUST set it so that all  >whitespace is  >reported to the canonicalizer.  >  >NOTE: I don't see any harm in throwing out insignificant whitespace  >*before*  >the document is signed.  In other words, the original document accessed  >by  >the user from the web may have insignificant whitespace that your  >application strips out before even presenting the information content to  >the  >end-user.  Once the end user affixes a signature, though, any  >insignificant  >whitespace that gets added to the signed document will break the  >signature.  >  >John Boyer  >Development Team Leader,  >Distributed Processing and XML  >PureEdge Solutions Inc.  >Creating Binding E-Commerce  >v: 250-479-8334, ext. 143  f: 250-479-3772  >1-888-517-2675   http://www.PureEdge.com <http://www.pureedge.com/>  >  >  >  >-----Original Message-----  >From: w3c-ietf-xmldsig-request@w3.org  >[mailto:w3c-ietf-xmldsig-request@w3.org]On Behalf Of Kevin Regan  >Sent: Sunday, November 12, 2000 6:20 PM  >To: w3c-ietf-xmldsig@w3.org  >Subject: question on latest spec  >  >  >  >I've been a way on other activities for a while, and have just recently  >gotten back to  >the XML C14N specification.  I came across the following in section 2.1:  >  >"All whitespace within the root document element MUST be preserved  >(except for any #xD characters deleted by line delimiter normalization).  >This includes all whitespace in external entities. Whitespace outside of  >the root document element MUST be discarded."  >  >I'm assuming that this means white space that is presented after the  >document is processed  >by the XML processor.  When a validating XML processor reads in a  >document against a DTD,  >insignificant white space is removed.  This is not the white space that  >the specification is  >referring to, is it?  >  >Sincerely,  >Kevin Regan      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Carl indicated he'd like the KeyValue to refer to the validation key; Brian   pointed out that this structure is already being used in other contexts were   multiple instances are used.    Given this issue didn't command intense passions nor agreement I suppose we   should stick with what we have: "a key that may be useful in validating the   signature?" Kent, does this answer your question satisfactorily?    ----- Original Message -----  >From: Joseph M. Reagle Jr. <reagle@w3.org>  >To: IETF/W3C XML-DSig WG <w3c-ietf-xmldsig@w3.org>  >Cc: TAMURA Kent <kent@trl.ibm.co.jp>  >Sent: Friday, February 16, 2001 1:24 PM  >Subject: Poll: Limiting KeyValue to a single Instance?  >  >  > > In [1] Kent asked, "The current specification also permits multiple  >KeyValue  > > elements in a KeyInfo element.  What does this mean?" Given we've been  > > trying to clarify other ambiguities, and with respect to the X509 SKI,  > > SubjectName, and IssuerSerial, should we also limit KeyValue to occurring  > > once and applying to the validation key, or should we keep the meaning  >that  > > it's simply a "key that may be useful in validating the signature?"  > >  > > Please respond by end of Tuesday Feb 20th.  > > [1]  >http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001JanMar/0052.html      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 12:27 00/03/25 +0900, Martin J. Duerst wrote:   >URIs   >----   >   >For URIs and URI references, add a convention as in   >http://www.w3.org/TR/charmod/#URIs. (all W3C specs   >that use URIs in XML are doing this)    I will use an abridged version of the XML spec text, and could refer to the  Character Model Working draft, but it hasn't been updated recently and I'm  wondering when it will be advanced past WD?    [1] http://www.w3.org/TR/REC-xml#sec-external-ent    "An XML processor should handle a non-ASCII character in a URI by  representing the character in UTF-8 as one or more bytes, and then escaping  these bytes with the URI escaping mechanism (i.e., by converting each byte  to %HH, where HH is the hexadecimal notation of the byte value)."    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      A number of people at the signed-XML workshop were interested in signing XML  Forms. The HTML WG (which is working on XHTML) will be turning to the topic  shortly. Those interested in the topic should contact Dave. Additionally, I  may ask for a volunteer to be a liaison between the groups so as to identify  and resolve dependencies and requirements.    Forwarded Text ----   Date: Fri, 21 May 1999 09:43:28 +0100 (GMT Daylight Time)   From: Dave Raggett <dsr@w3.org>   To: "Joseph M. Reagle Jr." <reagle@w3.org>   Subject: Re: xHTML Forms      On Fri, 14 May 1999, Joseph M. Reagle Jr. wrote:      > Dave, please send me any information related to the forms work   > of the HTML WG that I can forward on to those in the XML-DSIG   > activity.      Sorry for the delay - I missed your message in my rush to catch   up after www8.      You can find more info about the work by the HTML WG at:         http://www.w3.org/MarkUp/Group/Forms      and in the charter:         http://www.w3.org/MarkUp/Group/HTMLcharter      The charter is somewhat terse but says:        -  An improved match to database/workflow applications      We are interested in collecting requirements for a new generation   of web forms and how to deal with an increasingly hetergeneous   range of browser capabilities. At the high end, this means a much   rich toolkit of forms features and support for workflow where   forms are passed from one person to the next as part of a process.      I envision this involving the notion of a form as a persistent   entity supporting the means for people to sign off various stages of   work. These signatures will have clear semantics and apply to those   parts of the form that have been completed at the time of signing   but not to those that are filled in subsequently.      We have a weekly teleconference (the first is next Monday at 10-11am   Boston time on Longfellow). Perhaps it would be useful to be able to   invite you or another representative of the Signed XML effort to   take part in the Forms subgroup as appropriate. Sadly, I don't have   the time to participate in both groups.      Let me know if you have any further questions.      Regards,      -- Dave Raggett <dsr@w3.org> http://www.w3.org/People/Raggett   phone: +44 122 578 2984 (or 2521) +44 385 320 444 (gsm mobile)   World Wide Web Consortium (on assignment from HP Labs)     End Forwarded Text ----  ___________________________________________________________  Joseph Reagle Jr.  http://www.w3.org/People/Reagle/  Policy Analyst     mailto:reagle@w3.org        

      At 17:14 11/15/2000 +0000, Juan Carlos Cruellas wrote:  >1. Would it be correct to assume that  a <SignatureProperty> could  >contain this kind of information, ie, other <Signature> element? My view  >is that taking into account what is said in the draft ("Additional  >information items concening the generation of the signature(s) can be   >placed in a  >SignatureProperty element" in section 5.2), it would be OK.    The way I think about SignatureProperty is that it's an assertion about the   Signature (an implicit RDF:about), so this sounds ok to me. However, this   isn't explicit really and my preference is if people cleanly define their   own semantics. So you could place this in an object, reference the first   signature and it gives you integrity, if you want to mean something else,   you could include that semantic (using the <CounterSignature> that Merlin   suggested [1] (though it should be namespace qualified).)      [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000OctDec/0140.html.    >2. Assuming that in XML this kind of behaviour should be allowed, what the  >second <Signature> would sign is the <SignatureValue> element of the first  ><Signature> element. So, a <Reference> to this <SignatureValue> should appear  >within the second <Signature>, but NO Id attribute has been specified for the  ><SignatureValue> element, so it seems not possible to reference it unless a  >redefinition of the <SignatureValue> element is made.    I will add an ID to that element.      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 04:00 PM 7/28/99 -0400, Winchel 'Todd' Vincent, III wrote:   >I would be willing to write/edit such a definition section.  I suspect that   >I would need help from the list (references and input) on some of the very   >technical definitions, but I'm willing to do the compilation, writing,   >editing if I'm pointed to the resources (or if definitional decisions are   >made on the list).     Thanks Todd, but the work I am speaking of consists of good references (like  I did in [1]), and writing technically precise definitions. I wouldn't even  mind seeing them expressed in an informal predicate logic [2] -- as  reflected in the latest RD [4] -- or BNF [3] as approriate.     Perhaps someone will volunteer to work with you since I'm sure with a legal  background, you'd be precise with the words. <smile>    [1]http://www.w3.org/Signature/Drafts/xml-dsig-design-resources-990723.html  [2] http://www.w3.org/Signature/Drafts/xml-dsig-design-resources-990723.html  [3] http://www.stud.ifi.uio.no/~larsga/download/artikler/bnf.html  [4] http://www.w3.org/Signature/Drafts/xmldsig-requirements-990728.html       (Yanked from a conversation from TimBL, RalphS, and DanC yesterday)       A more formal definition of a signed resource is that the following     evaluates as true "definition(inputs):constraints" where R is a     resource., I is a resource identifier (URI), and C is content     (sequence-of-octects).       signed-resource(I, C, key, sig): there was some request R such that     GET(R) = C and address(R) = I and sign-doc(C, key, sig)       sign-doc(C, key, sig): sig is the value of a strong one-way     function over content and key that yields C integrity/validity and K     non-repudiability  _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      Examples in the dsig spec are not canonicalized. I added a sentence to   [s03], "Note that this example, and all examples in this specification, are   not in canonical form."    At 14:39 6/4/2001, Jesse Pelton wrote:  >I'm struggling to wrap my mind around both the XML-Signature CR and the  >canonicalization REC, so please bear with me if this is a dumb question.  >  >Background item 1: Sections 2.1 and 6.5.1 give examples of the  >CanonicalizationMethod element like the following:  >  ><CanonicalizationMethod  >Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>  >  >Background item 2: Section 1.1 of the Canonical XML Version 1.0  >Recommendation states, "Empty elements are converted to start-end tag  >pairs," and the processing model for element nodes described in section 2.3  >ensures that this is the case.  >  >Query: Are the XML-Signature examples correct? It seems to me that they  >should read:  >  ><CanonicalizationMethod  >Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"></Canonicalizati  >onMethod>  >  >and that other empty elements (SignatureMethod, Transform, DigestMethod) in  >the example in section 2.1 should likewise be represented as start-end tag  >pairs. If this is not the case, what have I missed?  >  >Jesse Pelton  >PKC Corporation      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      John has updated the issues list [1], and spec [2].    [1] http://www.w3.org/Signature/2000/09/06-c14n-last-call-issues.html    [2] http://www.w3.org/TR/2000/CR-xml-c14n-20001212  Status of this document  This is a revised Candidate Recommendation of the IETF/W3C XML Signature   Working Group (W3C Activity Statement). This version includes three   clarifications resulting from comments (1,2,3) made during the four week   call for implementation (which formally ended November 24th). The XML   Signature Working Group believes this specification incorporates the   resolution of all last call and call for implementation issues; furthermore   it considers the specification to be very stable (as demonstrated by its   interoperability report). We hope to refer this document to the W3C Director   for consideration as Proposed Recommendation in early January.    Please send comments to the editors and cc: the list   <w3c-ietf-xmldsig@w3.org>.  There have been no declarations regarding patents related to this   specification within the XML Signature Working Group.    A list of current W3C Recommendations and other technical documents can be   found at http://www.w3.org/TR.      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 00:00 5/10/2001 -0400, Donald E. Eastlake 3rd wrote:  >From:  Erwin van der Koogh - Sun Ireland - Software developer  > >I think it should be stressed extremely obviously multiple times all over   > the  > >spec that you still need to verify the key supplied in the KeyInfo. By   > checking  > >whether the key is from the person who supposedly signed the document and   > by  > >verifying and trusting one or more signatures on the key.  >  >The XMLDSIG standard is not about trust. It is about the mechanical  >linkage of data to a key.    [ Resulting document           http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html      4.4 The KeyInfo Element  ... /+However, questions of trust of such key information (e.g., its   authenticity or  strength) are out of scope of this specification and left   to the application.+/  ]      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 17:54 3/26/2001 -0500, Noah_Mendelsohn@lotus.com wrote:  >I don't claim to be an expert on the digital signatures specification,    Thanks for your response Noah. I should've provided a reference, but there   is really nothing more to CryptoBinary than the schema definition.    >http://www.w3.org/TR/2000/CR-xmldsig-core-20001031/#sec-CoreSyntax  >    <simpleType name="CryptoBinary">  >      <restriction base="binary">  >       <encoding value="base64"/>  >      </restriction>  >    </simpleType>      >my quick reading of it suggests that CryptoBinary is not just any base64  >binary    It is that simple. It's used as the type for SignatureValue, DigestValue,   X509SKI, X509Certificate,  X509CRL, PGPKeyPacket, and all the DSA/RSA   parameters. Consequently, it has to be generic, and given we decided to go   base64 in xmldsig, it made sense to simplify things and just create a type   for it.    >By specifically naming the  >digital signature type, you will allow behaviors to be applied to any  >information specifically coded in that manner.  The fact that the XML  >schema validation mechanisms provided no additional direct checking is  >unimportant, I think.    Even given what I said above, I'd be willing to take this as an argument not   to eliminate it -- that's the direction I'm leaning towards anyways <smile/>.      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      RFC2119 does not have the terminology of mandatority, recommend and  optional. If someone can point out the reference to me, I'd be oblidged.        [RFC2119] S. Bradner. "RFC2119 -- Key words for use in RFCs to Indicate  Requirement Levels." March 1997.   http://info.internet.isi.edu/in-notes/rfc/files/rfc2119.txt    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 07:59 6/13/2001, Donald E. Eastlake 3rd wrote:  >It is a specification for the encoding of X.500 Distinguished Names  >(DName) as such.    Ok, represented at the end of section 4.4.4. We could add a schema datatype   but given that RFC2253 encoding is "should" and these are further specified   as guidelines over that, the present approach is probably the lightest.    [           $Revision: 1.81 $ on $Date: 2001/06/13 17:55:14 $           http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html#sec-X509Data  ]    --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 20:41 5/12/2001 +0000, gonzalo rodriguez wrote:  >First of all, sorry for bothering you (forgive me if my english is not the   >best) but there is no email to make suggestions about the recommendations,   >neither in the WG  neither Signature nor Encryption.    http://www.w3.org/TR/2001/CR-xmldsig-core-20010419/  >Please send comments to the editors and cc: the list   ><w3c-ietf-xmldsig@w3.org>.      >I cannot understand why it "MUST" appear the element called   >"CanonicalizationMethod" every time that an "SignedInfo" element appears.    I'm cc:ing your email to the list as others' recollections are probably more   accurate than mine.    In general, we erred on the side of relying upon explicit declaration over   implicit/default meaning and the element was made mandatory. Also, at one   point we spoke of a "null algorithm" meaning no canonicalization. Over time,   we lost the "null canonicalization" concept because it doesn't make much   sense in the XML processing context and we continue to maintain the explicit   declaration. Subsequently, the implementations have always used   canonicalization, and it's been Canonical XML that everyone has used -- we   dropped minimal canonicalization. Consequently, there are two slightly odd   characteristics of this Method:    1. Should you wish to not use any canonicalization (this isn't really   meaningful to my mind), the declaration would look like:     <CanonicalizationMethod Algorithm=""/>  2. CanonicalizationMethod, SignatureMethod, DigestMethod, and Transform all   were of type "mixed", meaning character data could be included between the   start and end tag, this would be information relevant to the actual method   (parameters). Aside of transforms, we haven't seen a great deal of   employment of this functionality yet.    >As my English is not very good I'm going to argue my reasons by using the   >signature-example.xml. This example appears as a link at the end of   >"XML-Signature Syntax and Processing":  >  >1.- Shouldn't it be the DEFAULT WAY to make the things the next?...  >To make concatenation of all the elements that appear and in the order that   >they appear. e.g(using the data of signature-example.xml):  >  >http://www.w3.org/2000/09/xmldsig#dsahttp://www.w3.org/TR/xml-stylesheet/http://www.w3.org/2000/09/xmldsig#base64http://www.w3.org/2000/09/xmldsig#nullhttp://www.w3.org/2000/09/xmldsig#sha1j6lwx3rvEPO0vKtMup4NbeVu8nk=http://www.w3.org/TR/REC-xml-names/http://www.w3.org/2000/09/xmldsig#base64http://www.w3.org/2000/09/xmldsig#sha1UrXLDLBIta6skoV5/A8Q38GEw44=  >  >and this information should be after encrypted.    I don't understand. Do you mean encrypted, or signed?    >2.- In case this is true, and that most of people wish only use this way of   >operation (all the times), why should they have to learn how the "Canonical   >XML" works in order they documents to be valid?  >(Even now i cannot understand how the "Canonicalization Method" is used  >by the documents, at least in the three examples you give. Sorry.)    The *.tar.gz examples in the Implementation Report might help you understand   how the CanonicalizationMethod is used:          http://www.w3.org/Signature/2001/04/05-xmldsig-interop.html    >3.- Wouldn't it be better to make the element optional?  >(Even strongly recommended in the "XML-Signature Syntax and Processing")    If in fact someone wants to use null processing, giving that such an   approach is rather rare (no implementations are supporting this), I think it   should actually be explicitly designated.    __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 17:11 6/6/2001, Donald E. Eastlake 3rd wrote:  >It seems to me that this use of "envelope" is not consistent with the  >current use.    True, I was confusing the issue, I clarified that and tweaked the example as   well.    [     $Revision: 1.70 $     http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html#sec-NamespaceContext     ]    --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

        I've been giving some thought to the XML Encryption schema and how to   leverage as much as xmldsig as possible. Since the last CR we altered the   definitions to ensure our types had names so other WGs could create elements   of those types (enc:KeyInfo is of type dsig:KeyInfoType). However, in the   process I also removed some of the element types from the "global" level,   which makes it difficult for folks to incorporate the elements directly.   <enc:EncryptedData><dsig:KeyInfo/></enc:EncryptedData>. I've had a go at   tweaking the schema again to ensure most all elements are global *and* most   types are name and global as well. This file is attached.    In terms of STATUS:    C14N: Proposed REC period has ended and REC is the next step. We are   awaiting the resolution from the Unicode/NFC reference given a bug was   recently found in Unicode 3.0; it will be fixed by adding U+FB1D, HEBREW   LETTER YOD WITH HIRIQ, to the composition exclusion table. Once we have a   reference to this corrigendum we can move forward. I believe   draft-ietf-xmldsig-canonical-01.txt was approved as an Informational RFC and   hopefully we can tweak the reference prior to its publication.    Core: We haven't made any changes that substantively affect the syntax or   processing, just a lot of clarification and improvement over the prose,   structures, and schema/DTD design. I'd like to include the changes   [attached] and publish a new Candidate REC within the month, also if a new   schema draft is published within that time I'll incorporate any changes that   requires. (These schema changes don't affect the syntax, just how it is   specified and re-used.) draft-ietf-xmldsig-core-11 was approved for Proposed   Standard in ~November (though it hasn't been published yet) and we're still   in that holding period. I expect within the month we'll publish a new   Candidate REC and ietf-draft, then a month later the Proposed REC on the W3C   Track, and finally a REC and Draft Standard in May/June.    Don and I are working on an update to the charter to reflect these changes.      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        application/octet-stream attachment: xmldsig-core-schema.xsd          

      Richard, thanks for your emails on this topic, I think it is driving us to  clarify a number of issues here. Thoughts follow ...    At 10:36 99/11/09 -0700, rhimes@nmcourt.fed.us wrote:   >>How do you make an assertion sans location semantics, such that:   >   >>        B: some object when found and transformed yields the    >>        following DigestValue  ?   >   >>I think this is a valid question. We have a requirement to identify    >>objects via URIs. The URI need not be a URL. (In fact, I think the    >>DigestValue is a good URI). We could relax that requirement and remove    >>"Location" from the signature and only provide it as a resolution hint;  or    >>we permit a level of indirection pre/post signature creation. Pre:    >>ObjectReference uses some mechanism such as a directory, URN, manifest    >>etc. that provides resolution.   >   >>Post: you allow a "redirect" or "cache" statement to be associated with    >>the signature that states "the URI found in ObjectReference resolves to X"   >   >I'd like to see samples of these approaches.     I discuss how to do it in [1] though I don't provide a syntactical proposal  (also see [2]). When I wrote [1] back in July, I even considered dropping  locations from the manifest (I'm glad this conversation finally took off!)     However, with respect to our present design I like the requirement that you  have a URI NOT a URL. If you must, just include a random number! Now I'm not  "going charter" on you <smile> but I will say that the fact the requirements  document says that manifests includes URIs and that there is no requirement  that we provide for location invariant signatures (though Solo introduced  this as a design principle in his draft) informs my present views on what we  do. I'm of a mixed mind about dropping it, but since you can sort of achieve  that with some random number as a URN, I believe you can do what you want to  do using URIs and/or other XML (cache) applications but I presently do not  feel delivering a solution to that problem is on our critical path. (I  suspect that a lot of thought needs to be given to the protocol semantics  involved, for instance, when validating SignedInfo, if the signature  application enounters a 301 [3], is that considered non-valid?!)    [1] http://www.w3.org/Signature/Drafts/xml-dsig-design-resources-990723.html  [2] http://www.w3.org/Architecture/state.html  [3] http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3     >>If the fact that those statements were found at www.gigacorp.com was not   >>part of the semantics you wanted to be bound by (and I agree with Phillip   >>that some people do want to assert this) I'd recommend using an IDREF as    >>the URI of the resource that is digested, and the IDREF points to an    >>object in the signature which includes "hints" for finding and resolving    >>content.   >   >I think I agree, but again, I need to see an example.      Here is a "pre" indirection:    <Signature xmlns="http://www.w3.org/1999/10/signature-core">     <SignedInfo>       <CanonicalizationMethod Algorithm="http://www.w3.org/.../xml-c14n"/>       <SignatureMethod Algorithm="dsig:dsaWithSHA-1"/>       <ObjectReference Location="98">         <DigestMethod Algorithm="urn:nist-gov:sha1"/>         <DigestValue encoding="urn:ietf-org:base64">a23bcd43</DigestValue>       </ObjectReference>     </SignedInfo>     <SignatureValue encoding="urn:ietf-org:base64">dd2323dd</SignatureValue>     <Object Id="98">          <Resolve URN="urn:ietf:rfc959" server="http://urns.org">            <Hint URL="http://www.ietf.org/rfc/rfc959.txt"/>            <Hint  URL="http://info.broker.isi.edu/in-notes/rfc/files/rfc959.txt"/>          </Resolve>     </Object>  </Signature>     Here is a post indirection:    <Signature xmlns="http://www.w3.org/1999/10/signature-core">     <SignedInfo>       <CanonicalizationMethod Algorithm="http://www.w3.org/.../xml-c14n"/>       <SignatureMethod Algorithm="dsig:dsaWithSHA-1"/>       <ObjectReference Location="http://mysite.com">         <DigestMethod Algorithm="urn:nist-gov:sha1"/>         <DigestValue encoding="urn:ietf-org:base64">a23bcd43</DigestValue>       </ObjectReference>     </SignedInfo>   </Signature>    <trustedcache xmlns="urn:operating-system">    <Identity>          <ObjectReference Location="http://mysite.com">                  <Tranform>Y</Transform>          </ObjectReference>          <ObjectReference Location="file:/cache/aB3452xd">                  <Tranform>X</Transform>                  <Tranform>Y</Transform>          </ObjectReference>    </Identity>  </trustedcache>     >We need the signature to remain valid during a process where the document   >undergoes location changes.    Don't use a URL if you don't want to. At the FTF we've agreed to change  "Location" to "Target" at least, and maybe even distinguish and use "URI" or  "IDREF" as appropriate so as to stop confusing people as to whether it is a  URL or URI.  .    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      I just wanted to point out that a new XHTML forms is in the works that will  probably have relevance to signatures and encryption:    http://www.w3.org/TR/xhtml-forms-req#req-inter    2.4.2  Security and authentication    It should be possible to perform secure, protocol-independent form  transactions as well as to be able sign a form and to work with signed  forms. There should be a way to control access to a form or to sections of a  form based upon user authentication.    Note: The forms subgroup is exploring what is needed for a form to become a  legaly binding entity, and what constraints this requirement has on the  design of the new forms model. Coordination is needed with the XML-Digital  Signature Working Group.      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 15:48 99/09/17 -0500, Paul Grosso wrote:   >You are soliciting a commitment, but you don't suggest a timeframe for   >response.  Specifically, I don't know how to make any commitment in   >the name of a WG that doesn't yet exist and doesn't expect to exist   >for perhaps many months.  Is is acceptable that you wait for any   >response to your request for commitment until the WG exists, or do    >you have a different suggestion?    We'll play it by ear, obviously we won't wait till you guys finish, we'll  design our own very simple version, though our requirements would still be  relevant to a general XML packaging standard. However, I see packaging is  going to be discussed at the Plenary, and if it somehow gets bumped up, it  might make sense to play it out differently.     >shouldn't be co-chair of the XML Packaging WG!  But whenever it becomes   >time to consider the dependencies you list, someone will have to explain   >to me what they mean.  But I guess there is no need to do that now if   >the plan is to wait for the WG to exist before going any further.   >   >paul   >   >>   Dependency: logical/assertion semantics of   >>   package must be explicit.    We have to know what the semantics behind a package. Can it be viewed as a  series of assertions in a predicate logic? If I munge two things together in  a package (like a document and style sheet) is that an assertion that those  two resources also corresponded to some URI? Who made that assertion, same  person as the package creator, or the guy who dereferenced the URIs? (Maybe  they are the same, maybe not.) If there are statements in a a package that  signatures and trust engines (applications) care about, are those assertions  AND'd together, or OR'd together for evaluation?    If this isn't clear, hopefully it'll become so as the signature work moves  forward.     >>   Dependency: expectations regarding the processing (e.g., white space)   >>   of content within a package must not violate signature or XML content   >>   semantics.     Drats, I forget what this means exactly. I think it referred to having a  signed piece of XML (the signature wraps the XML content  <signature><content/></signature>) stay a valid signature, even when you  wrap it within a package.. <package><object  id="1><signature><content/></signature></object>...</package>     >>   Dependency: signed content in/over packages. How to combine element   >>   IDs?    If I have an XML blob with an name attribute of value 3, and package it up  with another blob with that also has a name attribute of value 3, what do I  do? Change the values? This might break a pre-existing signature.     >>   Dependency: how to show the relative relationships of package parts.   >>   For example, how to include XML content with stylesheets and related   >>   resources used for rendering.    Assume people want to securely package an XML document and its style sheet  together in a package, sign it, and send it off. How do you prevent the  following? A bad guy packages an XML document with a nice style sheet that  is identified by URI.nice. However, within the XML document itself, there is  a reference to a style sheet found at URI.evil. The signature/trust  application sees that URI.nice is a trusted URI and that the style sheet is  a safe one, and hands that package off to the XML parser/renderer. The XML  application finds a reference to URI.evil in the XML document and uses that  to render the document "maliciously." Who's responsibility is it to make  sure this doesn't happen. The package application? The user application?    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 11:25 99/09/14 -0400, Mark Bartel wrote:   >Here's part of a coworker's response to my ftf trip report:   >   >> I'm sure this is a picky point, but it took me a long time to figure out   >> that "c14n" was "canonicalization".  Ok, convenient short-hand for   >> informal communication.  But, it's actually in a tag in the spec,   >> <c14nalg>.  Yikes!  Yet, we have <transformations> instead of <t12ns>,   >> and the fairly ubiquitous term "signature" which could be replaced   >> with "s7e".  The people who thought this up could probably also save a   >> lot of space/typing my storing only two digits for year values.   >   >While I don't feel that strongly on the issue, XML is supposed to be   >readable.  I don't think the twelve bytes saved per signature are   >significant enough to warrant the abbreviation.  But then, my favorite   >applications aren't particularly sensitive to size.    c14n is quite common in the Web community and spreads like a virus once  people first see it. comes from i18n (internationalization), can be  generalized for A(X-3)ion words.    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      I've been banging my head against our syntax (with few good results) ... but  here are some simple questions that perhaps will prompt some others'  thoughts, I'll follow with another convention proposal.       Simple Questions      Elements         Do people prefer Element Names as:      1. <DigestAlgorithm>...</DigestAlgorithm>         <DigestValue>...</DigestValue>      2. <Digest>            <Algorithm>            <Value>         </Digest>              If people prefer #2, we can change SignatureValue to SignatureResult     since it is a special case.         Defaults         There are three ways to express semantics, via explicit representation     in the XML syntax, a default declaration in the DTD, or via the     natural language in the specification. Do people prefer:      1. Semantics should be communicated via explicit syntax whenever         possible possible.      2. Syntax should be as brief as possible.              Properties:       * Do we call things algorithm, name, or type?               _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

        As a Co-Chair of a joint IETF/W3C WG, I was thinking that it would be quite  nice if the W3C and IETF agreed on a common specification schema/DTD. (This  could make my life easier when I find a WYSIWYG XML/CSS editor I'm happy  with for editing specs! <smile>)    Marshall, the efforts at the W3C [1] to date have been informal within the  XML activity and on the spec-prod list [2]. However, the folks involved have  come up with quite a nice DTD [3]. What is the status of usage/deployment of  your Informational RFC on a schema/DTD for RFCs and have you seen [4]? Any  interest in harmonizing/subsetting/profiling? And then there's always the  XSLT option...    [1] http://www.w3.org/MarkUp/SGML/spec-mgmt.html  [2] http://lists.w3.org/Archives/Public/spec-prod/  [3] http://www.w3.org/XML/1998/06/xmlspec-report-19980910.htm      http://www.w3.org/XML/1998/06/xmlspec-19980910.dtd  [4] http://www.ietf.org/rfc/rfc2629.txt    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Woops, when I moved the file I forgot to change the relative reference,  should work now.    At 07:10 00/01/17 +0100, Gregor Karlinger wrote:   >"Joseph M. Reagle Jr." wrote:   >>    >> [2] http://www.w3.org/Signature/Edits.html   >   >I'm afraid something is wrong within that file. My Browser could not access   >the file WG.css.       _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 03:15 PM 6/24/99 -0400, Winchel 'Todd' Vincent, III wrote:   >So, while the digital signature give us pretty good assurance that the bits   >and bytes have not been altered, this assurance is not exactly what we're   >after -- what we really want is to make sure the meaning has not changed --   >i.e., that we have credible evidence.    OIDS and URIs don't solve this problem in and of themselves. They merely  make a resource addressable, and provide a useful hook for accessing/hanging  semantics, including external meaning that is material to the original  content. You have to do one of two things depending on what you want:     1. If you want that meaning to be available/assured with the same level of  availability/assuredness of the content, it makes sense to make an  institutional/policy commitment [2:Axiom 2b] to credibly preserve it (by  inline expansion, packaging, caching  or some such thing.)   2. If you want to detect if the meaning changed, you can include a hash of  the resource next to the URI in the manifest. (lighter weight)    Regardless, these only solve the problem for the person signing the  document: making sure that other stuff didn't change. It doesn't solve the  problem of meaning before a third party, like a court. Say I have a  document.A, that references an external document.B that I don't control.  Even if I include it in a package with my document and sign both, that  merely means I'm asserting that document.B was at that URI. Maybe I'm lying  and included a document not at the given URI but one of my own choosing!  Similar to a real contract, all semantics need some level of independent  third party verifiability. Schema designers might very well end up  registering/time-stamping their schema at a reputable third party for such  purposes.     >The solution to this problem is to make Schema B unambiguous and set the   >unambiguity in time.   >me that application developers are largely ignoring OIDs.  I was very   >surprised to find that the Namespace Recommendation did not require URI to   >be unique.    I'm having difficulty understanding what "uniqueness" has to do with this.  [1,2]      [1] http://www.w3.org/DesignIssues/NameMyth.html  [2] http://www.w3.org/DesignIssues/Axioms.html  Axiom 1: Global scope: It doesn't matter to whom or where you specify that  URI, it will have the same meaning.  Axiom 2a: sameness: a URI will repeatably refer to "the same" thing   Axiom 2b: identity: of URIs clears up the vagueness of 2a and is that the  significance of identity for a given URI is determined by the person who  owns the URI, who first determined what it points to.         _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      Who/when is the action item on sending text to the list?    At 02:22 9/5/2000 -0400, Donald E. Eastlake 3rd wrote:  >RSA Signature Format:  >         URIs to identify wrapping of the Signature?  >         include OIDs?  >Inclusion of the algorithm OIDs within the secured  >potion of the signature is needed for security.  No one saw  >any reason to include plain text OIDs outside that area.  >The current specification that such an OID prefix is included  >should be dropped.  >  >Raw X.509 Cert Type:  >         The consensus on the call was that adding a RetrievalMethod  >Type for a binary X.509 certificate was a good idea.  It was  >also clarified that the Type should specify the type of the  >data AFTER application of the transforms.  So, for example, one  >could retrieve a plain Base 64 encoded certificate and use it  >with this type by providing a Base 64 decode transform.        _________________________________________________________  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      [Note change to Subject:]    At 22:41 7/2/2001, KOBZAR,IGOR (HP-Cupertino,ex1) wrote:  >I have a question regarding the expected behavior for caclulating the digest  >value of the null URI (URI="") in case if reference does not contain a  >Transforms element.  URI="" identifies the nodeset (minus any comment nodes)  >of the XML resource containing the signature.  The Transforms element is  >optional.  Does application that calculates a digest value has to skip this  >reference from calculation, or skip the digest value element, or skip the  >text of the digest value element, or indicate an error/warning?    I'm not sure if I understand, but I'll try to answer from my own   understanding. If you have a  'same-document' reference the result is a   nodeset. For reference validation you are required to validate that reference.    If that reference is followed by a subsequent enveloped transform, all   conformant implementations MUST be able to process it. If the same document   reference is an ID or XPointer, implementation SHOULD be able to process it.   (If they can't, they can throw an error.)    >Is the test for such expected behavior a part of the compatibility   >tests?  Any reply is appreciated.    Note in [1] all implementations implement the enveloped transform, not all   support arbitrary XPointer/XPath expressions.      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      As we all know, we are presently using URNs for algorithm identifiers that  are non-sensical -- they do not exist; they have not been registered.           Assignment of a URN is a managed process.        I.e., not all strings that conform to URN syntax are necessarily        valid URNs.  A URN is assigned according to the rules of a        particular namespace (in terms of syntax, semantics, and process).          [1] ftp://ftp.isi.edu/in-notes/rfc2611.txt    Of course, we've needed some space fillers in our draft until we come up  with something better. To that end (something better), I've been looking at  the various policies of institutions and even have a potential syntactical  solution that might help our situation.    In referencing W3C specifications we are ok. While verbose, the W3C uses the  dated name (URL) of a specification to reference the semantics of that  specification.     RFC2611 [1] specifies how to register/request a URN from IANA if we need to  do so (though I prefer W3C namespace in the XML context) but we can't yet  refer to other IETF semantics using URNs. The IETF URN Working Group charter  [2] lists an Informational RFC proposal [3] regarding the allocation of IETF  URNs to RFCs, but there is still no governing policy to my knowledge.     [2] http://www.ietf.org/html.charters/urn-charter.html  [3] ftp://ftp.isi.edu/in-notes/rfc2648.txt    And of course, this says nothing of other institutions like RSA, ISO, etc.    When I was speaking with Tim Berners-Lee and Dan Connolly about this issue  we agreed that "making up" URNs defeats the purpose of URNs: ensuring  integrity, persistence, and non-collission based institutional management of  that namespace. The WG needs to use registered URNs, or create our own and  then define which references apply to which tokens in that name space.    Dan and Tim suggested something that I think interesting if I understand it  properly. We might have attributes that look like:          <DigestValue IETF:base64="a23bcd43">    Or, we could try something along the lines of nesting     <Signature xmlns="http://www.w3.org/1999/10/signature-core">          xmlns:IETF="http://www.w3.org/1999/10/signature-core/IETF"      <SignedInfo id="a">            <ObjectReference Location="http://www.ietf.org">                     <c14n>                        <IETF:sha1>                            <IETF:base64>a23bcd43</base64>                        </IETF:sha1>                     </c14n>                  </ObjectReference>    and in the spec we define what signarure-core/IETF or /NIST means via a  normative reference.    What would really be nice is the ability to have qualified attribute values!  Like:         <DigestValue Algorithm="IETF:base64">a23bcd43</DigestValue>  This feature is not in the present XML Schema WD [4].  However, the Schema  WG Chair tells me they expect to have this in the next or following draft.    [4] http://www.w3.org/TR/1999/WD-xmlschema-1-19990924/     Any other thoughts? I don't know how the IESG will react, but I've been told  that W3C will not  look kindly upon bogus URNs. (A further request on XML  Schemas follows in the next message.)              _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 21:49 99/10/12 -0700, John Boyer wrote:   >Originally, I had thought that an empty Location (or one that starts with a   ># fragment if we allow fragments in Location) should mean 'this' document.    John, the typical way of referring to "this document" is          <a href="">this document</a>  This is why fragment IDs are interprated the way they are when no URI  precedes them. [1]    I believe people are speaking of what happens when you don't provide the  location element itself, then assume it is implicit to the context.    This must also be distinguished from what happens when you have a location  element but no attribute, did the DTD define a default attribute value?    In order to keep some grasp on all this optionality, I'd prefer we have  don't specify lots of optionality in the natural language nor that we rely  upon XML/DTD attribute definition defaults.    ___    [1] http://www.ietf.org/rfc/rfc2396.txt    4.2. Same-document References       A URI reference that does not contain a URI is a reference to the     current document.  In other words, an empty URI reference within a     document is interpreted as a reference to the start of that document,     and a reference containing only a fragment identifier is a reference     to the identified fragment of that document.  Traversal of such a     reference should not result in an additional retrieval action.     However, if the URI reference occurs in a context that is always     intended to result in a new request, as in the case of HTML's FORM     element, then an empty URI reference represents the base URI of the     current document and should be replaced by that URI when transformed     into a request.        _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 12:21 7/26/2000 -0400, Ed Simon wrote:   >XMLSig implementors are under no obligation to try to handle   >data types that do not have well-defined c14n algorithms   >associated with them.  To me that is outside the scope   >of both the XMLSig WG and implementors.  And as I said,   ><Transform> elements are really intended just for converting   >XML input to XML output.    Additionally, under "See What you Sign" if the semantics imparted by those  formats are not well represented to the users, they have serious security  problems.    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 20:07 99/09/16 -0400, Ed Simon wrote:   >Element and attribute names should be lowercase, complete   >English words, where each word is separated by a hyphen.     >(I think this is the preferred W3C way.)      Show me where. (In general, I'd like people to reference the things they  talk about as much as possible.) What I see is:    http://www.w3.org/TR/html40/struct/global.html   single words   CAPS for element names   lowercase for attribute names    http://www.w3.org/TR/REC-smil/   single words, hyphenated in a few instances   lowercase all    http://www.w3.org/TR/REC-MathML/chap3_1.html   single words/acronyms   lowercase for all     >So for example,    ><sigblock> should really be <signature-block>.    I tend to like short names, but your comment for spelling things out is not  the first. I've cc'd chairs because at a MIT meeting this week we joked that  we would save _many_ hours of discussion time across all the W3C WGs that  flip-flop on issues like this. A few people have been pushing for optional  though standardized style and editorial conventions across all W3C  specifications, as shown in [1]. I'd add this topic to the list, but  progress has been slow. I'd love to see some usability research on this  stuff actually.    [1] http://www.w3.org/Guide/Reports.html#style    ____    From: Ed Simon <ed.simon@entrust.com>  Date: Thu, 16 Sep 1999 20:07:38 -0400  Subject: RE: minor naming point (why full names are important for archivin  g)  Status:  O    Element and attribute names should be lowercase, complete  English words, where each word is separated by a hyphen.    (I think this is the preferred W3C way.)  So for example,   <sigblock> should really be <signature-block>.    The importance of making names as legible as possible was   brought home to me by some presentations I saw on those   who archive documents.  Included among the great, grand   features of XML are that ideally it is both machine-readable   and human-readable, and that it minimizes the problem of   effectively losing data just because the technology to   read that data has become lost.  Unlike me and others   who love the "let's change everything every five years"   world of high-tech, archivists are all too familiar   with the experience of having billions of bits that   cannot be comprehended because the technology to read   them has been lost.  I heard one fellow representing   the US Patents and Trademarks Office say that his   documents needed to last the lifetime of the Republic   and that as long as English was understood, the Office's   electronic patent information archives could be understood  because it was encoded in XML.    Digital signatures are invaluable for securing archives;   frankly, archiving is one of their most important uses.  I expect archivists would strongly prefer we use full  names rather than ones meaningful only to those of us  involved in standards work.    Ed        _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      Colleagues,    The W3C Advisory Committee is reviewing the activity; the IETF has approved  of the activity. Donald and I have collected numerous comments which we will  use to tweak the charter once the W3C AC review is complete.    The list should be debugged and ready to go, and the URI for the WG is:          http://www.w3.org/Signature/    However, we would like to get some work done in anticipation of the Oslo  IETF meeting. Don and I shall use the following conventions to structure  work in this WG.    ____      http://www.w3.org/Signature/#pending    Pending Chair Action Items and Requests             Presently, the list is managed by the chairs using the following          subject header tokens to distinguish WG management from          substantive technical discussion. WG members should not initiate          discussions -- though they can obviously reply -- using tokens unless          a chair has delegated an item. Messages from WG members to          one of the Chairs in the chair capacity should have both co-chairs          included, with the co-chair from whom you expect action in the "to:"          header.             CHAIR REQUEST/ANNOUNCE: (CR/CA)                Used to announce or request attention to a particular WG               management issue such as next call, FTF, or WG  policy.           CHAIR CONSENSUS: (CC)                An email containing a summary of perceived consensus or               poll consensus that WG members should review and/or               respond to.             The  hypertextual token links to the email that includes the complete          action item or request; the parenthetical date (YYMMDD) includes          the open/close date for that item.   _________________________________________________________  Joseph Reagle Jr.     Policy Analyst      mailto:reagle@w3.org  XML-DSig Co-Chair   http://w3.org/People/Reagle/        

      FYI-only: Any discussion should happen on the encryption list [1].    [1] http://lists.w3.org/Archives/Public/xml-encryption/    Forwarded Text ----  >Date: Thu, 21 Sep 2000 10:04:03 -0400  >To: "Public XML Encryption List" <xml-encryption@w3.org>  >From: "Joseph M. Reagle Jr." <reagle@w3.org>  >Subject: Call for Participation: XML Encryption Workshop  >  >http://www.w3.org/2000/09/XML-Encryption-Workshop.html  >  >W3C XML-Encryption Workshop  >  >Thursday, November 2, 2000  >Lafayette/San Francisco, CA  >  >Host : XCert  >Chair:  Joseph Reagle <reagle@w3.org>  >  >  >         Registration and rules for participation  >  >Participants do not have to be W3C members. However,  >everyone must REGISTER by October 23. Participants are  >expect to be familiar with the reading below. Registration  >is on a first-come-first-served basis and registration will  >be limited to 35 participants. So make sure you use the  >REGISTRATION FORM to ensure that you can attend.  >  >         Workshop Goals and Scope  >  >If XML is to become the language of trusted Web applications  >(e.g., electronic commerce) it needs standard mechanisms for  >digitally signing and encrypting XML entities (and it needs  >them soon!). Furthermore, this mechanism must be fully  >functional in environments where only XML tools are  >available. While the joint IETF-W3C Working Group is  >completing a XML Digital Signatures specification, its  >charter expressly precludes work on encryption.  >Consequently, this Workshop will focus on (1) the  >requirements for XML encryption, (2) the proposals being  >discussed on the public XML Encryption list as potential  >starting points for a specification and (3) the structure of  >a possible W3C activity to advance such a specification to  >Recommendation.  >  >         Relevant topics include:  >  >         Scope of encryption: should the scope apply to  >         elements only, or any Information Set Item? How  >         should the scope of encryption be described/  >         identified: should the data model be based on a  >         simple ad-hoc representation or the complete  >         Information Set? Should the data model be  >         represented via URIs or an XML instance using RDF  >         Schema or XSet?  >  >         KeyInfo: Given that encryption keys might encrypt  >         content or other keys, in what way must the  >         Signature KeyInfo be extended to handle the common  >         Encryption applications?  >  >         Digital Signature "awareness" and syntax alignment:  >         to what degree can XML-Encryption use use similar  >         syntax and algorithm identifiers?  >  >         Schema design: how will encryption portions of an  >         XML instances affect that instances XML schema  >         validity? Algorithm, modes, and formats: which  >         algorithms and formats MUST be supported?  >  >         Parser impact: will parser have to either  >         post-process or be "callback equipped" to avoid  >         re-parsing of an entire document after a portion has  >         been decrypted? What rat holes can be identified  >         as out of scope?  >  >         Related topics that are not part of XML Encryption  >         (though they may provide requirements as an  >         application) are:  >  >              XML Access Control Policies: specifying  >              policies and mechanisms beside encryption that  >              control access to XML content.  >              Trust Mechanisms: specifying how much a key is  >              trusted in a given application context.  >  >         Expected audience  >  >We expect several groups will be interested in the workshop:  >  >         Experts in XML and data-models, who understand the  >         affect and requirements related to parsing/validity  >         and how to best represent the relation between the  >         plain text and encrypted content within a single  >         instance.  >  >         Experts in Encryption, who wish to ensure XML  >         Encryption applications are properly secured and  >         which KeyInfo structures are critical to dependent  >         applications.  >  >         Experts in Message Protocols, who understand the  >         requirements messaging protocols may have with  >         respect to encrypting a conversation/interaction as  >         part of the protocol.  >  >         Draft Agenda  >  >A preliminary draft agenda is available.  >  >         Position Papers  >  >Position papers are not required. However, attendees must be  >informed with respect to the reading below. If you would  >like to give a presentation on related issues or proposals,  >please contact the Chair.  >  >         Workshop organization  >  >The workshop will last for a single day. The structure of  >the workshop will be focussed on addressing the issues and  >leaving with specific approaches towards the technology and  >its standardization.  >  >         Meeting Location Details  >  >The meeting will be taking place at the Lafayette Park  >Hotel, a ~40 minute drive from San Francisco. Methods for  >getting from San Francisco to Lafayette include rent-a-car,  >door-to-door van service, taxi, and public transport.  >Driving directions from San Francisco and Oakland Airports,  >as well as from SanJose are available. The Workshop will  >take place at:  >  >              George Washington Meeting Room  >              Lafayette Park Hotel  >              3287 Mount Diablo Boulevard  >              Lafayette, CA 94549  >              925-283-3700  >  >         Hotel Details  >  >A set of rooms have been reserved at the Lafayette Park  >Hotel at a reduced fee. While the registration page asks if  >you require a room, this is only for planning purposes. You  >must make your own room reservation by October 23 and state  >that you wish to have the XCert rate.  >  >         Further Reading  >  >The XML Encryption Discussion List  >   Another proposal of XML Encryption, Takeshi Imamura  >     (Mon, Aug 14 2000)  >   XML Encryption strawman proposal Ed Simon  >     (Wed, Aug 09 2000)  >   XML-Signature Syntax and Processing  >   Canonical XML  End Forwarded Text ----    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      As already mentioned, the definition of ds:KeyInfo uses a (1,unbounded)   choices over mandatory elements to emulate an unordered set of optional   elements. On hindsight this appears to be a bad choice for a couple reasons.   First, it can make derivations difficult as the optionality can not be   easily constrained since it is "simulated." Second, I thought an unordered   list was preferable but now it seems preferable to know when you are going   to see these elements (e.g., what's the point of having these things in a   random order, particularly elements from an external namespace). Third, with   our present approach of using choice, I can't think of a way to constrain   KeyValue to occurring once. (See examples below of how this can be   expressed). The only down side is that this sort of structure permits and   empty KeyInfo, which Merlin just suggested a fix for given use of "choice."    Any thoughts?    __    <element name="KeyInfo" type="ds:KeyInfoType"/>  <complexType name="KeyInfoType" mixed="true">     <sequence>       <element ref="ds:KeyName" minOccurs="0" maxOccurs="unbounded"/>       <element ref="ds:KeyValue" minOccurs="0" maxOccurs="1"/>       <element ref="ds:RetrievalMethod" minOccurs="0" maxOccurs="unbounded"/>       <element ref="ds:MgmtData" minOccurs="0" maxOccurs="unbounded"/>       <element ref="ds:PGPData" minOccurs="0" maxOccurs="unbounded"/>       <element ref="ds:SPKIData" minOccurs="0" maxOccurs="unbounded"/>       <element ref="ds:X509Data" minOccurs="0" maxOccurs="unbounded"/>       <any processContents="lax" namespace="##other" minOccurs="0"   maxOccurs="unbounded"/>       <!-- (0,unbounded) elements from (0,unbounded) namespaces -->     </sequence>     <attribute name="Id" type="ID" use="optional"/>  </complexType>          <!ELEMENT KeyInfo(#PCDATA|KeyName*|KeyValue?|RetrievalMethod*|                  X509Data*|PGPData*|SPKIData*|MgmtData* %KeyInfo.ANY;) >      <!ATTLIST KeyInfo      IdID#IMPLIED >    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001JanMar/0122.html    __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      Kent,    I wanted to point out that the examples you sent me (and Petteri confirmed)  for the forthcoming Signature specification include an <X509Name> element  that is not part of the schema. Do you mean X509SubjectName? If you're able  to send me a new example by the time it is published (sometime tomorrow)  I'll include it, otherwise I'll note the mistake in the text.      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 13:54 7/26/2000 -0400, Ed Simon wrote:   >I think we need input from someone like Henry T. who deeply    >understands schemas.      While we await an answer from Henry, I came up with the following prose (if  schema doesn't do the complete trick) since I'm looking at that section  anyway. We could probably get rid of the XSLT element type in the dsig  namespace as its just a hint in the schema that style sheets can go there ...    http://www.w3.org/TR/2000/WD-xmldsig-core-20000711/#sec-XSLT    6.6.5 XSLT Transform  Identifier:  http://www.w3.org/TR/1999/REC-xslt-19991116  The Transform element contains a single <XSLT> element /+ that MUST contain  a single <stylesheet> element (and its children/content) as defined by the  XSL Transforms [XSLT] language and its namespace.+/ The processing rules for  the XSLT transform are stated in the XSLT specification [XSLT].    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      (draft-ietf-xmldsig-core-06.txt should follow ...)    http://www.w3.org/TR/2000/WD-xmldsig-core-20000510/    W3C Status of this document          This specification follows the XML Signature Last Call and attempts to     address all last call comments sent to the list and those issues     discussed at the April meeting. This version should be the last before     the document is proposed as a Proposed Draft and Candidate     Recommendation. Consequently, it still has a few editorial marks     [underlined and/or in red] and things that must be done before it can     be advanced including:      1. Finalize the disposition of all last call comments.      2. We are not confident that our use of schema namespaces and         qualifications provides a single schema that can be used for         enveloped signatures (signature within content being signed),         enveloping signatures (content is within signature being signed)         and detached signatures (over data external to the signature         document).      3. Further work and coordination needs to be done regarding our         employment of URIs, IDs, and XPath           1. Including the specification of algorithm identifier as              defined by XPath that eliminates the Signature element within              enveloped signatures.      4. Ensure that if the syntax constraints of section 7.1 are followed,         a validating parser is not needed.      5. Clarify any remaining ambiguities in the KeyInfo section.      6. Update the acknowledgements to reflect changes in working group         participation and the comments sent during Last Call.              Please send comments to the editors and cc: the list     <w3c-ietf-xmldsig@w3.org>. Publication as a Working Draft does not     imply endorsement by the W3C membership or IESG. It is inappropriate     to cite W3C Drafts as other than "work in progress." A list of current     W3C working drafts can be found at http://www.w3.org/TR/. Current IETF     drafts can be found at http://www.ietf.org/1id-abstracts.html.          Patent disclosures relevant to this specification may be found on the     Working Group's patent disclosure page.           _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 12:24 8/11/2000 -0500, Dan Connolly wrote:   >    Mar. 8, 2000: Namespace Myths Exploded by Ronald Bourret    >http://www.xml.com/pub/2000/03/08/namespaces/index.html    "Fortunately, the resolution of this myth is unimportant, as it does not  affect how documents that use XML namespaces are written or how  namespace-aware applications process unprefixed attribute names."    So my question is the above true? This thread started when Gregor [1]  commented we need to go through our examples and interop instances and  qualify the attributes as required by the namespace spec. However, the  namespace doesn't require this (but it also states that those attributes are  not qualified). However, we can still be schema valid because our schema  uses attributeFormDefault="unqualified". However, I'm not sure of what all  the implications of this choice are which leads to the STATUS comment in the  Signature spec:            1. Ensure that our use of schema namespaces and qualifications          provides a single schema that can be used for enveloped           signatures (signature within content being signed), enveloping           signatures (content is within signature being signed) and detached          signatures (over data?external to the signature document).          http://www.w3.org/TR/2000/WD-xmldsig-core-20000711/    If someone that understands namespaces and attributeFormDefault better than  me could make a recommendation about which path we should pursue, I'd  certainly appreciate it!    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0240.html    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

                           [1]IETF [2]W3C   [3]XML Signature WG                                             99-October-28    Chairs: Donald Eastlake and Joseph Reagle    Note Taker: Joseph Reagle [[4]ascii]      Participants         * Donald Eastlake 3rd, IBM       * Joseph Reagle, W3C       * Mark Bartel, JetForm       * David Solo, Citigroup       * Ed Simon , Entrust Technologies Inc.       * Barbara Fox, Microsoft       * Todd Vincent, GSU       * John Boyer, UWI (regrets, couldn't get through to bridge)             Review of Outstanding Action Items      Agenda         * Misc         For encoding issues, why not just use Base64 for SignatureValue         and DigestValue. Solo: one day, the resulting might be XML CDATA,         but till then, the algorithms that we use need to be encoded and         Base64 makes sense. Call agrees to define encoding for those two         values as Bas64.         We shouldn't appropriate the control of other institutuional         namespaces, we should move back for dsig:foo for the short term         until we resolve the issue satisfactorily.                * Location - < 10 minutes         Leave an attribute but change name to HREF?         Make an element with an HREF attribute?         Make an element with URI content?         Is it mandatory to support a non-null Location?           List proposal to allow the location to exist outside of         SignedInfo. Call wants to keep location in the signature, it is a         URI (not necessarily a URL) and the call prefers the employment of         redirection/indirection through URIs not this syntax.         Leave <ObjectReference Location="http://www.ietf.org"> as is.         Define null-location as <ObjectReference Location=""> as referring         to this document, must be supported. Do we extend it to mean         "#ID". No: Location is URI (including null) or IDREF.         (Can anyone remember the reason why we just don't use         FragmentIDs?)         * Field ordering - < 5 minutes         More volatile fields first?           Placing more volatile fields first might make it harder for         bruteforce attacks. Are things like c14n expansion, field ordering         really important to the security given our hash algorithms? Do we         add a nonce? Call: take to list. (Bartel doesn't want nonce just         for static text. Eastlake: some algorithms are weak and might need         a nonce, but those are not the best algorithms.) Fox will talk         with Jim and crypto guys as to whether we need about how sensitive         we need to be about small bits of text, field ordering, and         redudancy.         * Transforms - < 10 minutes         Parameters as Parameter elements?         Provide for Quoted-Printable decoding?           No one on the call is opposed to "parameterizing" transform, but         Boyer had voiced opposition in the past. (No decision, continue         discussion with Boyer present or on list.)         Call agrees to list Quoted-Printable as an optional encoding, part         of the same MIME reference as the Base64.         * KeyInfo - <10 minutes         Who will do draft of next level of detail?         Should recipient identification information not necessary to key         agreement be provided for?           Fox completed her action item; Eastlake acknowledges.         Couple of additions, KeyInfo should be defined as ANY and should         also have an ID attribute associated with it.         * "Properties" - < 10 minutes         Is properties the best name?         Should we define a signing time property?           Solo: "signature properties" everyone agrees.         KeyInfo is also a type of property of an Object. There's         discussion as to if you want to have the signature include the         KeyInfo, whether you place a KeyInfo in an Object, or just point         to the KeyInfo (under Signature) from an ObjectReference.         Eastlake: ObjectReference could just point to KeyInfo ID instead         of sticking it inside an Object. Call seems favorable but need to         think about it more.         Put signed-properties as a sub-element of an open content model         Object. This allows us to say the stuff in the signed-property         bucket can include external XML elements, but that they         should/must only carry semantics about the signature generation         (like device, or time.)         If we define signing time, should be part of a non-normative         chapter or seperate document (Reagle would like to have its own         namespace for purposes of demonstration.)         ...         <Object>           <SigningTime         xmlns="http://www.w3.org/1999/10/signature-core/time">               <Date>...</Date>               <Time>...</Time>               ...           </signing-time         </Object>       * Reagle aside: one thing we need to address in our defininitions         are things like attribute, property, and such given there are so         many collisions.                * Schema? - 5 minutes         We need someone to try writing a schema, based         on the W3C schema draft, of our syntax to         see how it goes.           Ed Simon said he would attempt a Schema.                * Canonicalization          Reagle: restate what I though the consensus was            + no mandatory to use c14n anywhere.            + no mandatory to implement c14n in transforms              no mandatory to implement in SignedInfo though hopefully              implementation experience can inform further dicission.         Solo restatement: SignedInfo: the absense of the c14nMethod then         there is no c14n, this is also consistent with Transform. Continue         discussion on list.    References       1. http://www.ietf.org/     2. http://www.w3.org/     3. http://www.w3.org/Signature/Overview.html     4. http://www.w3.org/Signature/Minutes/991028-tele,text        _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

        No no content, but the spec is now a Proposed Recommendation at the W3C.    [1] http://www.w3.org/TR/2001/PR-xml-c14n-20010119  [2] http://www.w3.org/Consortium/Process/Process-19991111/tr.html#RecsPR        __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Hi Phill,    When we considered how to partition our namespace for algorithm and   structure purposes, we had two options:    [a] http://www.w3.org/2000/09/xmldsig#foo  [b] http://www.w3.org/2000/09/xmldsig/foo    RDF had already made significant use of "#foo" and this approach makes it   much easier to maintain  all the URIs with respect to dereferencing in that   I don't need a directory, instead, the namespace URI is redirected to the   latest version of the spec for which there are actual fragments   explaining/corresponding to that URI.    At 11:23 1/8/2001 -0800, Philip Hallam-Baker wrote:  >As currently specified the XML Signature namespace URI is specified as  >  >http://www.w3.org/2000/09/xmldsig#  >  >The final # is causing comment to be made. Is it or is it not significant? I  >reference the XML Signature spec in XKMS and each time I issue a draft I get  >questions about the # and I would like to avoid giving tutorials on XML  >fragment identifiers.  >  >Is there a way we could loose the # in the final itteration?  >  >         Phill      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 21:52 3/15/2001 +0100, Gregor Karlinger wrote:  >o You argue, that you can maintain a defined sequence of the certain  >   types of children within KeyInfo. But this is only true, as long as  >   there are used only the predefined types of XML-Signature. The sequence  >   cannot be maintained any more if there are more than two newly defined  >   types are used:  >o As Merlin argues, it would be sufficient to semantically restrict the  >   number of occurences for KeyValue to a maximum of one; this would increase  >   the number of possibilities for reuse of the KeyInfo type by other   > parties.    Thank you for your responses Gregor and Merlin. We'll leave KeyInfo as a   choice (instead of a sequence).    __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      I expect we should send the comments next week. This is the formal  anouncement that this will be the position that is represented as a  consensus position of the WG.    http://www.w3.org/Signature/2000/02/CanonicalXML-comments.html    Canonical XML-comments       Author(s):            Ed Simon, Entrust <ed.simon@entrust.com>       The [3]XML Signature WG has reviewed the [4]19 January 2000 draft of     Canonical XML. Though we have some non-mandatory concerns about      normalizing character encodings, we feel the draft meets our requirements      for doing "XML aware canonicalization." (We will also specify a minimal      canonicalization that treats the content as text only.)       For the record, this note includes a summary of our discussions     regarding two topics related to Canonical XML. The first topic     is the character encoding one just mentioned; the second deals     with the treatment of XML Fragments returned by XPath.                 Normalization of character encoding ([6]section 5.1 of     Canonical XML issued 19 Jan 2000):            The XML Signature WG sees no signature or security implications            with respect to the normalization of character representation.            However, as a community of XML application developers we are            concerned that requiring implementors to do such normalization            may be introducing more complexity than is reasonable for the            stated benefit. No Working Group member has advocated the            character normalization as specified and a few members have            expressed concern about its requirements on limited processors.       Canonicalization of XML Fragments:            The XML Signature WG discussed whether our requirement to            serialize and canonicalize the string-value results of XPath            should be met by Canonical XML. ((Such that the string-value            was a well-balanced element (as defined by [7]XML Fragment            Interchange) that could be canonicalized). We determined that            if even if the serialization and canonicalization of Xpath            result is an issue for the XML Signature WG, it needs to be            resolved by the XML Signature WG and is not an issue for the            Canonical XML WG. In particular, the XML Signature WG will take            responsibility for describing how to canonicalize a            well-balanced element.       In summary, we thank the Canonical XML WG for their efforts and look     forward to further implementation experience and reports -- both from     our own community and others.           _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 13:29 99/11/17 -0800, Jim Schaad (Exchange) wrote:   >The schema referenced in this document does not appear to even parse as an   >XML document.  Can you correct this so I can load this into IE5 and look at   >it.            http://www.w3.org/Signature/Drafts/WD-xmldsig-core-19991117.html  now includes a link to:          http://www.w3.org/Signature/Drafts/xmldsig-core-schema-19991117.xml  which is well formed and valid for:          http://www.w3.org/TR/1999/WD-xmlschema-1-19991105/structures.dtd  according to:          http://www.stg.brown.edu/cgi-bin/xmlvalid/xmlvalid.pl          http://www.cogsci.ed.ac.uk/~richard/xml-check.html    Though IE isn't rendering it (I did have it working at one point before I  went off to validate it at the other sites.) If you see the problem, please  let me know.    Attribute 'xmlns:' must be a #FIXED attribute. Line 17, Position 18                    model      (open|refinable|closed) 'closed' >  -----------------^      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Susan,    Thank you for the typos you pointed out in [1]. They will be fixed in the  forthcoming draft.    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JanMar/0209.html    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        Two documents out today.    XML Signature Syntax and Core  http://www.w3.org/TR/2000/WD-xmldsig-core-20000601/  Many small fixes, improvements to the XPath and RSA (6.4.2 PKCS1) sections.  We'll try to bring this to the attention of the IESG and W3C Director for  consideration on the standards track. The softest spot is the dependency on  canonicalization obviously. It speaks to this point as follows:            5. Presently, there are interoperable implementations of the           19991115 draft of the Canonical XML [XML-C14N] specification           and that algorithm is used in the examples in this version of the           specification. However, further implementation experience will be           used to refine the 20000601 version [XML-C14N-a] which will           then replace the older version as the MANDATORY canonicalization           algorithm.     Proposed Canonical XML  http://www.w3.org/TR/2000/WD-xml-c14n-20000601  We've already had good comments from John Cowan and Kent TAMURA, hopefully  we can publish a new version soon that accounts for any resulting  discussion. Beyond being new text (which means its green and is likely to  have ambiguities and decisions that need fixing that a 6th generation spec  wouldn't), Boyer is using the XPath data model:            This draft is a proposal that (1) serves as an alternative           approach to the Canonical XML specification using the XPath           [XPath] data model, and (2) it includes a few substantive changes           that affect the canonical serialization of an XML document. Prior           versions of this document were published by the XML Core Working           Group, which delegated the completion of this specification to the           IETF/W3C XML Signature Working Group. Any variances between that           result from this specification's use of the XPath [XPath] data model           and the XML Information Set [Infoset] will be reported to the XML           Information Set's comments list.      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 11:17 99/08/23 -0500, Paul Grosso wrote:   >I have a few comments as chair of the XML Fragment WG (and proposed   >co-chair of the proposed future XML Packaging WG):    Paul, thank you for your comments. Others from the Signature WG should feel  free to comment since they most likely understand the application  requirements better than me, but a couple of quick responses below:     >Though the XML Activity Phase III [1] proposal includes an XML Packaging   >WG, it is not scheduled to start for some time, so it is fairly likely   >that the XML Sig WG will not have a W3C Rec for packaging in time.    Understood. We hope to have a stable and mostly implemented spec by end of  year. Our packaging requirements are likely to be focused more on the  meaning of the relationship of an included document and the ref it allegedly  came from. Or to put it in f: terms,   between the <f:parentref> and <f:fragbody/> as an assertion of a  relationship vouched by some party at some time, given the context of  fetching or processing the content.     >hope the XML Sig WG could do likewise, perhaps using something as similar   >as possible to what the XML Frag WG did normatively and/or demonstrated   >non-normatively in its spec [2].   >   >[1] http://www.w3.org/1999/05/xml5436   >[2] http://www.w3.org/TR/WD-xml-fragment and, more specifically,   > http://www.w3.org/TR/WD-xml-fragment#packaging    Ok.     >These comments raise some concerns for me that some folks may either   >misunderstand XML Fragments or expect them to be doing more than    >they are.  In short, packaging was deemed--insofar as possible--to be   >outside the scope of the XML Fragment work.     Well, if you define the work as fragment as a single fragment in relation to  its context, you are quite right. But we know our applications need more  than that, and were hunting for a home for that issue. <smile>     >As far as "signing and processing XML fragments," since an XML fragment   >package (and a fragment context specification document) is a well-formed   >XML document, signing it should be no different than signing any XML   >document (though I could be missing something about signing, that not   >being something on which I've got expertise).    Signatures simply sign some octets. There are innumerable applications  semantics that might be represented in that pile of octets. XML Signatures  wants to keep it as simple and formal as possible while including a minimal  set of the XML stuff out there (like fragments) such that we have a critical  mass of functionality. So if we sign an XML fragment as a bunch of bytes, I  agree. If Signed XML is a XML fragment application itself and using it to do  some application/trust functionality (even if only minimally) things get  hairy. This also applies to transformation or XLink. Particularly, the  latter if XML Signature uses XLink to reference the things it signs, does  that mean it has to know XPtr too (it'd be nice, but then all applications  have to know it show they have shared semantics), but then there are many  complexities involved that would take a great deal of time to think through.     >It sounds to me like there are several important requirements    >coming out of XML     Here are a couple that I've identified:    Dependency: logical/assertion semantics of package must be explicit.     Dependency: expectations regarding the processing/c14n (e.g., white space)  of content within a package must not violate signature or XML content  semantics.     Dependency: signed content in/over packages. how to combine element IDs such  that they do not collide but also do not get changed?     Dependency: how to show the relative relationships of package parts. For  example, how to include XML content with stylesheets and related resources  used for rendering.    Dependency: signing non-contigous portions of XML content in a way that  retains their relative positions/context.      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      Reagle wrote: "But as time went on and people used those examples we refined  what we had. However, we are approaching a point that is out of scope." Or  we may have already exceeded it, that's what we can discuss on Thursday.  <smile>      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Right. This issue is under discussion by the Schema WG (both the white space   preservation/omission issue in general and the 'collapse' facet in   particular). Depending on the outcome, we may have to revert to our own   definition of base64.    At 06:18 6/9/2001, Gregor Karlinger wrote:  >Joseph,  >  >I think the current Schema definition at least of the  >DigestValueType leads to severe problems:  >  >DigestValueType is derived by restriction from the XML Schema  >simple type base64Binary. The *FIXED* value of the "whitespace"  >facet is "collapse" for all atomic types other than string [1].  >  >A value of "collapse" means that a validating parser normalizes  >whitespaces in the string content of the DigestValue element.  >  >This behaviour could break the signature, if the signer produces  >a digest value containing sequences of whitespaces, and the verifier  >schema validates the signature.  >  >Since the "collapse" value for the "whitespace" faced is *FIXED* we  >cannot derive our DigestValueType from "base64Binary". Instead we  >could derive the type by restriction from "string" since then we  >are allowed to change the value of the "whitespace" facet to  >"preserve" [1].  >  >This issue is vital with respect to DigestValueType, but maybe it also  >makes sence to change the definition of SignatureValueType, CryptoBinary,  >X509SKI, ... since this elements are also likely to be covered by a  >signature, and then the same problem applies there.  >  >---  >[1] http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#rf-whiteSpace  >  >Liebe Gruesse/Regards,  >---------------------------------------------------------------  >DI Gregor Karlinger  >mailto:gregor.karlinger@iaik.at  >http://www.iaik.at  >Phone +43 316 873 5541  >Institute for Applied Information Processing and Communications  >Austria  >---------------------------------------------------------------  >      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

        The latest version of the Canonical XML specification [1] (with many   up-to-the-wire example tweaks!) has been published and will be forwarded to   the W3C Director for consideration as Candidate Rec.    [1] http://www.w3.org/TR/2000/WD-xml-c14n-20001011.html    Abstract        Any XML document is part of a set of XML documents that are logically      equivalent within an application context, but which vary in physical      representation based on syntactic changes permitted by XML 1.0      [15][XML] and Namespaces in XML [16][Names]. This specification      describes a method for generating a physical representation, the      canonical form, of an XML document that accounts for the permissible      changes. Except for limitations regarding a few unusual cases, if two      documents have the same canonical form, then the two documents are      logically equivalent within the given application context. Note that      two documents may have differing canonical forms yet still be      equivalent in a given context based on application-specific      equivalence rules for which no generalized XML specification could      account.    Status of this document        This document is referred to the W3C Director for review and      consideration as a Candidate Recommendation. It addresses all issues      raised during the [17]second Last Call. The list and disposition of      last call issues is [18]a living document maintained by the [19]XML      Signature Working Group.        This specification includes editorial and technical clarifications and      corrections suggested by last call reviewers. Additionally, this      version also includes one substantive difference from the previous      version: the recent [20]XML plenary decision regarding deprecation of      relative namespace URIs is represented in this specification.        The [21]XML Core Working Group, which published the first Last Call      [22][C14N-20000119], has delegated the completion of the Canonical XML      specification to the IETF/W3C [23]XML Signature Working Group      [[24]list archives].        The XML Signature Working Group invites implementation feedback during      this period. Please send comments to the editor and cc: the list      <[25]w3c-ietf-xmldsig@w3.org>. While we welcome implementation      experience reports, the XML Signature Working Group will not allow      early implementation to constrain its ability to make changes to this      specification prior to final release.        There have been no declarations regarding patents related to this      specification within the XML Signature Working Group.    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Thank you for informing us in compliace with:          http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#annotate    At 16:55 3/30/2001 -0500, Carol Foster wrote:  >Hi,  >  >I'm planning a talk about Web Accessibility where I will focus mainly on  >the WAI Priority 1 recommendations.  I would like to include slides/Web  >pages that contain the Priority 1 items from the Checklist  >(http://www.w3.org/TR/WCAG10/full-checklist.html), including the  >appropriate copyright info.  >  >The reason I am writing is that I am also thinking of adding a few of my  >own comments and examples on each slide/Web page as well, and I would  >guess that this counts as an annotation.  If I clearly label my  >annotation as such, and inform you of my plans and when this is on the  >Web, is that all I need to do?  (I do agree to the items mentioned about  >redistribution and possibly rescinding my publication rights.)  >  >The talk is called "Increasing Web Site Accessibility" and is planned  >for presentation at the Massachusetts Education Computing Conference,  >June 13-15, 2001 at UMass Boston.  I would also like to put the  >slides/Web pages on the Web some time before that and leave them there  >after that.  Probably they would be linked off the training page of my  >group's site, http://www.umassp.edu/uis/ipg/training.html  >  >Thanks so much,  >Carol  >  >--  >Carol Foster, Web Developer  >University Information Systems  >University of Massachusetts, President's Office  >(413) 587-2130  >c.foster@umassp.edu  >--      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      The Last Call in both institutions have ended.    The resulting issues list that was raised can be found at [1]. This list  will constitute much of the agenda at the forthcoming FTF on April 20th.    I'd like to put out a quick version of the spec with whatever corrections  we've made up to then next week, then one more after the FTF for discussion.  After that (in May) we should go to Candidate Recommendation / Proposed  Standard RFC.     [1] http://www.w3.org/Signature/20000228-last-call-issues.html    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Some people have asked why is the Syntax WG doing C14N. Mainly it's  historical, someone sort of needed to do a definition of what XML meant, and  it would be useful for conformance testing and Signatures, so the Syntax  group was giving the ball. Infoset is defining what XML "means", and the  Syntax WG has to decided to make the C14N an Infoset subset+processing  (rather elegant). We will continue to assume the application of (1) DSIG and  (2) conformance testing have no requirements which force them to diverge  unless we have evidence to the contrary.    If any W3C folk are keen on joining the Syntax WG, they are looking for a  C14N editor. We hope to post a new C14N requirements document within the day  and a first public WD ASAP.    Forwarded Text ----   Chairs: recruit co-editor for C14N WD.      Not Done, Any Volunteers?       James T. or Co-editor: Update WD to reflect all of the changes   or additions that have come up since it was published:    http://lists.w3.org/Archives/Member/w3c-xml-syntax-wg/1999May/0038.html    http://lists.w3.org/Archives/Member/w3c-xml-syntax-wg/1999May/0042.html    http://lists.w3.org/Archives/Member/w3c-xml-syntax-wg/1999May/0047.html    http://lists.w3.org/Archives/Member/w3c-xml-syntax-wg/1999May/0051.html   Last part of:    http://lists.w3.org/Archives/Member/w3c-xml-syntax-wg/1999May/0057.html    http://lists.w3.org/Archives/Member/w3c-xml-syntax-wg/1999Jun/0004.html   Last Part of:    http://lists.w3.org/Archives/Member/w3c-xml-syntax-wg/1999Jun/0012.html    http://lists.w3.org/Archives/Member/w3c-xml-syntax-wg/1999Jun/0029.html   This is all here to just be helpful to the editors.      James T. said to be posting new WD as the meeting is going on.   Consensus: Group to review new WD.     ...      4. Scheduling, and dependencies.      Group is supposed to be finished with work by June 30th.   That will not happen.    The XML-DSig WG: Needs the first WD to be out by June 25th.      Joseph: Possible hold up going to PR, even if done, waiting on   XML-DSig to finish.      Any time dependencies from InformationSet WG?      ACTION: Joel to talk to David Meggison.      5. Canonicalization      Items for review:      1. Should we add the algorithm for taking any XML document, and   make it have the property of standalone="Yes" that James T. talked   about earlier, as an appendix to the C14N Spec. Or should this   just be a note to be published separately?      Consensus: Yes, if editorial resources are available.      2. Correspondence with InfoSet and this WG. What issues need   to be reviewed and decided?    http://lists.w3.org/Archives/Member/w3c-xml-syntax-wg/1999May/0055.html    http://lists.w3.org/Archives/Member/w3c-xml-syntax-wg/1999Jun/0013.html    http://lists.w3.org/Archives/Member/w3c-xml-syntax-wg/1999Jun/0015.html    http://lists.w3.org/Archives/Member/w3c-xml-syntax-wg/1999Jun/0016.html    http://lists.w3.org/Archives/Member/w3c-xml-syntax-wg/1999Jun/0017.html   Especially:    http://lists.w3.org/Archives/Member/w3c-xml-syntax-wg/1999Jun/0018.html    http://lists.w3.org/Archives/Member/w3c-xml-syntax-wg/1999Jun/0020.html    http://lists.w3.org/Archives/Member/w3c-xml-syntax-wg/1999Jun/0022.html    http://lists.w3.org/Archives/Member/w3c-xml-syntax-wg/1999Jun/0023.html      Paul: Why should we deliver a C14N algorithm for DSig, when we   are not experts in DSig.   Joseph: To start with, have a smaller group to be used andtested.   James C: Does not believe that all XML InfoSet information is   needed to do processor conformance.      ACTION: Joseph to see if he can get a co-editor from the   XML-DSig WG who is in the W3C come join this group to be a   co-editor for the XML-DSig part of the Spec.      Consensus: Proceed with working on both use cases, and   discover where needs are different.      6. Changes to RD between WG approval, and submission to W3C team.      ACTION: Joel send Location to Joseph Reagle, so he can   put on TR Page.   ACTION: Joseph to post email to WG list when done.   Consensus: Group will review posted RD from the TR page.         Joel     End Forwarded Text ----  _________________________________________________________  Joseph Reagle Jr.     Policy Analyst      mailto:reagle@w3.org  XML-DSig Co-Chair   http://w3.org/People/Reagle/        

      At 17:28 10/6/2000 +0900, TAMURA Kent wrote:  >But my question was that the order of canonicalizing SignedInfo  >(3.2.2 1) and obtaining the key (3.2.2 2) was really REQUIRED?    Ok, the text reads as below. However, I still have a question about the   requirements over KeyInfo. If KeyInfo is provided and it doesn't contain a   key that validates the Signature, but another Key can be found that does, is   the signature valid? Basically, is the "or" in "keying information from   KeyInfo or from an external source" is exlusive, or a "and/or".      3.2.2 Signature Validation    1. Obtain the keying information from KeyInfo or from an external source.  2. Obtain the canonical form of the SignatureMethod using  the   CanonicalizationMethod and use the result (and previously obtained KeyInfo)   to validate the SignatureValue over the SignedInfo element.    Note, KeyInfo (or some transformed version thereof) may be signed via a   Reference element. Validation of this reference (3.2.1) is orthogonal to   Signature Validation which uses the KeyInfo as parsed.    Additionally, the SignatureMethod URI may have been altered by the   canonicalization of SignedInfo (e.g., absolutization of relative URIs) and   it is the canonical form that MUST be used. However, the required   canonicalization [XML-C14N] of this specification does not change URIs.    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      The following was sent to W3C Chairs and XML Plenary.    Forwarded Text ----   Date: Mon, 10 Jul 2000 13:10:32 -0400   To: W3C Chairs and XML Plenary   From: "Joseph M. Reagle Jr." <reagle@w3.org>   Subject: Canonical XML Last Call   Cc: "Donald Eastlake" <dee3@torque.pothole.com>         The Canonical XML specification is entering its second last call. Last Call  ends July 28th. (The XML Signature WG has a FTF meeting the next week).  While there was a last call by the XML Syntax WG at the beginning of the  year, this last call is needed for the following reasons:   1. This version is produced by the XML Signature WG.   2. This version has been adapted to use the approach of using the XPath  data model to serialize XML data.   3. Consequently,  much of the XPath serialization text that was present in  the Signature specification has been moved to the Canonical XML  specification.       I believe that we've addressed most of the issues raised by the I18N WG  material to XML serialization that were raised during the Signature  specification Last Call. I hope this last call will serve a useful check  point to further (1) tease apart the Signature and C14N specifications  issues, and (2) (redundantly) ensure that those issues which may have  transferred to the C14N specification are addressed.      Those WG's invited to review this specification include:      1. XML Query   2. XML Core   3. I18N      __      http://www.w3.org/TR/2000/WD-xml-c14n-20000710      Abstract         This specification describes a method for generating a physical      representation, the canonical form, of an input XML document, that      does not vary under syntactic variations of the input that are defined      to be logically equivalent by the XML 1.0 Recommendation [16][XML]. If      an XML document is changed by an application, but its Canonical-XML      form has not changed, then the changed document and the original      document are considered equivalent for the purposes of many      applications. This document does not establish a method such that two      XML documents are equivalent if and only if their canonical forms are      identical.           [16] http://www.w3.org/TR/2000/WD-xml-c14n-20000710#XML      Status of this document         This is the second Last Call of the Canonical XML specification and      the third draft of an alternative approach to the first [17](20000119)      Last Call. The Last Call ends on July 28, 2000. (See [18]proposal and      resolved thread to go to last call.) This specification differs from      the first Last Call in that it (1) uses the XPath [19][XPath] data      model, and (2) includes a few substantive changes that affect the      canonical serialization of an XML document. It is not necessary for      implementations to use XPath to generate the canonical form of an XML      document. XPath simply provides a data model that is simplified      compared to InfoSet, yet sufficient for the purpose of      canonicalization. XPath also provides an expression syntax for      describing the desired portion of a whole document. Any variances      between that result from this specification's use of the XPath      [20][XPath] data model and the XML Information Set [[21]InfoSet] will      be reported to the XML Information Set's comments list.           [17] http://www.w3.org/TR/2000/WD-xml-c14n-20000119.html        [18]  http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0018.html        [19] http://www.w3.org/TR/2000/WD-xml-c14n-20000710#XPath        [20] http://www.w3.org/TR/2000/WD-xml-c14n-20000710#XPath        [21] http://www.w3.org/TR/2000/WD-xml-c14n-20000710#Infoset         Prior versions of this document were published by the [22]XML Core      Working Group (the last of which was the [23]20000119 Last Call),      which delegated the completion of this specification to the IETF/W3C      [24]XML Signature Working Group.           [22] http://www.w3.org/XML/Activity#core-wg        [23] http://www.w3.org/TR/2000/WD-xml-c14n-20000119.html        [24] http://www.w3.org/Signature/         The XML Signature and XML WGs and other interested parties are invited      to comment on this proposed direction, review the specification and      report implementation experience. While we welcome implementation      experience reports, the XML Signature Working Group will not allow      early implementation to constrain its ability to make changes to this      specification.         Please send comments to the editors and cc: the list      <[25]w3c-ietf-xmldsig@w3.org>. Publication as a Working Draft does not      imply endorsement by the W3C membership or IESG. It is inappropriate      to cite W3C Drafts as other than "work in progress." A list of current      W3C working drafts can be found at [26]http://www.w3.org/TR/. Current      IETF drafts can be found at      [27]http://www.ietf.org/1id-abstracts.html.           [25] mailto:w3c-ietf-xmldsig@w3.org        [26] http://www.w3.org/TR/        [27] http://www.ietf.org/1id-abstracts.html         There have been no declarations regarding patents related to this      specification within the Signature WG.     End Forwarded Text ----    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

       >In the XML-DSIG draft specification, I have proposed the use of XLink   >because they do not mandate the URI portion. By default, an XLink refers   >to the containing resource, thence allowing relative references. I   >strongly feel that mandating the use of URI will render the   >specification inapplicable to XML applications that heavily rely upon   >composition (IOTP, eCheck, BIPS...). Recall that, before all, they   >authenticate XML elements and not necessarily XML documents.      I think I agree and had reformulated it yesterday as (sorry for all the  updates, but it will freeze tomorrow for FTF discussion and I'm trying to be  as responsive as possible till then):     >XML-Signatures can be applied to any Web resource -- including non-XML    >content. XML-Signature referents are identified with URIs that refer to    >external or internal resources (i.e., network accessible or within the  same    >XML document/package). [Berners-Lee, Reagle, Brown, List(Vincent)]     Perhaps it make more sense to use the XLink terminology of locator? (I'm  open to alternative wordings -- feel free to make a proposal.) Which  specifies:    Locator     Locator ::= URI       | Connector (XPointer | Name)       | URI Connector (XPointer | Name)     Connector ::= '#' | '|'     URI ::= URIchar*       Regardless, we are going to  have to give more thought to the processing  model of XLink/Xptr, which I raised on the workshop list. [4] To prompt this  I also had added the following terms [3]:        6. XML-Signature applications must           1. understand XML-Pointers [XPointer]. Applications will              reference/select parts of XML documents using XML-Pointer.              [Reagle]           2. understand XML-namespaces [XML-namespaces] in the creation of              its own signature syntax. Applications may optionally choose              C14N algorithms which do or do not process namespaces.           3. understand XLink. Applications will use XLink to reference              signed resources in the manifest. Applications do not embed              or expand XLink references in the signed content, though              applications may optionally choose C14N which provide this              feature.    Another question I have, which I've wondered about in the Jetforms  submission (slow getting to our site as a NOTE, but should be up soon) is  are the following two identical?    1. select then C14N  2. C14N then select    Depending on how/if we permit XPtr, these two operations will not result in  the same fragment from which one generates a hash. If one selected a XPtr  spanning term, that included two attribute location terms (or string terms)  as its bounds, the C14Nical re-ordering of attributes will goof things. (See  sectin 3.7 [3])     ____      [1] http://www.w3.org/TR/WD-xlink#addressing  [2] http://www.w3.org/Signature/Drafts/xml-dsig-requirements-990601.html  [3] http://www.w3.org/TR/WD-xptr    [4] http://lists.w3.org/Archives/Public/w3c-xml-sig-ws/1999May/0000.html    Resources, XPointer, and Fragment Identifiers  Joseph M. Reagle Jr. (reagle@w3.org)  Thu, 06 May 1999 16:20:54 -0400     Messages sorted by: [ date ][ thread ][ subject ][ author ]   Next message: Joseph M. Reagle Jr.: "Draft Charter"     -----------------------------------------------------------------------------  ---    Message-Id: <3.0.5.32.19990506162054.00a287d0@localhost>  Date: Thu, 06 May 1999 16:20:54 -0400  From: "Joseph M. Reagle Jr." <reagle@w3.org>  Subject: Resources, XPointer, and Fragment Identifiers    [I'm raising this issue while it's fresh in my mind and to put it on the  issues list of the WG once it is formed.]    I was talking to Philipp Hoschka (W3C Architecture Domain Lead) about some  of the coordination issues with XML and we spent a small amount of time  talking about filters, selectors, and XPointer when I said signed-XML was  probably going to punt on the issue of using "filters" to say which elements  and sub-blocks are signed. Or, only go as far as requiring that if an  element block wants to be signed, it should have an ID attribute specified  that can be referenced in a locator in the manifest. Philipp responded by  stating that if you permit URIs, then you permit XPointer. [1] Were we going  so far as to say only URIs, or only certain types of URIs. (He also  mentioned that XSL selectors and XPtr should converge.)    This seems odd to me in the following way. signed-XML will be a XML 1.0  application, but need it be an XPtr application, do they mean the same  thing? Imagine one implementor who supports XPtr and uses them in his  manifest, and another who doesn't. The semantics are not shared and in a way  that is dangerous to interoperability.  I'm comfortable with the idea of a  signed-XML application failing on the fact that it doesn't recognize a HTTP  scheme (e.g., locator="foobar:ASF*&@#$~~"). But less comfortable on failing  because of fragment identifiers.    Presently, Richard Brown's signed-XML draft states that:          Locator: Locator value that contains either a URI [RFC 2396], a             fragment identifier, or both. Notice that making use of a             fragment identifier for a document content other than XML is             out of the scope of this draft proposal and may lead to             inconsistent results.    This certainly seems true. But I think we should be more specific. Also,  this might even be true in XML if XPtr is used, because the semantics of the  content after the "#" (i.e., "http://*#stuff") is defined by the MIME type.  Does the registered MIME type specify XPtr?    [1] http://www.w3.org/TR/WD-xptr  ___________________________________________________________  Joseph Reagle Jr.  http://www.w3.org/People/Reagle/  Policy Analyst     mailto:reagle@w3.org      -----------------------------------------------------------------------------  ---      Messages sorted by: [ date ][ thread ][ subject ][ author ]   Next message: Joseph M. Reagle Jr.: "Draft Charter"     _________________________________________________________  Joseph Reagle Jr.     Policy Analyst      mailto:reagle@w3.org  XML-DSig Co-Chair   http://w3.org/People/Reagle/        

      Joseph,    I'm actually not sure I understand your example without the portions of XML,   but it sounds like an issue discussed before. The following text was agreed   to in the specification to address it:  http://www.w3.org/TR/2000/CR-xmldsig-core-20001031/#sec-See  >For instance, if an XML document includes an embedded style sheet [XSLT] it   >is the transformed document that that should be represented to the user and   >signed. To meet this recommendation where a document references an external   >style sheet, the content of that external resource should also be signed as   >via a signature Reference -- otherwise the content of that external content   >might change which alters the resulting document without invalidating the   >signature.    As Phill points out, Canonical XML provides a serialization of a XML node   set, that's it. If you have concerns about other references, that is an   application issue as Donald points out. (Consider a weird screw case where   some applications might *wish* to make a statement about a URI with dynamic   content.) Otherwise, if you want these things to be signed, then sign them   in the Signature or package them together in some such archive.    At 14:39 1/5/2001 -0800, Joseph Ashwood wrote:  >I've found a security risk in canonical XML that I believe needs to be  >covered. Simply stated through example (with probably large portions of xml  >left out):  >  >...  ><... namespace declaration...>  ><agreement>I agree to pay the amount(s) shown in the namespace</agreement>  >...  >  >once signed, can be later altered simply by changing the namespace  >declaration from reading "Purchase Barbie for 19.95" to "Purchase Ferrari  >for 150,000". The effect being that instead of getting a charge of 19.95 on  >the credit card, the charge becomes 150,000. We have seen these security  >risks become reality with servers being continually hacked all across the  >internet. I can think of no immediate solution outside of embedding the  >namespace file in the canonical XML. I don't think this problem will go  >away, it will just get worse.  >                             Joe      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 09:12 4/19/2001 -0400, Donald E. Eastlake 3rd wrote:  >My draft doesn't prohibit there being anything at the URL's. These  >additional URIs are, at this instant, not part of the W3C standard or  >otherwise in the orbit of the W3C.  The XMDLSIG standard permits  >algorithms defined by other orgnanizations, such as these, and does  >not require them to be dereferencable.  Do you want to change the  >XMLDSIG standard to require dereferencability?    I doubt that. I think the question is if folks in the WG prefer it, are you   willing to publish it as a W3C NOTE and use a W3C namespace because the W3C   is fairly robust in its versioning, stability, and persistence associated   with its URIs?    (I don't feel too strongly either way.)      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      The second XML Signature Last (at the W3C) closed yesterday (just to make   sure everyone had there say [1]). So, we'll be working on moving that to   CR/Proposed shortly.    [1] http://www.w3.org/Signature/20000228-last-call-issues.html    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Folks,    I pulled many of the references Dan referred to in the discussion on URIs,  stated my understanding, and made a proposal on how to deal with signing the  content of a resource that is also sent in a package. Please comment!    http://www.w3.org/Signature/Drafts/xml-dsig-design-resources-990723.html      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 09:04 AM 7/30/99 -0700, tog wrote:   >Yes, but knowing the totality of the use models tells you how deep the  water   >potentially is, and right now we don't know this.    Agreed, [1]        4. Document the WG's position on signature semantics with a         non-standards-track document. At the Chair's discretion the WG may         develop a (small) set of signature semantics. Such a proposal         would define common semantics relevant to signed assertions about         Web resources and their relationships in a schema definition ([32]         XML/[33]RDF) or link type definition ([34]XLink).          [1] http://www.w3.org/Signature/charter-19990624.html         >>         2. Punting promotes design generality.   >   >What do you mean by "Punting"     Definition (3,4) of [2]    punt /v./     [from the punch line of an old joke referring to American football: "Drop  back 15 yards and punt!"] ... 3. A design decision to defer solving a  problem, typically because one cannot define what is desirable sufficiently  well to frame an algorithmic solution. "No way to know what the right form  to dump the graph in is -- we'll punt that for now." 4. To hand a tricky  implementation problem off to some other section of the design. "It's too  hard to get the compiler to do that; let's punt to the runtime system."   [2] http://www.journalism.wisc.edu/jargon/jargon_30.html     >> All of those things that you spoke of are difficult problems even if you   >> think they can be solved trivially by adding an attribute in the   >sig-block,   >> there are many many ways to do them incorrectly. [1]   >   >And this is ecactly why in the PKI world the "use model" (Applicability   >Statements) are so powerful. becuase if we don't set the scope of the   >usefull envelope of our technologies, the implementors may (read as "will")   >try to do stuff that is inherently broke and we wind up looking like fools   >then for not telling them they couldn't do "XY and Z" without "A" too.     Understood, but many of these things you spoke of will be predicated on the  data-model/inference/trust-engines of capability/policy/statement/assertion  systems that we have no control over. We are merely signing those things.  We, in general, will not be able to tell people what sort of trust  applications they can design, but we need to make sure we use a data model  such that "signature validity" can be cleanly applied over any trust  semantic. For a lot of these critical applications (packages, time stamps,  etc.) thinking them through as a test of generality of our design is  probably a good idea, but coming to a consensus on a design solution for  those problems is not in the critical path/charter of this WG. (Though we  can certainly re-charter to address these issues in the second phase.)      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

        Forwarded Text ----  >W3C is pleased to announce the advancement of the XML Base  >specification to Candidate Recommendation status.  >  >     XML Base Version 1.0  >     8 September 2000  >     Editor: Jonathan Marsh <jmarsh@microsoft.com>  >  >     http://www.w3.org/TR/2000/CR-xmlbase-20000908/  >  > >From the Abstract:  >  >   This document proposes a facility, similar to that of HTML  >   BASE, for defining base URIs for parts of XML documents.  >  > >From Status of this Document:  >  >   This document is a Candidate Recommendation of the World Wide  >   Web Consortium. (For background on this work, please see the  >   XML Activity Statement.) This specification is considered stable  >   by the XML Linking Working Group.  >  >   The Working Group invites implementation feedback during this  >   period. Comments on this document should be sent to the public  >   mailing list www-xml-linking-comments@w3.org (archive) by  >   8 December 2000.  >  >   A list of current W3C Recommendations and other technical  >   documents can be found at http://www.w3.org/TR.  >  >Results of Last Call:  >  >   In most cases, the WG followed the Last Call comments; where  >   disagreement remained, the author of the comment has been  >   contacted. There is, however, one significant unilateral decision  >   remaining after this phase:  >  >   Martin Duerst is not satified with our resolution on  >   the way XML Base scopes into external entities. This issue  >   was discussed by both parties without reaching an agreement,  >   and is recorded at:  >   http://www.w3.org/XML/2000/08/xmlbase-comments-20000810#IDA34UP  >  >   The publication is in response to the Working Group  >   Co-Chair's request, archived in W3C member space at:  >  >   http://lists.w3.org/Archives/Member/chairs/2000JulSep/0097.html  >  >   The Candidate Recommendation period closes on 8 December 2000.  >  >Deliverables for the Candidate Recommendation period:  >  >   There is currently no specific implementation of XML Base  >   since the deployment strategy of this specification is by  >   normative references from new specifications. Currently  >   the XML Linking Language does such a reference, implying  >   that XLink and SVG (which references XLink) are known  >   candidates for XML Base implementation reports. The XML  >   Information Set has been extended to support XML Base.  >  >        - XML Linking Language (XLink) 1.0  >          W3C Candidate Recommendation 3 July 2000  >          http://www.w3.org/TR/xlink/  >        - Scalable Vector Graphics (SVG) 1.0  >          W3C Candidate Recommendation 2 August 2000  >          http://www.w3.org/TR/SVG/  >        - XML Information Set  >          W3C Working Draft 26 July 2000  >          http://www.w3.org/TR/xml-infoset  >  >   It is expected that at the end of the Candidate  >   Recommendation period, the Working group will deliver:  >  >         - proof of sucessful reuse of XML Base construct in  >        new specifications  >         - a report of successful XML Base implementations in  >        applications using those specifications.  >  >   Implementors are invited to contact the Working Group  >   chairs to participate in the final report.  >  >------------------------------      _________________________________________________________  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      The other approach is to place an ID attribute in SignatureProperty, which  seems like a better idea. So the identifier is the same, and  SignatureProperty now has an ID. The grammar for SignatureProperty and  SignatureProperties permits multiple instances of both, and that begs the  question of what the semantic meaning is. Now, the grammar doesn't  explicitly say this, it just states that you can place arbitrary content in  an Object, and consequently you can repeat SignatureProperties if you so  decided. But there's also the questin of where the Target attribute properly  sits. Options:    A. Remove all Targets; the SignatureProperty can only apply to the Signature  it is within. (What if nested?)  B. One and only one SignatureProperties per Signature, which includes a  Target attribute that defines to which Signature the SignatureProperty(s)  apply. (Remove Target from SignatureProperty(s)).  C. Other?    I advocate B.    At 13:28 2000-05-22 +0200, Gregor Karlinger wrote:   >Hello Joseph,   >   >I think it would be a good idea, to change the identifier to   >#SignatureProperties, because only the enveloping SignatureProperties   >Element currently has defined an Id attribute, contrary to   >SignatureProperty.   >   >Otherwhise it would not be possible to refer to such an item using our   >XPointer   >shortcut as part of a URI reference.   >   >Gregor   >---------------------------------------------------------------   >Gregor Karlinger   >mailto://gregor.karlinger@iaik.at   >http://www.iaik.at   >Phone +43 316 873 5541   >Institute for Applied Information Processing and Communications   >Austria   >---------------------------------------------------------------   >   >> I don't think I can speak very well to the functionality or   >> requirements of   >> this feature, but I believe the spec says the actual data   >> referenced is the   >> thing pointed to by a Reference. Kind of awkward I agree... good ideas  are   >> welcome!   >>   >>     http://www.w3.org/TR/2000/WD-xmldsig-core-20000510/#sec-Reference   >>     4.3.3 The Reference Element   >>   >>    The optional Type attribute contains information about the type of   >>    object being signed. This is represented as a URI. For example:   >>   >>    Type="http://www.w3.org/2000/02/xmldsig#Object"   >>    Type="http://www.w3.org/2000/02/xmldsig#Manifest"   >>    Type="http://www.w3.org/2000/02/xmldsig#SignatureProperty"   >   >    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 13:25 8/22/2000 -0700, John Boyer wrote:   >Attached is a copy of the latest editors' copy of the XML DSig  specification, except that I have added and deleted the text necessary to  implement the new Reference/Transform processing model discussed in the most  recent teleconference.      Cool.     >The sections of HTML surrounded by <u></u> and <strike></strike>    Other readers might find this useful to see your additions: (css is  convenient!)  1. s/john="john"/class="john"/  2.  u.john {color:green;}     >4) Rewrote text of all Transforms such that they indicate whether they  input and output an octet stream or a node-set.  Rewrote text surrounding  DigestMethod so that it is clear that if the input is not an octet stream,  then the node-set gets canonicalized.    Meaning that we are not requiring an explicit C14N? (It's implied?)  Regarding Don's comments from the call, do we need a "parse me" transform  that explicitly represents the conversion of octects to node-sets prior to  xml processing, or will this be implicit to the subsequent XML transform?    >8) I now distinguish between Canonical XML and Canonical XML with Comments.   This was really quite necessary to get everything to work and keep all of  the features we used to have.  Canonical XML with Comments is recommended,  not required.  As well, it seemed like it wouldn't hurt anything because  Minimal canonicalization would be quite difficult if comments had to be  omitted.    I'm not sure about this (or calling it 'parameterization'). If someone wants  to include comments, they have the option, but I don't think it needs to be  spoken of in the Signature spec even, just makes things seem more complex.     >9) The C14N Draft needs to be changed. Rather than taking an octet stream  representing the document plus taking an optional XPath expression to filter  the document, it will now take an octet stream or node-set as input, along  with an optional flag that tells whether or not comments should be omitted  from the output.  For the octet stream case (which is the one everyone's  really focused on right now), the stream will be converted to a node-set AS  CURRENTLY DEFINED as long as the comment flag is FALSE.  The identifier (URL  for C14N)#WithComments will be created within the C14N document.     Again, I fear this comment issue will cause confusion, and people will  wonder whether to include them. If an application wants to keep them, it can  simply specify its own XPath, but providing this option will just re-invite  people to discuss the nature of comments because they will worry which they  should use.    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Some thoughts [1]. (Basically, let's tighten our definition of a conformant  Signature application and define a conformant signature element as why that  is laxly valid according to the schema). Other thoughts are welcome.    __    [1] http://www.w3.org/Signature/2000/07/27-conformance.html       Status            This is a proposed enumeration of the conformance requirements            specified in            [3]http://www.w3.org/TR/2000/WD-xmldsig-core-20000711/ with            suggestions to provide greater organization and clarity that will            hopefully be reflected back into the next version of the            specification.       _________________________________________________________________          [3] http://www.w3.org/TR/2000/WD-xmldsig-core-20000711/       Presently, the specification constrains (a) XML Signature Syntax and     (b) XML Signature Applications. Most of the MUSTs relate to XML     Signature applications. Should we cast all of these constraints as     application conformance requirements or syntax requirements? (I don't     think the latter is possible and that we should continue to want to     use both as discussed below).    Syntax       I'm not sure what these MUSTs mean as they are more descriptive than     prescriptive. (This is also currently being discussed on the list).       * 7.1 XML 1.0, Syntax Constraints, and Canonicalization         Thus, to interoperate between different XML implementations, the         following syntax constraints MUST be observed when generating any         signed material to be processed as XML, including the SignedInfo         element:       * 7.2 DOM/SAX Processing and Canonicalization         For an XML Signature to be verifiable by an implementation using         DOM or SAX, not only must the syntax constraints given in         [4]section 7.1 be followed but an appropriate XML Canonicalization         MUST be specified so that the verifier can re-serialize DOM/SAX         mediated input into the same octect stream that was signed.          [4] http://www.w3.org/Signature/2000/07/27-conformance.html#sec-XML-1       I believe a single syntax constraint should be stated along the lines     of:         a conforming digital signature element is an element that is       [5]schema-valid-lax [[6]XML-schema] with respect to the XML       Signature schema.          [5] http://www.w3.org/TR/2000/WD-xmlschema-1-20000407/#cvc-elt-lax        [6]  http://www.w3.org/Signature/2000/07/27-conformance.html#ref-XML-schema       The questions are:      1. Do we have any other choice? (We could speak of an XML1.0         Signature document, but this only works with external         signatures/DTDs).      2. How much work does this validation entail? We aren't using that         many schema features, consequently how much work does it take         relative to a schema validating parser?      XML Signature Applications       I suspect some of these could use some tuning.       * 1.3 Versions, Namespaces and Identifiers         ...The XML namespace [[7]XML-ns] URI that MUST be used by         implementations of this (dated) specification is:         xmlns="http://www.w3.org/2000/07/xmldsig#"         While applications MUST support XML and XML-namespaces, the use of         [8]internal entities [[9]XML] or our "dsig" XML [10]namespace         prefix and defaulting/scoping conventions are OPTIONAL       * 2.1 Simple Example (Signature, SignedInfo, Methods, and         References)         To promote application interoperability we specify a set of         signature algorithms that MUST be implemented, though their use is         at the discretion of the signature creator.       * 4.3.3 The Reference Element         XML Signature applications MUST be able to parse URI syntax. We         RECOMMEND they be able to dereference URIs and null URIs in the         HTTP scheme         XML Signature applications MUST support the XPointer '[11]bare         name' [[12]Xptr] shortcut after '#' so as to identify IDs within         XML documents.       * 4.4 The KeyInfo Element         While applications may define and use any mechanism they choose         through inclusion of elements from a different namespace,         compliant versions MUST implement Section 4.4.2: [13]KeyValue and         SHOULD implement Section 4.4.3: [14]RetrievalMethod.       * 4.4.4 The X509Data Element         Multiple declarations about a single certificate (e.g., a         X509SubjectName and X509IssuerSerial element) MUST be grouped         inside a single X509Data element; multiple declarations about the         same key but different certificates (related to that single key)         MUST be grouped within a single KeyInfo element but multiple         X509Data elements. For example, the following block contains two         pointers to certificate-A (issuer/serial number & SKI) and a         single reference to certificate-B (Subject Name):       * 6.1 Algorithm Identifiers and Implementation Requirements         Explicit additional parameters to an algorithm appear as content         elements within the algorithm role element. Such parameter         elements have a descriptive element name, which is frequently         algorithm specific, and MUST be in the XML Signature namespace or         an algorithm specific namespace.         Algorithms: SHA1 Base64, HMAC-SHA1, DSAwithSHA1 (DSS), Canonical         XML         The Enveloped Signature transform removes the Signature element         from the calculation of the signature when the signature is within         the document that it is being signed. This MAY be implemented via         the RECOMMENDED XPath specification specified in 6.6.4:         [15]Enveloped Signature Transform; it MUST have the same effect as         that specified by the XPath specification.       * 6.6.4 Enveloped Signature Transform         Note that it is not necessary to use an XPath expression evaluator         to create this transform. However, this transform MUST produce         output in exactly the same manner as the XPath transform         parameterized by the XPath expression above.          [7] http://www.w3.org/Signature/2000/07/27-conformance.html#ref-XML-ns        [8] http://www.w3.org/TR/REC-xml#sec-internal-ent        [9] http://www.w3.org/Signature/2000/07/27-conformance.html#ref-XML       [10] http://www.w3.org/TR/1999/REC-xml-names-19990114/#dt-prefix       [11] http://www.w3.org/TR/xptr#bare-names       [12]  http://www.w3.org/Signature/2000/07/27-conformance.html#ref-XPointer       [13]  http://www.w3.org/Signature/2000/07/27-conformance.html#sec-KeyValue       [14]  http://www.w3.org/Signature/2000/07/27-conformance.html#sec-RetrievalMethod       [15]  http://www.w3.org/Signature/2000/07/27-conformance.html#sec-EnvelopedSignatur  e          _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      I tweaked a few syntax errors, generalized the main graphic to a "schema"  DLG, added an instance DLG, and explained how this data model easily  provides for signing the native form of an encoded document.    [1] http://www.w3.org/Signature/Drafts/xml-dsig-datamodel-990823.html      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      I've written a draft XML Signature Profile ( < 10 pages) in an invented P3P   context [1]    This might be of interest to XML Signature folks because it shows how one   might use signatures in an application context (particularly the definition   of a signature semantic).    This might of interest to P3P folks because it shows how P3P might be fitted   with Signatures, and it includes a basic XSLT that transforms P3P policy in   XML --> English statement in  HTML.    [1] http://www.w3.org/2000/10/xmldsig-p3p-profile/    Abstract  This document specifies a P3P Assurance Signature Profile.    Status of this document    This document has no status what-so-ever. It is a very rough draft of the   author that hasn't received any review. It is not intended to be a normative   specification. Instead, it an captures the authors' thoughts on how   applications might use the XML Signature specification to meet their   requirements (defining signature semantics and algorithm profile) via the   P3P application context.    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 11:22 11/3/2000 +0100, Gregor Karlinger wrote:  >Please fill in a "Y" in all fields of the matrix,    Ok, have done [1]    >* Example 4 does not result in the expected canonicalization, since the  >   XML parser used does not correctly normalize an attribute of type ID.    Ok, I presume the parser will be fixed or tweaked. (Note I believe both of   these problems were encountered by Petteri as well [2].)    >* Example 7 only results in the expected canonicalization, if the test  >   file is modified in a way, that the example can be parsed using a  >   validating parser. Otherwise the id function in the document subset  >   selector XPath will not return any element.  >John,  >a question regarding example 7: Can I really expect from a non validating  >parser, that it recognizes the types of attributes, especially the type  >of ID attributes? If not, then an XPath using the id() function cannot be  >used for selecting a document subset to be canonicalized.    I'm not sure how this thread ended, did John's response [3] close the issue,   are we still thinking, or actually disagreeing about adding "the remaining   parts of the DTD, and additionally provide some textual description about   this problem of using the id() function. [4]    [1] http://www.w3.org/Signature/2000/10/10-c14n-interop.html  [2] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000OctDec/0110.html  [3] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000OctDec/0112.html  [4] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000OctDec/0110.html    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 18:46 99/11/24 +0000, Chris Smithies wrote:   >Why, when no other kind of electronic signature is invalidated by changing   >the document's location, should XML signatures be any different?    The argument is:  1. It is not a location; it is a URI.  2. Is is merely a collection of bits, which represent a syntax, which we  define the meaning of! If we don't define it to be a location that MUST be  dereferenced every time a signature is checked, then it isn't!    I define the syntax to mean:  a. There is a set of XML documents that when transformed yield DigestContent  (the content that is finally digested.)  b. At some point in time, the XML document obtained by dereferencing this  URI was just such a document.    Unfortunately, I'm not sure I've expressed it well, and any sort of  exposition on this topic seems to readily confuse people.    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Ok, thanks for clarifying!    At 13:16 9/8/2000 -0700, John Boyer wrote:  >I basically conceded the wisdom of these points, and life went on.  So,  >requiring the XSLT element wrapper now is not a flip-flop.  It's how the WG  >decided to do it last year.        _________________________________________________________  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      [Edits for the next version ...]    At 11:43 2000-05-01 -0400, Donald Eastlake 3rd wrote:   >Section 1.0, 1st pargraph, last sentence.  Replace final word   >"document" with "element" to follow definition of detached given in   >definitions section and make the list of types of signatures   >comprehensive.    Done.     >Section 2.0, last two sentences.  Does not read too smoothly and   >implies that detached signatures use URIs to external data objects   >when a "detached" signature may use a fragment to identify other data   >in the same document which happens to neither envelope the signature   >element nor be enveloped by the signature element.  Suggest something   >like:   >Within an XML document, signatures are related by local data   >objects via local framgent identifiers.  Such local data can be   >included witin an enveloping signature or can enclose and enveloped   >signature.  Signatures are related to external data objects via URIs   >[URI].  Internal data objects which are neither enveloped nor   >enveloping and all external data objects use detached signatures.    Good point. I used your text, then included the actual definition of  detached, then tweaked it all over resulting with:    Signatures are related to data objects via URIs [URI]. Within an XML  document, signatures are related to local data objects via fragment  identifiers. Such local data can be included within an enveloping signature  or can enclose an enveloped signature. Detached signatures are over external  network resources or local data objects that resides within the same XML  document as sibling elements; in this case, the signature is neither  enveloping (signature is parent) nor enveloped (signature is child).     >Section 2.2, red sentence, "to references a Signature element" ->   >"to reference a Signature element".    Ok.     >Section 4.2, "While we specify a mandatory (and optional)   >SignatureMethod algorithm," -> "While we specify mandatory and   >optional to implement SignatureMethod algorithms,".     Ok.     >Section 4.3.1, "creators" -> "creator's".     Can't find that.     >Section 4.3.3.1, 1st paragraph, reference at end should be to 8.1, not   >8.2.    Ok.     >Section 4.5, suggest changing 1st paragraph as immediately below and   >moving it down to just before the curretn 5th paragraph that starts    The reason it's first is to be consistent with those in section 6.     >with "Note. ".   >   "The type identifier (that can be used within Reference) is:" ->   >"The type identifier that can be used with Reference for an Object is   >as follows:".     How about:     The identifier (that can be used within a Reference element to identify the  referents type) is:  Type="http://www.w3.org/2000/02/xmldsig#Object"       >Section 4.5, curretn 4th paragraph, "signature document" -> "signature   >element".    Ok.     >Section 5.2, suggest same type of wording change as immediately   >above and moving 1st paragraph down to after second.    Kept at location to be consistent, and used similar wording as above.     >Section 6.6, 2nd paragraph, I don't think final documents should   >explicitly refere to "the Working Group".  Suggest rewording as "This   >will maximize applicaiton interoperability on XML signatures.  It   >appears likely that libraries will be available to enable support of   >these tranforms in applications without extensive development." or the   >like.    Ok.    Application developers are strongly encouraged to support all transforms  listed in this section as RECOMMENDED unless the application environment has  resource constraints that would make such support impractical. Compliance  with this recommendation will maximize application interoperability and  libraries should be available to enable support of these transforms in  applications without extensive development.     >Section 8.1, last line, "application" -> "applicaitons".    Ok.     >Section 8.2, last sentence, "application" -> "applications".    I think this was done before.      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      [1] http://www.w3.org/Signature/Group/dependencies.html       This document has been prepared during the [7]Last Call of the [8]XML     Signature Requirements Document. This coordination is expected to be     guided bythe [9]XML Activity Process for Requirements and Issue     Tracking.          The following text describes the Signature WG Chairs' views on     dependencies or requests for review that must be satisfied prior to     the XML Signature specifications being advanced beyond Last Call. We     are soliciting a commitment to resolve a dependency (by having it     addressed it in a spec or RD) and/or a commitment to review the XML     Signature specification(s) -- a specific question is sometimes     included as well. The W3C staff contact for the WG is idenitified     though he need not necessarily be the designated reviewer.       [17]XML Linking [20]XPath       Review: our specified signature referants/links and use of      XPath for selection/exclusion.          Question: Does selection in XPath necessary imply [28]Infoset/DOM     c14n? We believe it does.         28.  http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/1999JulSep/0284.html        _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 16:32 10/5/2000 +0900, TAMURA Kent wrote:  >I still have strangeness.    Ok, thanks for staying with me on this, but I still feel we're not on the   same path.    >In your scenario, signature  >applications can not get correct meaning of a KeyInfo only from  >the KeyInfo itself.    Ok, let me restate the scenario:    Forget about KeyInfo for the time being.    In order for applications to do signature validation (3.2.2) it must use the   specified SignatureMethod algorithm identifier. Since that is part of   SignedInfo, and SignedInfo is potentially altered by CanonicalizeMethod   before it is signed, signature validation should see the canonicalized form   of the SignatureMethod algorithm identifier.      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 10:04 12/11/2000 +0100, Karl Scheibelhofer wrote:  > > 2. 'FIXME, as is, minOccurs/maxOccurs of "choice" or "any" can be  > > omitted'.  > > Are you saying it's redundant? I'm not sure: what I think we were  > > saying is  > > you can have 0 or more elements (any 0:unbounded) from 0 or more  > > namespaces  > > (choice 0:unbounded). I agree with you if we want to say every  > > SignatureProperty content should only have elements from a single  > > namespace  > > -- which makes sense since people can use multiple SignatureProperties.  >  >yes, you are right. i simply missed the namespace issue.    Actually, my point here is that others might have though that (for instance)   a signature semantic and a time stamp (both from different namespaces)   actually did sit in their own SignatureProperty. How do others feel?      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 02:43 AM 6/25/99 +0900, Hiroshi Maruyama wrote:   >Joseph,   >I reviewed your post on the Syntax WG   >(http://lists.w3.org/Archives/Member/w3c-xml-syntax-wg/1999Jun/0075.html).    Aargh, sorry! I read your post as an application of Clark's method instead  of a hybrid. I didn't note that you capitalized "EACH" in the text below.      >>After following the discussion between Don and James Clark, however, I    >>realized that James Clark's proposal can also be made context independent    >>as he points out. ... I think it is  more reasonable and more preferable  to have a     >>C14N definition based on his proposal, using generated prefixes such as  "n1",     >>"n2", ..., and so on for EACH element.     The Syntax WG is not likely going to be able to reflect this prior to its  first public WD. Once it is published (so the whole xmldsig group can see  it) I recommend sending a new comment to the specification's-comment address  (and any other comments) for discussion. (Or if people want to continue it  here/now: fine.) Since I'm obviously not very good at porting subtly's from  private communications between two working groups, I'd recommend discussion  on this topic happen on both lists, or if the Syntax WG Chairs oppose, at  least keep the dsig list in the cc.     >This is an important property if we want to allow signing a part (a   >subelement) of an XML document.   >The current WD seems to allow canonicalization of a whole document only.   >Am I wrong?    I don't think so. Though it would help if I knew what change to the Tag  Processing Algorithm of section 6.1 were required.    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 17:51 9/7/2000 -0400, Donald E. Eastlake 3rd wrote:  >I haven't wrapped the text because I wasn't sure what the best width  >was but white space is ignored in Base64 so spaces and new lines can  >be inserted withough effecting the encoded certifciates.    Editorial question: were these requested? The big globs of data representing   the cert chain, intermediate cert, and root cert are rather ugly and verbose   for something that is optional regardless.    In our efforts to keep this document from bloating all out of proportion, we   don't even include an instance of a valid SignatureValue in-line (they are   external and referenced), consequently in light of ~terseness I'm not keen   on having these in-line. If people think it is fundamentally necessary to   the understanding of this portion of the spec, we could link to them...?      _________________________________________________________  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Comments on:           http://www.w3.org/Signature/Drafts/xml-exc-c14n.html    Ed: paragraphs 2-n of Terminology I would break off into a separate section   called "Concepts" as Terminology typically serves an editorial purposes and   little more.    Sub: Instead of relying upon the URI of the document as the algorithm   identifier (as we did in Canonical XML) this specification should define   one, as we did with namespaces. That way, as long as the spec is relatively   stable through editorial revisions, we don't have to change the identifier.   I propose:           http://www.w3.org/2001/07/xml-exc-c14n    Sub: Since subsetting is RECOMMENDED in Canonical XML, I presume it would be   here as well -- as would the UnsuppressedNameSpacePrefix. (I'm not sure I   agree with Merlin (haven't made up my mind) that we don't need to say a   comma separated list. It's good to know what the inputs to an implementation   be they a string, nodeset, URI, etc. If this is a string, we should probably   say it's encoding in any case).      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

        Please send comments, corrections, or additons.          http://www.w3.org/Signature/Minutes/000327-Adelaide/      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Agreed.    At 11:31 7/18/00 -0700, Kevin Regan wrote:   >   >The spec states (4.3.3):   >   >  Note that a null URI (URI="") is permitted and identifies the XML   >  document that the reference is contained within (the **root element**).   >   >However, shouldn't this be "root node" instead?  It seems that the   >XML C14N distinguishes "root node" (XML Document containing comments,   >PIs, and the "document element") from "document element" (the first   >or "root" element of the document).  The above line might be confusing...   >   >--Kevin   >   >    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 09:16 7/25/2000 -0400, Ed Simon wrote:   >I agree with Merlin.      But <any\> already is an option.     >   xmlns:xsl=""> <!--  NEW  -->    (You forgot the namespace "http://www.w3.org/1999/XSL/Transform"! <smile>)    Regardless, we might as well just remove the XSLT element (since it has its  own xsl:stylesheet element) and include a comment:       <element name='Transform'>        <complexType content='mixed'>         <choice minOccurs='1' maxOccurs='unbounded'>            <any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>   !       <!-- Including well formed XSLT elements -->           <element name='XPath' type='string'/>          </choice>         <attribute name='Algorithm' type='uriReference' use='required'/>        </complexType>     </element>    You could do the following but I don't see any reason to since it's  redundant.       <element name='Transform'>        <complexType content='mixed'>         <choice minOccurs='1' maxOccurs='unbounded'>            <any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>  !        <any namespace="http://www.w3.org/1999/XSL/Transform"/>           <element name='XPath' type='string'/>          </choice>         <attribute name='Algorithm' type='uriReference' use='required'/>        </complexType>     </element>      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      [Please provide the URI for the version of the document you are referring  to.]    Richard, thank you for your comments.    Resulting document is:    http://www.w3.org/Signature/Drafts/WD-xmldsig-requirements-991001.html                At 14:26 99/09/27 -0500, Richard D. Brown wrote:   >TYPOS:   >======   >   >page 1: "...,we have introduced changes that hopefully states..."   >instead: "...,we have introduced changes that hopefully state..."    removed this section.     >#2.1: "The specification must describe how to a sign..."   >instead: "The specification must describe how to sign a..."    ok.     >#2.2: "...Web resources are defined as any digital content content that..."   >instead: "...Web resources are defined as any digital content that..."    ok.     >OTHERS:   >=======   >   >#2.3: Why sublist 2.3.1-2.3.2?     I feel they qualify what it means to be simple.     >#2.3: "...via a strong one-way transformation."   >note: A signature or authentication algorithm is not necessarily a one-way   >function. It is a cryptographic algorithm whose strength primarily resides   >in the secrecy of a key.    The secrecy of the key is moot if the transformation is easily reversable.  It doesn't say a one-way function (but transformation) and we avoided "via a  cryptographic transformation" to avoid precluding signature methods that  weren't cryptographic. (I'm not advocating them, but I don't see why the  specification MUST preclude them.)  But later in the formal definition, I do  use "one way function" which I've fixed. I'm happy to change this if others  things I should though (to cryptographic transformation).     >#2.2.2: The formal description is quite confusing. among other things, R is   >defined as a resource and then used for a request.     Agreed! Now reads:    Comment: A more formal definition of a signed resource is below. The  notation is "definition(inputs):constraints" where definition evaluates as  true for the given inputs and specified constraints.    signed-resource(URI-of-resource, content, key, signature): (there was some  protocol message at a specific time such that "GET(URI-of-resource) =  content") AND (sign-doc(content, key, sig))    sign-doc(content, key, signature): signature is the value of a strong  one-way transformation over content and key that yields content  integrity/validity and/or key non-repudiability      >#2.6: "Applications are expected to normalize application specific  semantics   >prior to handing data to a XML-signature application."   >note: Why? It shall be sufficient to specify the canonicalizer to be used  by   >the signature engine...    " ... or specify the necessary transformations for this process within the  signature."     >#2.6/2.7: You refer to XML-signature application. Is that correct? Don't  you   >think that we are referring to any XML application that makes use of the  XML   >Signature Specification?    Yes, one could argue that XML-signature applications are a type of XML  application. But we do need to specify requirements over that type of  application, whereas we can't specify those requirements over all XML  applications. (I don't follow...?)      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 23:29 99/10/28 -0400, Donald E. Eastlake 3rd wrote:   >I have no problem with changing the spec to say that if the specification   >of Location is omitted, the signature is over the first Object in  Signature,   >instead of being application dependent, if the WG wants that.  This seems  much   >better than varying from the URI spec for the null URI.    I agree that we should not vary from the URI spec, but I (among others) want  the meaning to remain the same: context (not first object.)      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      The XML Syntax WG has discussed whether the XML resulting from C14N should  include an XML declaration describing the version of the XML generated by  the C14N processor.  [1] This discussion has happened in the context that  the we do not even consider the original content's declaration since it is  only an optional property of the Infoset -- and we decided the C14N XML will  be a syntactical representation of a subset of the required Infoset.     Consequently, what led to the decision of making that information optional?  It is possible that the digital signature community will find this  contextual information critical to the meaning of the document. (As an  optional item, two documents which are similar aside from the declaration  will be appear to be the same.)   _____    http://lists.w3.org/Archives/Member/w3c-xml-syntax-wg/1999Jun/0065.html    Message-Id: <3.0.32.19990617094605.01251e20@pop.intergate.bc.ca>  Date: Thu, 17 Jun 1999 09:47:13 -0700  From: Tim Bray <tbray@textuality.com>  Subject: C14n issue N4 - XML declaration?    Should the canonical form include the XML declaration?  Subsidiary  question: if so, which of the encoding and standalone declarations  should it include?    Let's hear opinions and nail this down next Wednesday.    Minor pro:   XML docs with XML declarations are more robustly interchanged  Minor con:   A couple of dozen extra bytes    Serious issue: if we include the XML declaration, that makes the  version of XML part of the canonical form. The corollory is that  should there ever be an XML 1.1 or 2.0, no XML 1.1/2.0 document  can ever be canonically equivalent to any XML 1.0 document.  Is  this a good or bad thing?       Note: if we leave the XML Decl out, and specify that this C14n  spec applies *only* to XML 1.0 documents, we can postpone the  decision about whether XML1 and XML2 docs can ever be canonically  equivalent to the time we write the XML2 c14n spec.  Sounds good  to me. -Tim      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      Before we request Candidate Rec status for Canonical XML there's one issue   that I've been trying to understand and come to closure on, and that's the   implications of the recent XML Plenary decision on Canonical XML: "to   deprecate the use of relative URI references in namespace declarations." [1]   What does that mean for the Canonical Form? We've had some discussion on   this over this week in this WG [2], some discussion in the XML Coordination   Group, and I also briefly discussed this with TimBL. I think the two options   we now face are below. Please post your preference -- and optionally   reason/rationale -- by end of day Wednesday September 30th. (Those cc:'d are   invited to make their choice known in an advisory capacity than can convince   others of their position, but in the end I'd like to say, "the XML Signature   WG feels $this-way about the issue, while others (agree|disagree)."    CHOICES    1. To state that the canonical form of a document containing a relative URI   in a namespace is undefined, and consequently such a document can not be   signed. (This includes namespaces like "../foo" as well as "bar"; only   documents with namespace declaration using absolute URIs are in scope --   just as only well formed documents are in scope.)  2. To state that the canonical form is URI unaware. In section 3.1 [4], we   already disclaim responsibility for resolving/normalizing other URIs, data   types, application semantics, etc. (The reason we made this distinction in   the first place is because XPath did. However, an errata of XPath might be   issued that would make the resulting the string-value   implementation-dependent, but we can't say till we see the errata.)   Consequently, not only is the issue of the "relative-URI-in-namespace" out   of scope, so is the plenary decision.    ARGUMENTS FOR CHOICE (1)    A. The XML Plenary decision recommends W3C specs say, "This specification   does not define an information set [or whatever] for XML documents which use   relative URIs in namespace declarations." [1]  B. In [3] DanC stated that, "if you specify how they work today, we won't be   able to make a different specification later." I'm very glad the XML Plenary   has come to a decision on this and I want to respect the spirit and intended   effect of that decision.  C. (1) seems to be the common interpretation of the plenary decision to   Canonical XML by the folks who were active in the Plenary discussion.    ARGUMENTS FOR CHOICE (2)    A. The XML Plenary decision, "Proposed: to deprecate the use of relative URI   references in namespace declarations; that is: to say that while they   conform to the Namespace Recommendation of January 1999, later   specifications such as DOM, XPath, etc. will define no interpretation for   them." However, I'm told that "no interpretation"  is not an argument in   favor "literal interpretation" which was specifically opted against.  B. However, it might permit us to make an argument that we are all-together   URI unaware.  (The only reason we know these might be URIs and not strings   is because of the XPath namespace-node and because of the syntactic sugar of   'xmlns:'.) Later, if consensus is reached on namespaces/URIs, someone can   easily write a URI-canonicalization specification and apply it prior to   Canonical XML.  C. Canonical XML is not in the set of specifications (DOM, XPath, etc.)   covered by the Plenary decision, but an application of them which is allowed   to do as it pleases. Canonical XML is an application of XPath that uses   namespace nodes as we choose as a contribution to a generated hash-value.   What we do today won't hinder others in the future.  D. There are documents out there that use relative URIs and need to be   signed. (Is this the case for anyone in the WG?)              [1] http://www.w3.org/2000/09/xppa.html  >4.2 Proposal  >  >Proposed: to deprecate the use of relative URI references  >in namespace declarations; that is: to say that while they  >conform to the Namespace Recommendation of January  >1999, later specifications such as DOM, XPath, etc. will  >define no interpretation for them. "  [2] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0467.html  [3] Forwarded Text ----  >Date: Thu, 14 Sep 2000 15:35:09 -0500  >From: Dan Connolly <connolly@w3.org>  >  > > 2. Our question is related to the question asked of by Clark [2], since   > the  > > XPath errata attempts to [3] implement the plenary decision [4]. Under   > XPath  > > errata [3] "XPath expressions can still be well-defined on a document  > > containing relative namespace URIs..." [2]  We also felt that there can   > be a  > > Canonical form of such documents. And our interpretation of [3] led us to  > > believe it is up to xmldsig to decide how to represent it. We recently  > > decided to treat relative URIs in these instances as a non-absolutized  > > string in the Canonical form. However, this caused others to feel this  > > violated the plenary decision  >  >Hmm... yes... I might have told you differently in our  >earlier conversation, but I think that *any* specification  >of how a relative URI reference in an xml namespace  >declaration is to be interpreted is in conflict  >with the plenary decision; if you specify how they  >work today, we won't be able to make a different  >specification later. (Meanwhile, we're allowing  >implementations to do what they like, so the only  >chance we really have of specifying how they work  >later is if the market agrees on some way of  >interpreting them, and we adopt that way.)  [4] http://www.w3.org/TR/2000/WD-xml-c14n-20000907#Limitations  For example, in a digital signature application, a document is often   retrieved and processed prior to signature generation. The processing SHOULD   include the conversion of relative URIs to absolute URIs, thereby mitigating   any security risk.      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 11:43 AM 6/13/00 -0700, David Blondeau wrote:   >I would like to point 2 things in the section 4.4.4 about the X509Data   >element:   >   >1)just a typo: in the example, the second X509Data element is supposed to  be   >for Certificate B so it should be "Subject of Certificate B" not "Subject  of   >Certificate A".    Fixed in forthcoming draft.       <X509Data>        <X509IssuerSerial>          <X509IssuerName>My CA for Certificate A</X509IssuerName>         <X509SerialNumber>12345678</X509SerialNumber>       </X509IssuerSerial>       <X509SKI>31d97bd7</X509SKI>      </X509Data>     <X509Data>       <X509SubjectName>Subject of Certificate B</X509SubjectName>     </X509Data>     >2) I think the following paragraph and the schema are in contradiction:   >"Multiple declarations about a single certificate (e.g., a X509SubjectName   >and X509IssuerSerial element) MUST be grouped inside a single X509Data   >element; multiple declarations about the same key but different  certificates   >(related to that single key) MUST be grouped within a single KeyInfo  element   >but multiple X509Data elements.[...]"   >   >So, a X509Data element MUST correspond to only one certificate but the   >schema says that there can be 0 or more X509Certificate elements in one   >X509Data element!   >The same thing apply to the X509CRL element, could it be more than one CRL   >by certificate?    Fixed according to Brian's followup.    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        I've taken a stab and tweaking the text of XSLT, and including a similar   section on Schema. (I know the formatting isn't, but I want to send this   before I have to run.)    Presently it states:    http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html#sec-XSLT  >6.6.5 XSLT Transform  >Use of the XSLT transform without any parameters indicates that any in-line   >XSLT within the resource being processed should occur (see examplein [XSLT,   >2.3]). Use of a namespace-qualified stylesheet element, which MUST be the   >sole child of the Transform element, indicates that the specified style   >sheet processing should occur; whether this instantiates in-line processing   >as well is determined by the XSLT processing model. No special provision is   >made for the identification of a remote stylesheet at a given URI because   >it can be communicate via an xml:include or xsl:import within a stylesheet   >child of the Transform.    I wonder in the XSLT or schema case (which has similar text), if this is   correct, or if we can say anything more " is determined by the XSLT   processing model" which respect to being clear about the order of processing   that might occur?      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      I am starting the process of publishing [1] as a new W3C public working  draft and IETF draft (maybe even Informational RFC).    [1] http://www.w3.org/Signature/Drafts/xmldsig-requirements-990820.html       _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

        1. (Don, your wording sounds like a requirement over documents.)  2. (Richard, your wording of "any place in a document", I'm not sure how  that fits in with respect to violating someone else's document's content  model. If they define their schema such that no externally qualified  namespaces are permitted, well then, you can't imbed a signature I don't  think.  Also, whole or partiality is captured in 3.1.3)    The new wording is:    2. When XML signatures are placed within a document they must preserve the  invariance of the document's root element tag and the descendancy tree of  the root element except for the addition of signature element(s) in places  permitted by the document's content model. For example, an XML form, when  signed, should still be recognizable as a XML form to its application after  it has been signed. [WS-summary]     _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 05:50 PM 7/27/99 -0700, John Boyer wrote:    John, I'm not qutie sure since you don't provide a referent for your  comments, but I think they are over an older version. I applied what I could  to [1], resulting with [2]:    [1] http://www.w3.org/Signature/Drafts/xmldsig-requirements-990721.html  [2] http://www.w3.org/Signature/Drafts/xmldsig-requirements-990728.html     >The subsections of Section 3 should be numbered.     fixed.     >A number of the URLs in the references don't work.     fixed.     >In Section 2, paragraph 2.1:   >When it says "...describe how to digitally sign... an XML document..."   >Is this referring specifically to the non-terminal symbol 'document' in the   >XML BNF?    http://www.w3.org/TR/1998/REC-xml-19980210#dt-xml-doc  [1]  document ::=  prolog element Misc*        >If so, this would include the Prolog and Misc*.  The reason I mention this   >is that I heard recently that the canonicalization group was hoping to drop   >these...  What's the story?     I expect to have the c14n draft up today. We are signing the (c14n) form of  a XML document, if a particular algorithm throws that info away, it's the  applications choice to select it.     >In Section 2, paragraph 2.2:   >What is meant exactly by "cryptographic" signature?  What qualifies and  what   >doesn't?   >According to the ABA, a signature is that which provides signer   >authorization, document authentication and signer authentication.  The   >degree of security depends on the algorithms chosen within an application.   >Perhaps just remove the word cryptographic and instead define what a   >signature is...     Given how hairy many of these terms are, starting a definition section now  with extremely precise and well referenced terms would be a good idea.  However, that will take a lot of work (it's most of the spec IMHO!) and I'm  afraid to load it all into the requirements document, but good point, I'll  give this some thought.    removed "cryptographic"     >Firstly, we need a way to identify   >non-contiguous portions of a document in such a way that the relative   >positions of the connected components is preserved.  Not even an XML   >fragment does this    This is very hairy... Could you explain how it doesn't?          XML-Fragment Interchange           http://www.w3.org/1999/06/WD-xml-fragment-19990630.html      >Secondly, there seems to be no way right now to obtain document closure.   >That is, we can list that which got signed in a document, but we also need   >to have a way of expressing what gets omitted from a document.    I'm very afraid of this in the short term. I would suggest that applications  that care about fragments and specifying no-inclusion/inclusion use XSLT or  whatever else, and sign that. Then if they want to ensure the generated XML  is a valid version of the transormed content on signature validation, do  that at the application level.          XSL Transformations (XSLT) Version 1.0          http://www.w3.org/TR/WD-xslt  For instance, one could use things like those in XFDL to:"When a program  checks a signed form, it compares the data in the [transformed data] with  that of the portion of the form that is apparently signed" Is this  reasonable. Building this into DSig now is too ambitious.          XFDL 4.0          http://www.w3.org/TR/NOTE-XFDL             >is that we want to omit certain things (like a second signature element)  but   >we want the first signature to break if anything else gets added to the   >document.  Otherwise we have a signed document where anything could be   >added, even things that obscure the original intent of the document when it   >is rendered.    Yep, part of the processing model will probably say, and when you sign  href="" (the object you are in) remove bits of yourself from consideration.       4.2. Same-document References     A URI reference that does not contain a URI is a reference to the     current document.       http://www.ietf.org/rfc/rfc2396.txt    However, this removal has to be smart enough not to remove other signatures,  if in fact that is what you are signing. To this end, this is why I prefer  manifests where you can canonicalize external objects according to content  c14n, instead of dsigs embedded in content that refer to the things of which  they are part of. I hope to see more of this in the scenarios.      >Again, we should require at least fragments, but since they don't allow   >non-continuous pieces, we need something more (or we need to require the   >fragment group to add discontinuity).    I'm interested in what you are thinking, but not quite sure, and would  enourage you to send it to the fragment group (cc me) and we can see what  happens.     >In Section 3, under Processing:   >XML applications should generate an error in this case, shouldn't they?    I'm not sure frankly, I'll add this as a comment.  _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      Note, I've moved part of the thread to the XML Signature WG, one other  orthogonal question:    >So not only is it OK to  >declare CanonicalizationMethod/Algorithm as a URI, it's OK for  >SignatureMethod/Algorithm and DigestMethod/Algorithm as well.    Is it possible to have a attribute declaration be of one or more types? (In  an outdated section) the spec forbids:            Constraint on Schemas: Attribute Locally Unique           The same full name must not appear more than once in any           archetypeSpec's attribute declaration set.       http://www.w3.org/TR/xmlschema-1/#section-Types,-Elements-and-Attributes-*    but is there some other way to achieve:            <attribute name='Location' type='uri' type='idref'>    At 15:31 99/11/09 +0000, Henry S. Thompson wrote:   >"Joseph M. Reagle Jr." <reagle@w3.org> writes:   >> I've thought about (and John Boyer propsed yesterday) using Internal   >> (General) Entities to alleviate the URI glut in the W3C's "first class   >> object" paradigm. Bray actually gives this as a possible use:   >>    >>         In URLs; many XML documents contain lots of URLs; as we all   >>         know, URLs tend to move around and are painfully difficult   >>         to maintain. It > is really useful to use entities to help   >>         make this easier: <a href='&home;/bin/wr.pl'>.   >>    >>         http://www.xml.com/axml/notes/IntEntsAreMacros.html   >>    >> Consequently, I could have a signature that looks like:   >>    >> <Signature xmlns="http://www.w3.org/1999/10/signature-core">    >>   <SignedInfo>    >>     <!ENTITY c14n "http://www.w3.org/TR/1999/xml-c14n">   >>     <!ENTITY dsig "http://www.w3.org/1999/dsig-core"   >>     <CanonicalizationMethod Algorithm="&c14n;"/>    >>     <SignatureMethod Algorithm="&dsig;/dsaWithSHA-1"/>    >>     <ObjectReference Location="http://www.ietf.org">    >>       <DigestMethod Algorithm="&dsig;/sha1"/>    >>       <DigestValue encoding="&dsig;/base64">a23bcd43</DigestValue>    >>     </ObjectReference>    >>   </SignedInfo>    >>   <SignatureValue encoding="&dsig;/base64">dd2323dd</SignatureValue>    >> </Signature>    >>    >> I assume if we do this is it still possible to declare the value of   >> Algorithm as a URI? Or for instance, if you have a general internal  entity   >> that expands to an integer, is the following XML valid:   >>    >>         <!ENTITY favoritenumber "8">   >>         <integer>&favoritenumber;</integer>   >>    >> under the following schema constraint:   >>    >>         <element name="integer" type="integer">   >   >Absolutely -- XML Schema schemas validate infosets, and general entity   >processing is long-since completed before we ever see the element and   >attribute information items involved above.  So not only is it OK to   >declare CanonicalizationMethod/Algorithm as a URI, it's OK for   >SignatureMethod/Algorithm and DigestMethod/Algorithm as well.   >   >I guess in conjunction with this issue, I'd recommend you look at the   >XSLT element extension method [1] as well.   >   >ht   >   >[1] http://www.w3.org/TR/1999/PR-xslt-19991008#extension-element   >--    >  Henry S. Thompson, HCRC Language Technology Group, University of  Edinburgh   >     2 Buccleuch Place, Edinburgh EH8 9LW, SCOTLAND -- (44) 131 650-4440   >    Fax: (44) 131 650-4587, e-mail: ht@cogsci.ed.ac.uk   >     URL: http://www.ltg.ed.ac.uk/~ht/   >    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      [1] is the Editors' Draft that includes Boyer's latest Xpath [a], the latest  Schema syntax [b], and fairly straightforward editorial changes (some in  red) based on Last Call Comments [2]. [1] and the substantive issues left in  [2] will be good reading material prior for the FTF. <smile>    [1] http://www.w3.org/Signature/Drafts/WD-xmldsig-core-200003plc/  [2] http://www.w3.org/Signature/20000228-last-call-issues.html    [a] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000AprJun/0051.html  [b] http://www.w3.org/TR/2000/WD-xmlschema-1-20000407/     _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Hi Owen,    I created those Parameter Entities on the suggestion that it would make it  easier for others to define extension content models. (ANY in an XML DTD  means only those elements declared in that DTD, so we'd need easy ways for  folks to plug in acceptable content for Object, KeyInfo, etc). I implemented  the method suggested by Martin [1].    However, you're correct in noting that parameter entities can't be used that  way in an internal subset. [2,3]. A bit of a toss-up... We could provide a  modularized and internal subset DTD though I'm REALLY hesitant to include  another place where I have to synch changes! Given that the DTD isn't  expected to be deployed out-of-the box for enveloped/enveloping Signatures,  I think I'd opt for the modular approach that the application designer can  tweak as approriate.  __      [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000AprJun/0065.html  [2] http://www.w3.org/TR/1998/REC-xml-19980210.html#wfc-PEinInternalSubset  [3] http://www.xml.com/axml/notes/PEsubsets.html  Parameter Entity Reference Restrictions  It took a lot of work to get to this policy. The idea is that although PEs  are useful (essential, even) for DTD construction and maintenance, that is  the only place they are useful, and they shouldn't complicate the lives of  non-validating processors. So to achieve this, in the internal subset (the  part between the [ and ] in the doctype declaration), you can only use PEs  at the "top level". that is to say, this is legal in the internal subset:    <!ENTITY % e1 "<!ELEMENT e1 ANY>"> %e1;    while this is not (but would be in the external subset):    <!ENTITY % e2 "(e3|e4)">  <!ELEMENT e2 %e2;>      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Note, if the XML is anything other than UTF-8 or UTF-16, the encoding should  be present:    http://www.w3.org/TR/REC-xml#sec-guessing            Because each XML entity not in UTF-8 or UTF-16 format must begin  with an           XML encoding declaration, in which the first characters must be  '<?xml', any           conforming processor can detect, after two to four octets of input,  which of the           following cases apply.       _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      Gregor,    Thank you for your comments! They've been wrapped into the edits presently  at:          http://www.w3.org/Signature/Drafts/WD-xmldsig-core-20000104/  this will be placed in the hopper tomorrow for TR/ietf-draft publication on  January 04 2000.    This new version includes complete schema and DTD declarations, as well as  stand alone versions. I'm sure the DTD is buggy, but the schema complies  with the latest spec, validates to their DTD, and renders in IE. It also  includes a few bits of red text I hope I can get some clarity from Don and  David on before end of tomorrow.    In January I hope to update my data model DLG and link that in as well.    Then the task is to validate actual Signature instances (against a DTD, XDR,  or schema) and generate real cryptographic values!    Editorial minutia follow:    ___             At 14:44 99/12/20 +0100, Gregor Karlinger wrote:   >"This is an internal WG Draft that captures the move towards References  ..."    Status has been updated.     >Several different URIs are used for declaring the same namespace, namely   >xmlns="http://www.w3.org/1999/12/xmldsig-core":   >   >"... SignatureProperties is identified and defined by this specifications  namespace    > http://www.w3.org/1999/12/dsig-core/SignatureProperties ..."    They've been updated and made consistent to:          http://www.w3.org/2000/01/xmldsig/  (since we changed an element type).     >Section "2.0 Signature Overview":   >---------------------------------   >   >Typo: "...The formal specification is provided in the section-3: ..."   >                                                  ^^^     This section provides an overview of XML digital signature syntax and  processing; the formal specification is in section-3: Core Signature Syntax.      >Section "2.1 The Signature Element":   >------------------------------------   >   >"... Within an XML document, signatures are related to data objects via  IDREFs ..."   >   >Signatures can also be related to data objects via URI and XPath  transforms. Maybee   >add this fact here.    But URIs are not used within the XML document. Still, that text has been  clarified in subsequent editing:    Within an XML document, signatures are related to data objects via IDREFs  [XML] and the data can be included within an envoloping signature or can  enclose an enveloped signature. Signatures are related to external data  objects via URIs [URI] and the signature and data object are said to be  detached.      >Section "2.2 The SignedInfo Element":   >-------------------------------------   >   >"... We specify additional algorithms as Recommended or Optional and ..."   >   >Maybe capitalize "Recommended" and "Optional".    They are capitalized, you mean normal case? Changed to lower case.     >Section "2.3 The Reference Element":   >------------------------------------   >   >...    >        <SignedInfo>    >           (CanonicalizationMethod)?    >           (SignatureMethod)    >           <Reference (URI=|IDREF=)? Type=?>    >             (Transforms)?    >             (DigestMethod)    >             (DigestValue)    >           </Reference>+    >        </SignedInfo>    >...    >   >The expression "<Reference ... </Reference>" should be placed in brackets  to   >better indicate the operand of the "+" operator.    I placed it in parenthesis.     >Section "2.5 The SignatureProperties Element":   >----------------------------------------------   >   >Typo: "... or the serial number or hardware used ..."   >                                ^^   >Section "3.1 The Signature element":    thanks.     >------------------------------------   >   >"... Example:    >   >        <!DOCTYPE Signature [    >        <!ENTITY dsig 'http://www.w3.org/1999/12/signature-core'>]>    >        <Signature xmlns="http://www.w3.org/1999/12/xmldsig-core">  ..."   >                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                    >   >Same as with section 1.3.    Roger.     >Section "3.3.3.1 The Transforms Element":   >-----------------------------------------   >   >In this section there is no hint (neither in the textual description nor  in the   >Schema definition) that the "Transform" element could have mixed content.  But   >in section 5.6 the specification defines some character content for the  "Transform"   >element.   >   >To solve this contradiction, I suggest the following:   >   >* Keep the content model as-is (content='elementOnly')   >   >* Put the stuff defined in section 5.6 into a parameter element (for  example the   >  XPath language expression).    I want to get other WG members feedback on this, I'll place it on the open  issues list.    At 14:44 99/12/20 +0100, Gregor Karlinger wrote:   >There is no provisions for entity definition any more in XML-Schema. So  the last   >line has to be omitted. There are also some old definitions for the  namespace URI,   >which I have changed below.   >   >    <?xml version='1.0'?>    >    <!DOCTYPE schema    >    SYSTEM  'http://www.w3.org/TR/1999/WD-xmlschema-1-19991105/structures.dtd'    >    [    >    <!ENTITY dsig 'http://www.w3.org/1999/12/xmldsig-core'>    >    ]>    >    <schema targetNS='http://www.w3.org/1999/12/xmldsig-core'    >       version='0.1'    >       xmlns='http://www.w3.org/1999/XMLSchema'>     Ok, I adopted the above except I use the proper DTD for the new schema spec.      >----------------------------------------------------------------------------  ------------   >Section "3.0 Core Signature Syntax":    >----------------------------------------------------------------------------  ------------   >New definition:   >   >    <element name='Signature'>    >      <type content='elementOnly'>   >        <group order='seq' minOccurs='1' maxOccurs='1'>    >  <element ref='SignedInfo' minOccurs='1' maxOccurs='1'/>    >  <element ref='SignatureValue' minOccurs='1' maxOccurs='1'/>    >  <element ref='KeyInfo' minOccurs='0' maxOccurs='1'/>    >  <element ref='Object' minOccurs='0' maxOccurs='*'/>    ></group>     ><attribute name='Id' type='ID' minOccurs='0' maxOccurs='1'/>    >      </type>    >    </element>      Ok.      >----------------------------------------------------------------------------  ------------   >Section "3.3 The SignedInfo Element":    >----------------------------------------------------------------------------  ------------   >New definition:   >   >    <element name='SignedInfo'>    >      <type content='elementOnly'>   >        <group order='seq' minOccurs='1' maxOccurs='1'>    >  <element ref='CanonicalizationMethod' minOccurs='0' maxOccurs='1'/>    >  <element ref='SignatureMethod' minOccurs='1' maxOccurs='1'/>    >  <element ref='Reference' minOccurs='1' maxOccurs='*'/>    ></group>     ><attribute name='Id' type='ID' minOccurs='0' maxOccurs='1'/>    >      </type>    >    </element>     Ok.      >----------------------------------------------------------------------------  ------------   >Section "3.3.1 The CanonicalizationMethod Element":    >----------------------------------------------------------------------------  ------------   >New definition:   >   >    <element name='CanonicalizationMethod'>    >      <type content='elemOnly'>   ><element ref='Parameter' minOccurs='1' maxOccurs='1'>    ><attribute name='Algorithm' type='uri' minOccurs='1' maxOccurs='1'/>    >      <type>    >    </element>     Ok.      >----------------------------------------------------------------------------  ------------   >Section "3.3.2 The SignatureMethod Element":    >----------------------------------------------------------------------------  ------------   >New definition:   >   >    <element name='SignatureMethod'>    >      <type content='elemOnly'>    ><element ref='Parameter' minOccurs='0' maxOccurs='*'>    ><attribute name='Algorithm' type='uri' minOccurs='1' maxOccurs='1'/>    >      </type>    >    </element>      Ok.      >----------------------------------------------------------------------------  ------------   >Section "3.3.3 The Reference Element":    >----------------------------------------------------------------------------  ------------   >New definition:   >   >    <element name='Reference'>    >      <type content='elementOnly'>   >        <group order='seq' minOccurs='1' maxOccurs='1'>    >  <element ref='Transforms' minOccurs='0' maxOccurs='1'/>    >  <element ref='DigestMethod' minOccurs='1' maxOccurs='1'/>    >  <element ref='DigestValue' minOccurs='1' maxOccurs='1'/>    >        </group>   ><attribute name='Id' type='ID' minOccurs='0' maxOccurs='1'/>    ><attribute name='URI' type='uri' minOccurs='0' maxOccurs='1'/>    ><attribute name='IDREF' type='IDREF' minOccurs='0' maxOccurs='1'/>    ><attribute name='Type' type='uri' minOccurs='0' maxOccurs='1'/>    >      </type>    >    </element>      Ok.      >----------------------------------------------------------------------------  ------------   >Section "3.3.3.1 The Transforms Element":    >----------------------------------------------------------------------------  ------------   >New definition:   >   >    <element name='Transforms' >    >      <type content='elementOnly'>    ><element ref='Transform' minOccurs='1' maxOccurs='*'/>    >      </type>    >    </element>    >   >    <element name='Transform'>    >      <type content='elementOnly'>   ><element ref='Parameter' minOccurs='0' maxOccurs='*'/>    ><attribute name='Algorithm' type='string' minOccurs='1' maxOccurs='1'/>    ><attribute name='Type' type='uri' minOccurs='0' maxOccurs='1'/>    ><attribute name='Charset' type='string' minOccurs='0' maxOccurs='1'/>    >      </type>    >    </element>     Ok.     >Maybe consider to change the type of attribute 'Charset' to 'uri'.     Put on open issues list.        >----------------------------------------------------------------------------  ------------   >Section "3.3.3.2 The DigestMethod Element":    >----------------------------------------------------------------------------  ------------   >New definition:   >   >    <element name='DigestMethod'>    >      <type content='elemOnly'>    ><element ref='Parameter' minOccurs='0' maxOccurs='*'/>    ><attribute name='Algorithm' type='uri' minOccurs='1' maxOccurs='1'/>    >      </type>    >    </element>      Ok.        >----------------------------------------------------------------------------  ------------   >Section "3.3.3.3 The DigestValue Element":    >----------------------------------------------------------------------------  ------------   >New definition:   >   >    <element name='DigestValue'>    >      <type source='string'>    ><attribute name='Encoding' type='uri' default='&dsig;/Base64'    >           minOccurs='0' maxOccurs='1'/>    >      </type>    >    </element>      Ok.    At 10:37 99/12/21 +0100, Gregor Karlinger wrote:    >----------------------------------------------------------------------------  ------------   >Section "3.4 The KeyInfo Element":    >----------------------------------------------------------------------------  ------------   >New definition:   >   >    <element name='KeyInfo'>    >      <type content='elementOnly'>   >        <group order='choice' minOccurs='1' maxOccurs='1'>          >  <element name='KeyName' type='string'/>    >  <element name='KeyValue' type='string'/>    >  <element name='SubjectName' type='string'/>    >  <element name='RetrievalMethod' type='string'/>    >  <element ref='X509Data'/>    >  <element ref='PGPData'/>    >  <element name='MgmtData' type='string' minOccurs='0' maxOccurs='1'/>   >  <any/>   >        </group>   ><attribute name='Id' type='ID' minOccurs='0' maxOccurs='1'/>    >      </type>    >    </element>      Ok.     >Note: Maybe consider group's attribute maxOccurs to be '*' instead of '1'     Put on editorial open issue.     >New definition:   >    <element name='X509IssuerSerial'>    >      <type content='elementOnly'>    ><group order='seq' minOccurs='1' maxOccurs='1'>    >  <element name='X509Name' type='string' minOccurs='1' maxOccurs='1'/>    >  <element name='X509SerialNumber' type='string' minOccurs='1'  maxOccurs='1'/>    ></group>   >      </type>    >    </element>    >           >    <element name='X509Data'>    >      <type content='elementOnly'>    >        <group order='seq' minOccurs='1' maxOccurs='1'>    >          <group order='choice' minOccurs='1' maxOccurs='1'>    >    <element ref='X509IssuerSerial'/>   >    <element name='X509SKI' type='string'/>    >    <element name='X509Name' type='string'/>    >  </group>     >  <element name='X509Certificate' type='string' minOccurs='0'  maxOccurs='1'/>    >  <element name='X509CRL' type='string' minOccurs='0' maxOccurs='1'/>    >        <group>   >      </type>    >    </element>     Ok.     >New definition:   >   >    <element name='PGPData'>    >      <type content='elementOnly'>    >        <group order='seq' minOccurs='1' maxOccurs='1'>   >  <element name='PGPKeyID' type='string' minOccurs='1' maxOccurs='1'/>    >  <element name='PGPKeyPacket' type='string' minOccurs='1'  maxOccurs='1'/>    ></group>     >      </type>    >    </element>      Ok.     >   >Old definition:   >   >    <element name='MgmtData' type='string' minOccurs='0' maxOccurs='1'/>    >      </archetype>    >    </element>    >   >New definition:   >   >    Obsolete.    Ok.        >----------------------------------------------------------------------------  ------------   >Section "3.5 The Object Element":    >----------------------------------------------------------------------------  ------------   >New definition:   >   >    <element name='Object' >    >      <type content='mixed'>    ><attribute name='Id' type='ID' minOccurs='0' maxOccurs='1'/>    ><attribute name='Type' type='uri' minOccurs='0' maxOccurs='1'/>    ><attribute name='Encoding' type='uri' minOccurs='0' maxOccurs='1'/>    >      </type>    >    </element>     Ok.      >----------------------------------------------------------------------------  ------------   >Section "3.6 The Parameter Element":    >----------------------------------------------------------------------------  ------------   >New definition:   >   >    <element name='Parameter'>    >      <type content='mixed'>    ><attribute name='Encoding' type='uri' minOccurs='0' maxOccurs='1'/>    >      </archetype>    >    </element>     Ok (but the closing element is type).        >----------------------------------------------------------------------------  ------------   >Section "4.1 The Manifest and Package Elements":    >----------------------------------------------------------------------------  ------------   >New definition:   >   >    <element name='Manifest'>    >      <type content='elementOnly'>   >        <group order='seq' minOccurs='1' maxOccurs='1'>   >  <element ref='Reference' minOccurs='1' maxOccurs='*'/>    >  <element ref='Object' minOccurs='0' maxOccurs='*'/>    ></group>     ><attribute name='Id' type='ID' minOccurs='0' maxOccurs='1'/>    >      </type>    >    </element>      Ok.     >New definition:   >   >    <element name='Package'>    >      <type content='elementOnly'>   >        <group order='seq' minOccurs='1' maxOccurs='1'>   >  <element ref='Reference' minOccurs='1' maxOccurs='*'/>    >  <element ref='Object' minOccurs='0' maxOccurs='*'/>    ></group>     ><attribute name='Id' type='ID' minOccurs='0' maxOccurs='1'/>    >      </type>    >    </element>     Ok.      >----------------------------------------------------------------------------  ------------   >Section "4.2 The SignatureProperties Element":    >----------------------------------------------------------------------------  ------------   >   >Old definition:   >   >    <element name='SignatureProperties' >    >      <archetype content='elemOnly' >    ><element ref='SignatureProperty' minOccurs='1' maxOccurs='*'>    ><attribute name='Id' type='id'/>    >      </archetype>    >    </element>    >   >New definition:   >   >    <element name='SignatureProperties'>    >      <type content='elementOnly'>    ><element ref='SignatureProperty' minOccurs='1' maxOccurs='*'>    ><attribute name='Id' type='ID' minOccurs='0' maxOccurs='1'/>    >      </type>    >    </element>     Ok.      >New definition:   >   >    <element name='SignatureProperty'>    >      <type content='mixed'>    ><attribute name='Target' type='IDREF' minOccurs='1' maxOccurs='1'/>    >      </type>    >    </element>      Ok.    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        Given we expect numerous XML 1.0 valdidity constraints [1] to be enforced  for Signatures to even be processed properly, I think we should call a spade  a spade and say a validating parser is required. What that means is up the  implementator depending on the Signature applications, toolkits, etc., that  they use: they could use a well-formed processor and build the relevant  constraints relevant to Signature the DTD themselves, or use a generic  validating parser; that's an implementation issue. I don't think it makes  sense for us to say in the spec "well-formed" and profile XML 1.0 validity  constraints.    My question is how many schema validity constraints [2] are there in  addition to [1] if you don't actually use many feature beyond [1]. (We are  using basic content models and ANY, and a single user defined type, that's  about it ...) Is our use of Schema truly "normative"?    [1] Extensible Markup Language (XML) 1.0   http://www.w3.org/TR/REC-xml#vc-roottype  http://www.w3.org/TR/REC-xml#elementvalid  http://www.w3.org/TR/REC-xml#EDUnique  http://www.w3.org/TR/REC-xml#id  ...    [2] http://www.w3.org/TR/xmlschema-1/#conformance-details    Forwarded Text ----   Date: Thu, 06 Jul 2000 13:09:20 -0400   To: Ken Goldman <kgold@watson.ibm.com>   From: "Joseph M. Reagle Jr." <reagle@w3.org>   Cc: "IETF/W3C XML-DSig WG" <w3c-ietf-xmldsig@w3.org>   In-Reply-To: <200007061652.MAA34032@alpha.watson.ibm.com>   Subject: Re: Valid XML and Schema Normative?   Status:         At 12:52 2000-07-06 -0400, Ken Goldman wrote:    >Could you give an XML snippet of this, showing the issue?      Assuming that the following well formed XML instance reference    and signature validates, is the following example a valid    Signature? (It violates the specified content model).      I'm slightly confusing the syntactical violation with a clear violation   of semantics ("disclaimer") just to show why this might be important,    but [x01-03] could be any name space qualified and wellformed XML.            [s01] <Signature Id="MyFirstSignature"  xmlns="http://www.w3.org/2000/02/xmldsig#">       [s02]   <SignedInfo>       [x01]     <disclaimer xmlns="http://badactor.com/2000/v3">      [x02]     <declaration>this signature is invalid on  tuesdays</declaration>      [x03]     </disclaimer>      [s03]   <CanonicalizationMethod  Algorithm="http://www.w3.org/TR/2000/WD-xml-c14n-20000119"/>       [s04]   <SignatureMethod  Algorithm="http://www.w3.org/2000/02/xmldsig#dsa-sha1"/>       [s05]   <Reference URI="http://www.w3.org/TR/2000/REC-xhtml1-20000126/">       [s06]     <Transforms>       [s07]       <Transform  Algorithm="http://www.w3.org/TR/2000/WD-xml-c14n-20000119"/>       [s08]     </Transforms>       [s09]     <DigestMethod  Algorithm="http://www.w3.org/2000/02/xmldsig#sha1"/>       [s10]     <DigestValue>j6lwx3rvEPO0vKtMup4NbeVu8nk=</DigestValue>       [s11]   </Reference>       [s12] </SignedInfo>       [s13]   <SignatureValue>MC0CFFrVLtRlk=...</SignatureValue>       [s14]   <KeyInfo>       [s15a]    <KeyValue>      [s15b]      <DSAKeyValue>       [s15c]        <P>...</P><Q>...</Q><G>...</G><Y>...</Y>       [s15d]      </DSAKeyValue>       [s15e]    </KeyValue>       [s16]   </KeyInfo>       [s17] </Signature>            _________________________________________________________   Joseph Reagle Jr.      W3C Policy Analyst                mailto:reagle@w3.org   IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/     End Forwarded Text ----    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      John Boyer has provided a new version of the Canonical XML specification   [2], as well as a document capturing the resolution of Last Call Issues [1].   We are awaiting some feedback from implementors (do the examples work?) and   last call commentators (are the issues satisfactorily resolved?) but   otherwise expect to request Candidate REC status within a few weeks.    [1] http://www.w3.org/Signature/2000/09/06-c14n-last-call-issues.html  [2] http://www.w3.org/TR/2000/WD-xml-c14n-20000907    Status of this document        This is the fourth draft of this (XPath based) Canonical XML      specification and it addresses all issues raised during the [17]second      Last Call which ended July 28, 2000. While this specification attempts      to capture the resolution of all issues, the list and disposition of      last call issues itself is[18] a living document maintained by the      [19]XML Signature Working Group. The Working Group expects to finish      the documentation on all issues within a week and then request that      the Director advance the document to Candidate Recommendation        This specification includes editorial and technical clarifications and      corrections suggested by last call reviewers. Additionally, this      version also includes examples as well as two substantive differences      from the previous version:       1. The only change to the canonicalized output is the reduction of          redundant namespace declarations (see section 4.6: [20]Superfluous          Namespace Declarations).       2. The processing model is changed with respect to the input          expectations. Instead of an XPath expression, the canonical          process expects an XPath node-set (or functional alternative such          as octets that represent a well-formed XML instance).          [20] http://www.w3.org/TR/2000/WD-xml-c14n-20000907#SuperfluousNSDecl        The [21]XML Core Working Group, which published the first Last Call      [22][C14N-20000119], has delegated the completion of the Canonical XML      specification to the IETF/W3C [23]XML Signature Working Group      [[24]list archives].          [21] http://www.w3.org/XML/Activity#core-wg        [22] http://www.w3.org/TR/2000/WD-xml-c14n-20000907#C14N-20000119        [23] http://www.w3.org/Signature/        [24] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/    _________________________________________________________  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Solo's latest draft represented in HTML is at:          http://www.w3.org/Signature/Drafts/xmldsig-core-990902.html    I also had a go at trying to put it to a datamodel, and changing the naming  and capitalization conventions just to see what they looked like (not sure  if I like the result)          http://www.w3.org/Signature/Drafts/xmldsig-core-990902-simple.html    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      The fact that you broke links [1] to your specifications [2] means that   there are now copies of the dsig spec that normatively reference ...   nothing. Plus, I'm having difficulties finding these specs again for the   next version. I've already wasted 15 minutes looking for FIPS PUB 186-1.   Where did it go, did it get moved in the "redesign" (like [3]) or has it   been deprecated (don't see it in [4]) and how do I find out without having   to send an email?    [1] http://www.w3.org/Provider/Style/URI  We just reorganized out website to make it better.  Do you really feel that the old URIs cannot be kept running? If so, you   chose them very badly. Think of your new ones so that you will be able to   keep then running after the next redesign.  [2] http://csrc.nist.gov/fips/fips1861.pdf  [3] http://csrc.nist.gov/fips/fip180-1.pdf  [4] http://www.itl.nist.gov/fipspubs/withdraw.htm    __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 11:29 7/26/2000 -0700, John Boyer wrote:    >In total, we could   >   >1) drop here() from the XPath transform   >2) rewrite the enveloped signature specification to use a Reference with an   >Xpointer URI that is equal to the current XPath for enveloped signature.   >3) Convert the resulting location-set to a node-set (throw error if there   >are any point, range or other non-node parts of the location-set)   >4) C14N the resulting XPath node-set.    Point 4, do you mean canonicalizing the XPtr node-set?     >We have assumed that people can use a URI that   >includes at least a barename Xpointer.  But the result of a barename   >XPointer is a *location-set*, not an octet stream.  To fix this, I believe   >we have assumed that the canonicalized result of the barename xpointer  would   >be passed to the transforms (at least I have).       Can you point me to a definition of location-set? (Node set is at least  mentioned in XPath but I can't find location set in XPath, XPtr or Infoset.)     > But c14n operates on a   >node-set, not a location-set.  However, certainly in the case of barename   >xpointer, the location-set is a node-set (there are no non-nodes), so   >canonicalizing it presents no real problems.     Do I understand the situation correctly?    PRESENT: We defined Enveveloped-Signature transform using XPath since we are  already using the XPath data model and an expression to derive the Canonical  form. This is rather elegant. However, while we defined the  Enveloped-Signature transform using XPath, XPath isn't necessary for  implementation. This approach makes it easy for those that have an XPath  implementation (the definition of enveloped implements this feature!) and no  more harder for those that implement this feature otherwise (the XPath spec  plus the definition tells them what they must do in their own  implementation, but not how to do it.)    However, we found that the XPath expression (and employment of here() in  that context) doesn't do the job well. However, we could do the job by  expressing it as point of XPtr, however, we've been trying to avoid reliance  upon XPointer. The question is:    PROPOSAL/QUESTION: Would moving to XPtr for this feature be much more  difficult?  A. Again, an XPtr implementation isn't necessary, the relevant part of the  XPtr and our own expression defines the Enveloped feature. For those that  have an  XPath implementation, Merlin asserts, "Technologically, all  verifiers which support XPath transforms contain the necessary tools for  XPointer resolution. So adding a need for this is a minimal burden" so the  job should be easy. (Do others agree?) Those that were "hand-coding" the  enveloped signature feature before, will do the same now (and I think this  won't increase their job all that more either.)  B. In Merlin's proposal he expressed the expression as:  >   <Reference URI='#xpointer(../../previous-sibling)'>  Is this purposeful, as URI="#xpointer" is discouraged [2] and should be  placed in a seperate transform:  <Reference URI=''>     <Transforms>     <Transform Algorithm="http://www.w3.org/TR/1999/REC-xslt-19991116"/>        #xpointer(../../previous-sibling)'</Transform>     </Transforms>     ..  </Reference>    [1]   [2] http://www.w3.org/TR/2000/WD-xmldsig-core-20000711/#sec-Reference  Otherwise, support of other fragment/MIME types (e.g., PDF) or XML  addressing mechanisms (e.g., [XPath, Xptr]) is OPTIONAL, though we RECOMMEND  support of [XPath]. Regardless, such fragment identification and addressing  SHOULD be given under Transforms (not as part of the URI) so that they can  be fully identified and specified.      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      [I'm cc:ing the list so we have a record of the changes, most of these are   small, but I wouldn't want to make a change on the SPKIData front without   the list seeing it.]    At 12:32 10/5/2000 -0400, Elmar wrote:  >If you want to allow any element in the DTD for SPKIData, don't use  >(#PCDATA), use %SPKI.Any or something like that.    Good point. However, I think like PGPKeyID, the intent is for people to plug   in actual present-day SPKI structures (and not an XML representation) . So   this would be a Canonical S-expression that is octects (or their base-64   encoding)  [1] and could be reprsented as PCDATA. If this is the case, it's   the schema that is off; the schema declaration for SPKIData should simply be:     <element name='SPKIData' type='string' minOccurs='1' maxOccurs='1'/>    Do people agree with my recollection?    [1] http://world.std.com/~cme/spki.txt      >4.4.3  >Typo in the Schema Definition: must be <element ref='ds:Transforms' ...> The  >: was missing.    Ok, typo fixed.    >What is correct? Text, Schema Def or DTD?  >Text says Type is optional, but Schema and DTD require the attribute. If it  >is optional, what should be a default type?    This has been noted and corrected in editors' copy, it is optional.    >4.4.4  >There are missing : in the Schema definition for ref and type of elements.  >DTD missing | at the end of the first line after X509SubjectName.    Fixed. (Fortunately, these are already correct in the actual schema and DTD   because I can validate and parse them, whereas the excerpts in the spec seem   to get a little out of line!)    >4.4.6  >Numbering occurs twice, for SPKIData and for MgmtData.    Fixed.    >Thanks to the whole working group.    Thanks for your comments!    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 10:59 4/10/2001 +0100, merlin wrote:  >Following up to, and changing, my opinion:    Merlin, I' agree, and I've done this a few times myself (starting tweaking   the document on this note to improve it, then confusing myself!). But I   think your suggestion of needing different URIs for the algorithm versus   their structure is an improvement.    >Technically, the DSA and RSA types are |KeyValue| types,  >not |KeyInfo| types. I would suggest that we move all  >the text for RSA and DSA down to just above the text  >for &dsig;rawX509Certificate and there state that the  >RSA and DSA |KeyValue| structures may appear as the  >target of a |RetrievalMethodType| identified by the  >URIs:  >  >   http://www.w3.org/2000/09/xmldsig#DSAKeyValue  >   http://www.w3.org/2000/09/xmldsig#RSAKeyValue    Ok, if I understand, you are suggesting:  1. We keep the &dsig;dsa-sha1 and &dsig;rsa-sha1 algorithm identifiers.  2. We create section 4.4.2.1 and 4.4.2.2 for a DSA and RSA key values, and   give them their own URIs.  3. How much of section 6.4.1 and 6.4.2 do we move up in 4.4.2? Everything   after the example SignatureMethod?      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

        Depending on how fortune's winds blow, by the end of next week we might have  a good sense of both the Director's and IESG's thoughts on entering  standards tracks. So I could be comfortable on presenting the status of XML  Signature at the end of August. However, it's difficult to predict right  now, so it's something I'll keep in mind as the June 30th deadline  approaches.    If you have something Signature related that you think would qualify  (implementations and such) this might be a good forum for you.    http://www.gca.org/attend/2000_conferences/Extreme_2000/default.htm      Forwarded Text ----     If you would like to give a Late Breaking News presentation at   Extreme Markup Languages send in your submission by June 30th!      The organizers of the Extreme Markup Languages Conference have   reserved a few of the speaking slots in order to provide   the freshest possible salad again this year.  These slots will be   awarded entirely at the discretion of the conference chairs and   co-chairs only a couple of weeks before the conference actually   occurs, just as the final programs go to press. Preference will   be given to the most technically newsworthly submissions.             ---------------------------------------------------------       *************    Call for Participation    **************       ************      Late Breaking News        *************       ***********  Extreme Markup Languages 2000   ************       ---------------------------------------------------------          WHAT:      Call for Late Breaking News    WHEN:      Late Breaking Proposals due: June 30, 2000               Conference: August 15-18, 2000               Tutorials August 13-14, 2000    WHERE:     Montreal, Canada    SPONSOR:   Graphic Communications Association (GCA)    Chairs:    Steven R. Newcomb, TechnoTeacher, Inc.               B. Tommie Usdin, Mulberry Technologies, Inc.    Co-Chairs: Deborah A. Lapeyre, Mulberry Technologies, Inc.               C. M. Sperberg-McQueen, World Wide Web Consortium/MIT                  Laboratory for Computer Sciences    HOW:       Submit the following information to: Extreme@mulberrytech.com                  - Name               - Affiliation               - Email address               - Presentation Title               - Abstract: 100 words suitable for distribution               - Where, and when, this information been presented               - Additional Information:  any further information you wish to                 provide to the conference committee to help us in our                 selections and deliberations.       QUESTIONS:  Email to Extreme@mulberrytech.com or call Tommie Usdin                +1 301/315-9631    MORE INFORMATION: For updated information on the program and plans for                the conference, see http://www.extrememarkup.net      Extreme is a new, highly technical conference concentrating on the   evolving abstractions that underlie modern information management   solutions, how those abstractions enhance human productivity, and how   they are being applied. Abstract and concrete information models,   systems built on them, software to exploit them, SGML, XML, XSL,   XLink, schemas, Topic Maps, query languages, and other markup-related   topics are in scope for this conference.      Speakers will have 30 minutes for their prepared remarks followed by   fifteen minutes during which the audience will pose questions.         ===============================================================   Extreme Markup Languages 2000          mailto:extreme@mulberrytech.com   August 13-18, 2000                           details: http:www.gca.org   Montreal, Canada      author info: http://www.mulberrytech.com/Extreme   ===============================================================     End Forwarded Text ----    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 21:43 8/24/2000 +0000, Donald Eastlake 3rd wrote:   >- KeyInfo/X509Data - there were no objections to the last version   >posted by Donald Eastlake which appears to be the consensus:   ><http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0318.html>    Ok, placed in Editors' copy.     >- RetrievalMethod - there was agreement with the comments by Gregor   >that URI should be a mandatory attribute.  Donald will change and   >repost.    Ok, I tried to work this in with Merlin's correction, and created new namespaces for KeyInfo element types, however, is the Type supposed to be mandatory? (See previous message).     >turn based on the discussions during last weeks teleconference.  An   >important question is whether a <foo:bar#mumble> URI returns an octet   >string or (when the target is XML) a node set or the serialization of   >a node set.    What's the action item on answering this question?     >- qualifying attributes - After brief discussion, the conclustions   >were as follows: our current schema calls for attributes to not be   >namespace qualified.  We should include a sentence indicated that   >qualifying the attributes we define is an error.  It would be good to   >see if schema checks will flag such problems.   >the whole document.  [I have a note that there is an action related   >to this for Joseph but I don't remember exactly what it is.]    My action item was to determine if a schema validator would choke on a qualified attribute if we said in fact there is an unqualified attribute (or what happens if a qualified and unqualified version are both present?). As I suspect, a qualified attribute would be schema invalid: in [1] the Id attribute on the Signature is schema valid [2]. The qualified dsig:ID attribute in [3] is schema invalid [4]. Consequently, I don't think there is any argument for us to change our unqualified attributes, it makes the XPath expressions a bit shorter too.    [1] http://policy.w3.org/WD-xmldsig-core-latest/signature-example-dsa.xml  <Signature Id="foo" xmlns="http://www.w3.org/2000/07/xmldsig#">    [2] http://www.w3.org/2000/06/webdata/xsv?docAddrs=http%3A%2F%2Fpolicy.w3.org%2FWD-xmldsig-core-latest%2Fsignature-example-dsa.xml++http%3A%2F%2Fpolicy.w3.org%2FWD-xmldsig-core-latest%2Fxmldsig-core-schema.xsd&keepGoing=on&style=offline    [3] http://policy.w3.org/WD-xmldsig-core-latest/qname-signature-example-dsa.xml  <Signature dsig:Id="foo" xmlns="http://www.w3.org/2000/07/xmldsig#" xmlns:dsig="http://www.w3.org/2000/07/xmldsig#">    [4] http://www.w3.org/2000/06/webdata/xsv?docAddrs=http%3A%2F%2Fpolicy.w3.org%2FWD-xmldsig-core-latest%2Fqname-signature-example-dsa.xml+http%3A%2F%2Fpolicy.w3.org%2FWD-xmldsig-core-latest%2Fxmldsig-core-schema.xsd&style=offline          _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 11:49 6/28/00 +0900, Martin J. Duerst wrote:   >>BTW: back in [a], what did you mean by:   >> >- General   >> >   The treatment of xml:lang, eg during transforms, is unclear.   >>[a]  http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JanMar/0254.html   >What we meant is that because xml:lang is an attribute   >that inherits, but transforms (e.g. XPath, XSLT) don't    [John's taken this thread up.]     >>Presently, the specification states:   >>   >>         We RECOMMEND that signature applications produce XML   >>         content in Normalized Form C [NFC] and check that any XML   >>         being consumed is in that form as well (if not, signatures may   >>         consequently fail to validate).   >>    >>http://www.w3.org/TR/2000/WD-xmldsig-core-20000601/#sec-XML-Canonicalizatio  n   >>   >>Consequently, any application that states it is conformant with the XML   >>Signature specification SHOULD do the above.   >   >I can imagine two different kinds of signature applications:   >   >1) Applications that create their content and sign it.   >2) Applications that take content created elsewhere and   >   sign it.   >   >For 1), the above is the right recommendation.   >For 2), the above is wrong.   >   >There may not be a need to make a distinction between   >1) and 2) in the rest of the spec, but here this is   >needed.    Sorry, I still don't understand. The distinction seems immaterial,  particularly depending on your view of the architecture where the signature  engine is seperate from the content-content regardless. The content we are  talking about is Signatures, not word processing files and such. Signature  applications create XML Signatures, that's the content they concern  themselves with.    Now, we may be speaking more to the generic point of C14N XML (if so, that's  why I'm trying to seperate these two threads).     >>   document is considered valid. Consequently, while we RECOMMEND all   >>   documents operated upon and generated by signature applications be in   >>   [NFC] (otherwise intermediate processors can unintentionally break the   >>   signature) encoding normalizations SHOULD NOT be done as part of a   >>   signature transform.   >>   http://www.w3.org/Signature/2000/06/section-8-I18N.html   >   >I think this puts two different kinds of concerns into the   >same pot (but I'm not exactly sure, because I'm not really   >familiar with the security language).    Well, it probably isn't even correct to call this a  "Birthday Attack," I'm  hoping someone else jumps in and tweaks the text, but I think the gist of  what you are after is there.     >>  >    It should be mandated that, when a document is transcoded from a   >>  >    non-Unicode encoding to Unicode as part of C14N, normalization  must be   >>  >    performed (At the bottom of section 2 and also in A.4 in the June  1st   >>  >    2000 draft).   >>  >   >>  >**** Unicode-based encodings are e.g. UTF-8 and UTF-16. In most cases,   >>  >      the transcoding result is normalized just by design of  Normalization   >>  >      Form C, but there are some exceptions.   >>  >   >>  >**** The above also applies to other transcodings, e.g. done as part   >>  >      of the evaluation of an XPath transform or the minimal   >>canonicalization.   >>   >>Is this precluded by the security concern raised above?   >   >No, this is something different. It just helps to make   >transcodings as deterministic as possible. If some transcoder   >e.g. would convert a precomposed character in iso-8859-1 to   >a decomposed representation (non-normalized), checking   >would just not work.    John, given that we've specified the format and syntax of a Signature, is it  likely that a Signature will be in a non-Unicode format? Regardless, if so,  Martin what is a "transcoding"? Moving from one character encoding scheme to  another? I'm certainly getting an educating in characters! From my reading  [1,2] I understand the following:            + Character Repertoire (CR) = a set of abstract characters            + Coded Character Set (CCS) = a mapping of code values (space,              points, positions) to a Character Repertoire            + Character Encoding Scheme (CES) = scheme for representing a              character repertoire in a code space. Frequently, a (|CR| >              |code space|) so one has to do various extensions and              escaping to represent those extra abstract chacters. UTF-8 is a  CES.            + Charset = CCS + CES         [1] http://www.w3.org/MarkUp/html-spec/charset-harmful       [2] http://czyborra.com/utf/          >>  >In 4.3.3, the text on URI-Reference and "non-ASCII" characters   >>  >should be alligned with that in XPointer   >>  >http://www.w3.org/TR/xptr#uri-escaping to make sure all the   >>  >details are correct.   >>   >>I believe the present text is sufficient:   >>   >>         (Non-ASCII characters in a URI should be represented in   >>         UTF-8 [UTF-8] as one or more bytes, and then escaping these   >>         bytes with the URI escaping mechanism. [XML])   >>         http://www.w3.org/TR/2000/WD-xmldsig-core-20000601/#sec-Reference   >>   >>To state that all fragment identifiers (even from other MIME types) must  be   >>escaped as defined by XPTr would be innapproriate. If someone uses XPTr,   >>they should follow the XPtr spec of course.   >   >I didn't mean to state 'as defined by XPTr'. I was asking to take   >the text from XPTr. I should better have asked you to take the   >text from XLink (currently W3C member-only pre-published version),   >this may have avoided confusion.    Can you point me to the text (even if a Member URL). You are asking me to  align our text with something I haven't seen (and consequently don't  understand why it is necessary.)     >In XPointer, the conversion is described for the case of constructing   >an XPointer and making a legal URI fragment out of it. This may indeed   >be different for different fragment identifiers.   >   >You are on the other side, what you have to describe is how to take   >URI References appearing in DSig syntax (which may contain characters   >outside ASCII) and converting them to URI References formally conforming   >to URI syntax. In the case of XPointer (and some other cases), the fact   >that both procedures are identical will allow users to put XPointers   >(and other stuff) containing e.g. non-ASCII characters into DSig syntax   >as characters (without constant %HH escaping). It's two sides of the   >same medal, so to say.    I'm sort of lost, but hopefully the text will help me out.     >>  >4.5 The Encoding attribute of <Object> is not described. Is that   >>  >something like 'charset', or something like base64, or what.   >>  >This needs to be clearly described or removed.   >>   >>I propose, "The Object's Encoding attributed may be used to provide a URI   >>that identifies the method by which the object is encoded."   >   >What would that be? Any such URI examples? Any examples   >where this is needed?     The scenario is that of a binary data format, like GIF or like a Word97  document. Something like    <Object Encoding="http://www.w3.org/2000/02/xmldsig#base64 ">   AE34SDFW34234...  <Object>      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 06:03 PM 3/16/98 +0100, Stefan Mintert wrote:   >May anyone who uses the translation _remove_ the wrapper, or is a  translation   >protected by the same copyright conditions as the original spec (i.e. is   >removing the wrapper a violation of the copyright)?   >   >(We prefer the second choice of course ;-)    Your wrapped and translated version will be a derivitive work of the W3C  version. You will own the copyright on the "derivitive" work and can  preclude people from removing the wrapper. Furthermore, a condition of the  W3C to allow you to make a derivitive work is given in our policy, and from  the W3C point of view, we would rescind our grant to make a derivitive work  if you failed to make it clear that the wrapper must stay on.    (Keeping it on protects your efforts, as well as the integrity of the  document.)        ___________________________________________________________    Joseph Reagle Jr.  W3C:     http://www.w3.org/People/Reagle/  Policy Analyst     Personal:  http://web.mit.edu/reagle/www/                     mailto:reagle@w3.org        

        We've put our left foot (W3C) forward [1] and we hope/expect the right foot   (IETF) to follow soon. Regardless, the Chairs would like to thank and   congratulate everyone for their proposals, discussion, astute eyes, and   implementations.    Now the task is to see if we can't add a few more implementations to [2] and   fill all the columns with "yes". If you have any comments or suggestions on   interoperability, please send them on to the list -- as always!    [1] http://www.w3.org/TR/2000/CR-xmldsig-core-20001031/  [2] http://www.w3.org/Signature/2000/10/17-xmldsig-interop.html    Forwarded Text ----  >Date: Tue, 31 Oct 2000 20:02:29 -0500  >From: Janet Daly <janet@w3.org>  >...  >  >W3C is pleased to announce the advancement of Canonical XML to Candidate  >Recommendation status.  >  >   XML-Signature Syntax and Processing  >   31 October 2000  >   http://www.w3.org/TR/2000/CR-xmldsig-core-20001031/  >   Editors  >         Donald Eastlake <dee3@torque.pothole.com>  >         Joseph Reagle <reagle@w3.org>  >         David Solo <dsolo@alum.mit.edu>  >   Authors  >         Mark Bartel <mbartel@JetForm.com>  >         John Boyer <jboyer@PureEdge.com>  >         Barb Fox <bfox@Exchange.Microsoft.com>  >         Ed Simon <ed.simon@entrust.com>  >  >1 Abstract  >  >This document specifies XML digital signature processing rules and  >syntax. XML Signatures provide integrity, message authentication, and/or  >signer authentication services for data of any type, whether located  >within the XML that includes the signature or elsewhere.  >  >  >2 Request for publication and outstanding issues  >  >The publication of the XML-Signature Syntax and Processing Candidate  >Recommendation is a result of a request sent to the Director and the W3C  >Chairs, archived at:  >  >http://lists.w3.org/Archives/Member/chairs/2000OctDec/0059.html  >  >The XML Signature WG reports that all last call issues have been  >resolved. The Last Call Issue Report is at:  >  >http://www.w3.org/Signature/20000228-last-call-issues.html  >  >There were no minority objections.  >  >Results of the initial operability report are available at:  >  >http://www.w3.org/Signature/2000/10/17-xmldsig-interop.html  >  >  >3 Exit criteria  >  >The XML Signature Working Group encourages implementations during the CR  >period, which ends on 31 January 2001.  >  >The XML Signature Working Group must produce an amended version of the  >implementation report, taking into account new implementations, in order  >to exit the Candidate Recommendation phase, and showing that they have  >addressed all issues raised during the CR period.  >  >In particular, the Working Group appreciates implementations on the  >following two points:  >  >   1. XPath is RECOMMENDED. Signature applications need not conform to  >      [XPath] specification in order to conform to this specification.  >      However, the XPath data model, definitions (e.g., node-sets) and  >      syntax is used within this document in order to describe  >      functionality for those that want to process XML-as-XML (instead  >      of octets) as part of signature generation. It appears all known  >      implementations are satisfying the functional requirements by  >      implementing XPath, consequently should we make it MANDATORY?  >  >   2. Minimal canonicalization (defined by this spec) is RECOMMENDED.  >      There are no implementations of this algorithm: should we make  >      it OPTIONAL or even remove it?  >  >  >4 Description of what Candidate Recommendation status means  >  >The W3C Process Document describes the Candidate Recommendation status  >of a specification in Section 6.2.3:  >http://www.w3.org/Consortium/Process/Process-19991111/tr.html#RecsCR  >  >    Advancement of a document to Candidate Recommendation is an explicit  >    call to those outside of the related Working Groups or the W3C itself  >    for implementation and technical feedback.  >  >  >5 Status of this document  >  >     This specification from the IETF/W3C XML Signature Working Group  >     (W3C Activity Statement) is a Candidate Recommendation of the  >     W3C. The Working Group believes this specification incorporates  >     the resolution of all last call issues; furthermore it considers  >     the specification to be very stable and invites implementation  >     feedback during this period.  >  >     The duration of Candidate Recommendation will last approximately  >     three months (January 31 2001); after which it should proceed to  >     Proposed Recommendation. However, this specification will not  >     reach Recommendation until the closure of the 6 month IETF  >     Proposed Standard period in May 2001. In May, this specification  >     should be advanced to W3C Recommendation and IETF Draft Standard  >     provided no substantive concerns were raised that would bar such  >     progress. Note, this specification already has significant  >     implementation experience as demonstrated by its Interoperability  >     Report. We expect to meet all requirements of that report within  >     the three month Candidate Recommendation period. Specific areas  >     where we would appreciate further implementation experience are:  >  >      1. XPath is RECOMMENDED. Signature applications need not conform to  >         [XPath] specification in order to conform to this specification.  >         However, the XPath data model, definitions (e.g., node-sets) and  >         syntax is used within this document in order to describe  >         functionality for those that want to process XML-as-XML (instead  >         of octets) as part of signature generation. It appears all known  >         implementations are satisfying the functional requirements by  >         implementing XPath, consequently should we make it MANDATORY?  >         [See Note-XPath for more.]  >      2. Minimal canonicalization (defined by this spec) is RECOMMENDED.  >         There are no implementations of this algorithm: should we make  >         it OPTIONAL or even remove it?  >  >     Please send comments to the editors and cc: the list  >     <w3c-ietf-xmldsig@w3.org>.  >  >     A list of current W3C working drafts can be found at  >     http://www.w3.org/TR/. Current IETF drafts can be found at  >     http://www.ietf.org/1id-abstracts.html.  >  >     Patent disclosures relevant to this specification may be found on  >     the Working Group's patent disclosure page in conformance with  >     W3C policy, and the IETF Page of Intellectual Property Rights  >     Notices in conformance with IETF policy.  >  >for Tim Berners-Lee, Director;  >Janet Daly, Head of Communications  End Forwarded Text ----    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        The new version [2] includes the changes John Boyer mentioned in [1].     [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000AprJun/0246.html  [2] http://www.w3.org/TR/2000/WD-xml-c14n-20000613       Abstract         This specification describes a method for generating a physical      representation, the canonical form, of an input XML document, that      does not vary under syntactic variations of the input that are defined      to be logically equivalent by the XML 1.0 Recommendation [16][XML]. If      an XML document is changed by an application, but its Canonical-XML      form has not changed, then the changed document and the original      document are considered equivalent for the purposes of many      applications. This document does not establish a method such that two      XML documents are equivalent if and only if their canonical forms are      identical.           [16] http://www.w3.org/TR/2000/WD-xml-c14n-20000613#XML      Status of this document         This is the second draft of a proposal that (1) serves as an      alternative approach to the Canonical XML specification using the      XPath [17][XPath] data model, and (2) includes a few substantive      changes that affect the canonical serialization of an XML document. It      is not necessary for implementations to use XPath to generate the      canonical form of an XML document. XPath simply provides a data model      that is simplified compared to InfoSet, yet sufficient for the purpose      of canonicalization. XPath also provides an expression syntax for      describing the desired portion of a whole document. Any variances      between that result from this specification's use of the XPath      [18][XPath] data model and the XML Information Set [[19]InfoSet] will      be reported to the XML Information Set's comments list.           [17] http://www.w3.org/TR/2000/WD-xml-c14n-20000613#XPath        [18] http://www.w3.org/TR/2000/WD-xml-c14n-20000613#XPath        [19] http://www.w3.org/TR/2000/WD-xml-c14n-20000613#Infoset         Prior versions of this document were published by the [20]XML Core      Working Group (the last of which was the [21]20000119 draft), which      delegated the completion of this specification to the IETF/W3C [22]XML      Signature Working Group. We expect continued substantive discussion      with respect to the treatment of XML namespaces, but hope to address      that (any any other issues) quickly such that we can issue a second      Last Call at the beginning of July 2000.           [20] http://www.w3.org/XML/Activity#core-wg        [21] http://www.w3.org/TR/2000/WD-xml-c14n-20000119.html        [22] http://www.w3.org/Signature/         The XML Signature and XML WGs and other interested parties are invited      to comment on this proposed direction, review the specification and      report implementation experience. While we welcome implementation      experience reports, the XML Signature Working Group will not allow      early implementation to constrain its ability to make changes to this      specification.         Please send comments to the editors and cc: the list      <[23]w3c-ietf-xmldsig@w3.org>. Publication as a Working Draft does not      imply endorsement by the W3C membership or IESG. It is inappropriate      to cite W3C Drafts as other than "work in progress." A list of current      W3C working drafts can be found at [24]http://www.w3.org/TR/. Current      IETF drafts can be found at      [25]http://www.ietf.org/1id-abstracts.html.           [23] mailto:w3c-ietf-xmldsig@w3.org        [24] http://www.w3.org/TR/        [25] http://www.ietf.org/1id-abstracts.html         There have been no solicitations nor declarations regarding patents      related to this specification within the Signature WG.     End Forwarded Text ----    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 04:17 PM 7/13/99 -0500, Dan Connolly wrote:   >XML-Signature referents are identified with   >        XML locators (URIs or fragments)   >   >But note that it (currently) doesn't;   >it proposes a sort of extension to URIs using the |   >to signal some new semantics. Did you mean to   >include this new | feature?   >   >http://www.w3.org/TR/1998/WD-xlink-19980303#addressing    Actually, this feature is not specified in the 19990726 version [1] of the  specification that I can see. Perhaps the closest reference to the issue is  [2], but I'm not quite sure what they mean by container and content of  container. They may be arguing the same exact thing between resource and  content resource? (Editorial: The URI of [2] has spaces in the URI. [3])    [1] http://www.w3.org/1999/07/WD-xlink-19990726   [2] http://www.w3.org/TR/xlink#locator container or content          Issue (locator container or content):           How does a locator specify the container versus specifying           the content of the container?  [3] http://www.ics.uci.edu/pub/ietf/uri/rfc2396.txt  2.4.3. Excluded US-ASCII Characters     ... The space character is excluded because significant spaces may     disappear and insignificant spaces may be introduced when URI are     transcribed or typeset or subjected to the treatment of word-     processing programs.    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      One thing I realized that was causing me difficulties is our reliance upon  the terms "algorithm" and "value" that appear in the actual element names --  other times they are nested elements, or other times attributes (sometimes  called type, sometimes call name)! The reason this first happened was  because the "algorithm" and "value" information was moved from the signature  element and placed in sign_info for processing purposes. I think this is  ugly, and would've preferred something else (with a perhaps slightly more  complex set of processing rules) but acknowledging what we have now, there's  another proposal below. A bit different than my first.    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/1999OctDec/0073.html  I really don't like either and wish we could remove "algorithm" and "value"  from the actual element name, but then SignatureAlgorithm and SignatureValue  would still present an inconsistency.  I hope better minds than my own can  come up with a good proposal...    Reagle's Second Proposal        1. If you use the term "Value" or "Algorithm" in the element name,         then the content of that element must be a literal value or         algorithm designation. (Consequently) If you need to nest other          content in an element, it must not contain the term Value or  Algorithm          in its name.        2. Otherwise, all URIs should be listed as an attribute value.              <Signature xmlns="http://www.w3.org/1999/10/signature-core">       <SignedInfo>         <CanonicalizationAlgorithm>null</CanonicalizationAlgorithm>         <SignatureAlgorithm>urn:ietf:dsaWithSHA-1</SignatureAlgorithm>         <ObjectReference HREF="http://www.iet.org"/>           <Type>text/html; charset="us-ascii"</Type>           <DigestValue Algorithm="urn:ietf:sha-1"              Encoding="urn:ietf:base64">ab3234c34</DigestValue>         </ObjectReference>       </SignedInfo>       <SignatureValue     Encoding="urn:ietf:base64">ab3234c34</SignatureValue>       <KeyInfo>         <keyname>Solo</keyname>       </keyinfo>     </Signature>            Type is still weird since it might be a MIME/Type or URN ....      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 11:35 99/12/16 -0500, Ed Simon wrote:   >I thought we were having the last telecon of the year today.   >Did I miss the agenda/passcode email?    http://www.w3.org/Signature/Minutes/991202-tele.html    >Have the call on the 9th and 16th, Eastlake will notify if he   >doesn't think we need a call that week.    I don't think there is much to talk about, but I am on the bridge just in  case. <smile> Bascially, I've been trying to get enough details to put the  FTF logistic page up, and editing the spec.        _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        __    *Note: I will be at LawTech'99 Conference and taking some holiday     from August 7-15. I will respond to any email as soon as possible     after my return.  _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      Comments on XML Infoset [1].  Reviewer: Joseph Reagle.    While Canonical XML [2] is not based on the XML Information Set   specification, future canonicalization (C14N) algorithms might be.   Consequently, these comments try to identify limitations of the present C14N   design in the context of the latest Infoset draft. As a point of history,   Canonical XML was originally based on a selection and serialization of   Information Set items. When Canonical XML was transferred to the XML   Signature WG, it was changed so as to be based on XPath because XPath   provided useful features related to document subsets (serializing portions   of an XML document) and was already a W3C Recommendation.    These brief comments do not contain any editorial or substantive comments or   suggestions. Instead, it points out similarities and divergences should a   canonical form ever be based on [1], and asks a few questions.    [Infoset]  http://www.w3.org/TR/2001/WD-xml-infoset-20010202  [C14N] http://www.w3.org/TR/2001/PR-xml-c14n-20010119    __    The Canonical XML specification identifies three limitations where:     >The difficulties arise due to the loss of the following information not   available in the data model:   >1. base URI, especially in content derived from the replacement text   >  of external general parsed entity references   >2. notations and external unparsed entity references   >3. attribute types in the document type declaration   >http://www.w3.org/TR/2001/PR-xml-c14n-20010119#Limitations    While some of these issues arise because information was "not available in   the [XPath] data model" they also arise from the fact that this information   is not represented in a standalone well-formed XML document which was one of   the goals of Canonical XML. Where applications are concerned with this   information, the Canonical XML specification (non-normatively) mentions how   the information might be reintegrated into the canonical form if it will   undergo subsequent processing -- but typically it is not, it is merely used   in the hash computation of the signature creation. Having this information   available via the Infoset makes the task of the application that wishes to   do this much easier.    1. Canonical XML requires that Base URI be explicitly declared to mitigate   problems of resolving relative URIs when the URI context is not known or   when external entities with relative URI are incorporated into the document.   This information is explicitly part of the InformationSet data model.    However, if I have a InfoSet and BaseURI compliant parser which resolves an   external entity without explicit BaseURI declarations, would the BaseURI   Infoset properties still be available in the "importing document" via the   heuristics [a] of finding the BaseURI when the "imported document" was parsed?    [a]  http://www.w3.org/TR/2000/PR-xmlbase-20001220/#rfc2396   >4. Resolving Relative URIs   >4.1. Relation to RFC 2396   >RFC 2396 [IETF RFC 2396] provides for base URI information to be   >embedded within a document. The rules for determining the base   >URI can be summarized as follows (highest priority to lowest):        2. "The loss of external unparsed entity references and the notations that   bind them to applications means that canonical forms cannot properly   distinguish among XML documents that incorporate unparsed data via this   mechanism." [C14N]    C14N only preserves the name of external unparsed entity references from the   complete set available under the Infoset {name,  system identifier, public   identifier, or notation}. An application with all of this information can   more easily generate an additional signature reference over the actual   external entity if a user wishes to protect the integrity of that information.    3. "the loss of attribute types can affect the canonical form in different   ways depending on the type. Attributes of type ID cease to be ID attributes.   Hence, any XPath expressions that refer to the canonical form using the id()   function cease to operate... Applications can avoid the difficulties of this   case by ensuring that an appropriate document type declaration is prepended   prior to using the canonical form in further XML processing." [C14N]    This information is preserved in the Information Set. However, as stated   earlier, it's loss in canonical form is a result of the choice to create a   standalone XML serialization, this data would be lost  under this constraint   even if the C14N was based on Infoset though it might be easier to prepend   the appropriate DTD as recommended above.    __     >http://www.w3.org/TR/xml-infoset/#intro   >Furthermore, this specification does not define an information set for   documents which use relative URI references in namespace declarations. This   is in accordance with the decision of the W3C XML Plenary Interest Group   described in [Relative Namespace URI References]. Thus the value of a   [namespace name] property is always an absolute URI with an optional   fragment identifier.    This corresponds with Canonical XML design:     >http://www.w3.org/TR/2001/PR-xml-c14n-20010119#DataModel   >Note: This specification supports the recent XML plenary decision to   deprecate relative namespace URIs as follows: implementations of XML   canonicalization MUST report an operation failure on documents containing   relative namespace URIs. XML canonicalization MUST NOT be implemented with   an XML parser that converts relative URIs to absolute URIs.    __     >http://www.w3.org/TR/xml-infoset/#intro   >Entities   >An information set describes its XML document with entity references   already expanded, that is, represented by the information items   corresponding to their replacement text. However, there are various   circumstances in which a processor may not perform this expansion.    Canonical XML purposefully fails when external parsed entities can not   resolve.    __     >http://www.w3.org/TR/xml-infoset/#intro   >Base URIs   >Several information items have a [base URI] property. This is computed   according to [XML Base]. Note that retrieval of a resource may involve   redirection at the parser level (for example, in an entity resolver) or   below; in this case the base URI is the final URI used to retrieve the   resource after all redirection.    Canonical XML can also work with explicit declarations of Base URI, see   issue 1 above.    __    The Infoset specification introduces the concept of a "Synthetic Infoset"   that is not a result of parsing an XML document; instead its a Infoset of   partial XML that might result by use of an API or DOM. This seems to   correspond to the "document subset" of Canonical XML.      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

        While we marshal are resources for getting Canonical XML to Candidate REC   <smile>, hopefully sometime next week (as early as possible) new drafts of   the dsig spec will be issued with a second last call. This makes sense even   though there hasn't been a ton of debate/contention on this spec (mostly   clarifications resulting from implementation experience), but the time from   the first last call and the changes in the process model to account for   Canoncal's last call merits another one just to be safe.    So this will be the time to make sure this WG and the rest of the world is   happy with the changes we've made in order to address the earlier issues and   the Canonical dependency.    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 16:37 99/08/18 -0500, Richard D. Brown wrote:   >Sure, but the top level, which consists of the signature element, remains  an   >element according to the production given in the XML specification.   >   >element := EmptyElemTag | STag content ETag   >content := (element | CharData | Reference | CDSect | PI | Comment)*    Ok, I'll buy that.      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

        In our discussion last week people mentioned the existence of normative URNs  (they aren't listed off of IANA as far as I could tell [1]), could people  send those references along to me? Thanks.    [1] http://www.iana.org/numbers.html    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 10:54 AM 5/30/00 -0700, Brian LaMacchia wrote:   >OK, I'll use the TR/2000 one.  Also, is it likely that   >"www.w3.org/2000/02/xmldsig" will stay the same, or will that change to   >whatever year & month the final Recommendation/proposed std. is?     Short answer, yes it will change; not sure when is optimum though.    It's supposed to change, when the semantics/syntax of namespace  substantively change. [b]  Neither our syntax or semantics have  substantively changed, instead it's been additions and clarifications.  However, I think the build up of change, particularly as we enter the  standards track merits a new namespace. But since we're pushing so hard to  make that happen ASAP, I don't want to do it quite yet since our examples  (from Kent and Petteri) wouldn't be quite right then. However, I planned on  asking them and the WG if people area conformtable with:          http://www.w3.org/2000/06/xmldsig#    In general, changing namespaces can be work for editors and implementors as  a spec progresses, but if you aren't careful about this, you can end up  messing up the very people using your specification.    I recently commented about this to the Schema WG itself. Unfortunately,  they've been using the same namespace through big changes in their syntax  which means that our signature examples that, on a certain date, validated  against X will stop working when the schema WG publishes a new draft with  big changes under the same namespace and retroactively change what that  namespace means (and how a validator works!).      I appreciate you don't want to change the namespace every time    you issue a new draft and I hope you would try every time you made a    substantive change, because now the result is that even if I write my XML    instance that (today) validates under [1,2] next time you put out a new    draft it won't! Before, not updating your namespace violated a philosphical    point (but the actual dtd and schema were in a more specific (month) date    space). Now you are violating a more practical point, if I have an example    that works now based on something in date space it won't in the future.    [a] http://lists.w3.org/Archives/Public/xmlschema-dev/2000Apr/0022.html    [b] http://lists.w3.org/Archives/Public/xmlschema-dev/2000Apr/0026.html    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        Many thanks to Walter Houser for the great job on the Minutes. There are  still a few tiny holes, and as always, if you'd like to make any  suggestions/corrections, just let us know.    http://www.w3.org/Signature/Minutes/000803-Pittsburgh/      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 23:48 2000-05-11 -0400, Mariano P. Consens wrote:   >A proposed solution to this problem will be sent in a follow up message.    Did you send it? I still am not sure that such a solution is within the  scope of this WG, but if you have a proposal that I can forward on to some  other XML constituency (or maybe take up on xml-dev) I'd be happy to forward  it on.     >Regardless of any specific solution being accepted by the group, I would   >suggest   >to include in the text of the specification a mention of this issue, to  make   >the   >reader aware of the potential drawback of using ID attributes within XML   >Signature applications.    End of 2.0 now reads: "Since a Signature element (and its Id attribute  value/name) may co-exist or be combined with other elements (and their IDs)  within a single XML document, care should be taken in choosing names such  that there are no subsequent collisions that violate the ID uniqueness  validity constraint [XML]."    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      I still can't get keyboard files to work under windows -- just tried with  2.4 Sometimes I think it's a syntax error on my part or I think it's a  parser error -- the actual function names appear next to menu items as the  keybaord shortcut. Also, the errors are invariant and non-deterministic...    For instance, I can't get the file below to work [1] properly. It frequently  exhibits it most weird behaviour around the following:    Ctrl <Key>6:    ShowStructure()  Ctrl <Key>7:    ShowAlternate()    Which makes me think the parser is picking up the "Alt" in "ShowAlternate"?     [1]     #moving commands  <Key>Home:TtcPageTop()  <Key>End:TtcPageEnd()  <Key>Up:TtcPreviousLine()  <Key>End:TtcPageEnd()  <Key>Escape:TtcParentElement()  Ctrl <Key>Down:TtcNextElement()  Ctrl <Key>Up:TtcPreviousElement()  Ctrl <Key>Left:TtcParentElement()  Ctrl <Key>Right: TtcChildElement()  Ctrl <Key>a:TtcStartOfLine()  Ctrl <Key>e:    TtcEndOfLine()    #file menu  Ctrl <Key>o:    OpenDocInNewWindow()  Ctrl <Key>r:    Reload()  Alt <Key>Left:  GotoPreviousHTML()  Alt <Key>Right: GotoNextHTML()  Ctrl <key>h:    GoToHome()  Ctrl <Key>s:    SaveDocument()  Ctrl <Key>y:Synchronize()  Ctrl <Key>p:    SetupAndPrint()  Ctrl <Key>n:    New()  Ctrl <Key>w:CloseDocument()    #action menu  Alt <Key>Return: DoAction()    #edit menu  Ctrl <Key>z:    TtcUndo()  Ctrl <Key>x:    TtcCutSelection()  Ctrl <Key>c:    TtcCopySelection()  Ctrl <Key>v:    TtcPaste()  Ctrl <Key>f:    TtcSearchText()  <Key>Delete:    TtcDeleteSelection()  Ctrl <Key>d:    TtcDeleteSelection()  <Key>Return:    TtcCreateElement()  <Key>F7:        SpellCheck()     #structure menu    #types menu  Ctrl <Key>i:    CreateImage()   Ctrl <key>i:    CreateBlockQuote()     #heading submenu  Ctrl <Key>1:CreateHeading1()  Ctrl <Key>2:CreateHeading2()  Ctrl <Key>3:CreateHeading3()  Ctrl <Key>4:CreateHeading4()  Ctrl <Key>5:CreateHeading5()    #links menu  Ctrl <Key>a:    CreateTarget()  Ctrl <Key>k:    CreateOrChangeLink()    #views menu  Ctrl <Key>=:ZoomIn()  Ctrl <Key>-:ZoomOut()  Ctrl <Key>6:    ShowStructure()  Ctrl <Key>7:    ShowAlternate()  Ctrl <key>8:ShowSource()    #formatting  Ctrl <Key>b:    CreateElemStrong()  Ctrl <Key>i:    CreateElemEmphasis()  Ctrl <Key>t:    CreateElemCode()  Ctrl <Key>q:    CreateBlockQuote()        _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 12:16 11/7/2000 -0800, hal@finney.org wrote:  >Your responses to my two comments here seem to be interchanged.  I just  >wanted to make sure you noticed the part about the bignum description  >in 6.4.2 needing to move up, perhaps to 6.4.    Yes, sorry. I will take the single paragraph [1] and move it into the DSA   section and in the RSA section provide a backwards reference (e.g., "do the   same thing as stated in DSA").      [1] Arbitrary-length integers (e.g. "bignums" such as RSA moduli) are   represented in XML as octet strings. The integer value is first converted to   a "big endian" bitstring. The bitstring is then padded with leading zero   bits so that the total number of bits == 0 mod 8 (so that there are whole   number of octets). If the bitstring contains entire leading octets that are   zero, these are removed (so the high-order octet is always non-zero). This   octet string is then base64 [MIME] encoded. (The conversion from integer to   octet string is equivalent to IEEE 1363's I2OSP [1363] with minimal length).    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 10:55 1/25/2001 -0800, Brian LaMacchia wrote:  >Since all of KeyInfo is optional, by definition if you don't understand a  >clause you come across you drop it on the floor.    Agreed, and the bit we're trying to understand is if some folks want to be   able to say:    1. "I understand "http://www.w3.org/2000/09/xmldsig#PGPData" and its   children element types and only those element types; I might understand   other namespaces under KeyInfo"    2. "I understand "http://www.w3.org/2000/09/xmldsig#PGPData" and its   children element types from the dsig namespace and maybe some other children   of a similar sort of meaning from other namespaces"    There's a tradeoff between the clarity of the namespace in option 1, and the   small bit of metadata "typing" implied in option 2. When it comes to   parsing, these lead to the following models:    1. I find foo:bar under KeyInfo, I don't even have a clue if I care about   it, but I can dereference the namespace, grab the schema, and understand its   type from that.    2. I find foo:bar under PGPData, I can infer whether I care or not   immediately because I know if I care about PGPData.    So you're approach does give a hint as to whether one should even bother to   dereference and chase down a schema, but it also encourages folks to extend   our elements (in a potentially confusing way) where I'd like to encourage   them to make a clean replacement and use schema typing to explicitly define   the relationship.    >One of my main objections with option 1, which I raised previously during  >the flap over the exact structure of X509Data, is that the XMLDSIG WG should  >not be in the position of specifying a fixed, non-extensible Scheme for data  >types that are "owned" by another WG.    We own our namespace; they own there's.    >If this WG is not willing to support extensibility within the "best-guess"  >structures we have created to foster use of the output of the other WGs, I  >humbly suggest that our best, safest course of action would be to remove the  >X509Data, SPKIData and PGPData sections in their entirety from the draft and  >let each of the other WGs issue RFCs that specify sub-elements of KeyInfo  >that best represent their own work product.    The nice thing is that they can do exactly this without dropping out   "best-guess" approximations because other WGs will do their work in their   own namespace. Actually, my interest in not having extensibility at the type   level (PGP, X509, SPKI) is to encourage other WGs to do a better job at the   schema class level, instead of hacking on extensions to ours at the instance   level.    __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      Since a couple people seem interested in the issue of XML encryption, I  agreed to put together a list for the topic. [1] I'm forwarding this message  on to the XML Signature list, and folks recommended some other lists, but  I'll let those people forward it on as approriate. The only people I've  already added are those that specifically requested and to whom I  affirmitively responded via email. (If you are in doubt, you are not  subscribed).    __    [1] http://lists.w3.org/Archives/Public/xml-encryption/    xml-encryption@w3.org Mail  Archives    XML Encryption Mailing List (Help)        Subscribe: xml-encryption-request@w3.org            In Subject: (un)subscribe        General Discussion: xml-encryption@w3.org (Must be subscribed to send)        Archive: http://lists.w3.org/Archives/Public/xml-encryption/       Maintainer:  Joseph Reagle <reagle@w3.org>     This list is for discussion about XML encryption and related (potential)  IETF or  W3C activity. The purpose of this list is to foster the development of a  community of interest and a set of design issues and requirements that might  prompt a  BOF or workshop on the topic. This discussion list is public, it is not  moderated, and  it is not part of an chartered activity of the IETF or W3C.    Resources         Overview of IBM XML Security Suite (include XML encryption).    Archive         Recent messages             Since April 2000 (3 mails)         Appropriate content for this list includes discussion of requirements,  dependencies,  and technical proposals; and drafts of specifications, code, charters and  calls for  participation. Inappropriate materials include commercial advertisements and  announcements that are not immediately relevant to XML encryption. (e.g.,  general  announcements about XML or cryptographic conferences or books.) Please feel  free  to introduce yourself to the list expressing your own interest or any issues  that you  think are relevant.      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Forwarded Text ----  >http://www.ietf.org/internet-drafts/draft-mealling-iana-xmlns-registry-00.txt  >...  >This document seeks to standardize this practice by creating an IANA  >maintained registry of XML elements so that document authors and  >implementors have a well maintained and authoritative location for their  >XML elements. As part of this standard, the IANA will both house the public  >representation of the document and assign it a Uniform Resource Name that  >can be used as the URI in any URI based identification components of XML.      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 21:48 10/5/2000 -0600, C. M. Sperberg-McQueen wrote:  >We thank you for the comments.  We have attempted to resist urges to  >improve the transfer syntax, and in many cases we have been  >successful.  I must inform you, however, that in some cases we have  >been forced, despite your encouragement to stabilize the syntax, to  >make incompatible changes to the language.  These changes have been  >necessary to gain functionality and to improve the degree to which the  >grammar given in the schema for schemas actually captures the rules  >governing the construction of schemas.    Ok, I appreciate the need to make some of the changes you did make (some of   them are even things I asked for), and (un)fortunately because of other   dependencies (i.e. C14N relative URIs) this won't affect this too much   because we are not yet on the Standards track. I hope to move to the latest   version prior to going to Candidate REC (as soon as we finish up these last   minute editorial issues), though I can see it's going to be some work   (successfully migrating, then updating the in-line examples in the spec).   Regardless, now that you've made these changes, I'd _further_ encourage the   WG not to twiddle with the syntax! <smile>    >Two members of our WG (Henry Thompson and Martin Gudgin) have  >made available a Web service for translating schema documents from  >the old syntax into the new syntax; it is at  >  >   http://www.w3.org/2000/09/webdata/xsupgrade    I tried to apply this to [1] and I get nothing back (not even an HTTP   error). I grabbed the XSLT out of the CVS space and it merely processed the   nodes (removing the internal subset and comments) without any change.    [1] http://policy.w3.org/latest/xmldsig-core-schema.xsd    >And we have formulated a policy which should reduce (we hope) the pain  >caused by incompatible syntax changes: in addition to the generic (and  >mutable) resources at URIs like http://www.w3.org/XML/1998/namespace,    Ok, I'm glad to see this. I'm still a little confused by what conventions   you use in H10 [2] to distinguish between:  1. a latest version: ? (should it have a date at all?)  2. a dated/stable version: http://www.w3.org/2000/10/XMLSchema ?  3. it's instance: http://www.w3.org/2000/10/XMLSchema-instance ?    [2] http://www.w3.org/TR/xmlschema-1/#changes    >It would be helpful to us to know whether you are satisfied with the  >decision taken by the WG on this issue, or wish your dissent from the  >WG's decision to be recorded for consideration by the Director of  >the W3C.    The decision is acceptable though as stated I need a little more help in   understanding its effects.    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Thank Ed!    I've posted it to:          http://www.w3.org/Signature/Code/Canonicalizer.java      Forwarded Text ----   From: Ed Simon <ed.simon@entrust.com>   To: "'Joseph M. Reagle Jr.'" <reagle@w3.org>   Subject: Canonicalizer.java   Date: Wed, 22 Sep 1999 19:40:13 -0400      Hi Joseph,      I've managed to cobble together some code illustrating   null and identity canonicalizations.      Would you take a look at it and put it up on the   XML Signature WG site so people can take a look at   it before tomorrow's telecon.   ...     End Forwarded Text ----    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 12:38 7/18/00 +0100, Owen Roberts wrote:   >Also, will there be a standard DTD to perform interop against? Schemas   >aren't widely implemented in DOM world.    >We are just using the DTD out of the latest draft. (broken as it is  compared   >to the schema)    How do you mean broken? Kevin has pointed out one problem and alluded to  others, if you guys point them out, I'll be happy to fix them in the next  version. It's just that tweaking something in the spec, then in the actual  file, then validating the schema/DTD and then examples, find bug, reiterate,  can get hairy sometimes. <smile>    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0102.html     >Is anyone doing validation against schems??    I'm doing syntactical (not cryptographic) validation using [1].    [1] http://www.w3.org/2000/06/webdata/xsv     >We are supporting    >explictly namespace qualified elements in XML with no validation (although   >still based on DTD)   >or    >no namespace qualifications in XML with validation against said DTD.    I think for the purposes of Interop, it would make sense to create an  application DTD with Signature+application declarations by which we can test  enveloped and enveloping Signatures. Do you already have one?    People should feel free to send examples/DTDs to the list right now (and  attachments are decoded with their own URL which is convenient) as a start,  and then we can put a more formal document together (or if someone wants to  contribute that now, that's welcome too!)    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

          text/enriched attachment: stored          

      Don, on the following point, could you provide some clarity?    Does the text [1], "Thus, to interoperate between different XML  implementations, the following syntax constraints MUST be observed" mean  ONLY when a DTD/schema is not present, or any XML content being signed can  never have attribute values? (I assume not).    And with respect to the text, "2. all entity references (except "amp", "lt",  "gt", "apos", "quot", and other character entities not representable in the  encoding chosen) be expanded" How would you respond to Martin's comment? I  think the point was to say these things don't vary as they are defined by  the doctype and convention, so that's why we don't mind if people use them  in their non-expanded form: & = &    [1] http://www.w3.org/TR/2000/WD-xmldsig-core-20000711/#sec-XML-1    At 15:44 6/27/00 -0400, Joseph M. Reagle Jr. wrote:   > >7.1, second list, point 2: 'except... and other character entities   > >not representable...': This may be wrongly understood to mean that   > >e.g. é in a HTML document shouldn't be expanded if   > >the encoding is US-ASCII. This is of course wrong, é   > >should in this case be changed to the appropriate numeric   > >character reference (and the spec may have to say whether   > >these should be decimal or hex,...).      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 09:21 7/26/2000 -0700, John Boyer wrote:   >Section 12 "Authors' Addresses" should be "Editors' addresses"    It's Authors' Address for purposes of the IETF.      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      The XML-Signature WG is now an official/approved activity of the W3C. The  charter with editorial tweaks from the review process it at:          http://www.w3.org/Signature/charter-19990624.html  We'll try to get this reflected over on the IETF site.    ___      Message-ID: <377D2680.1180B57E@w3.org>  Date: Fri, 02 Jul 1999 16:52:16 -0400  From: Janet Daly <janet@w3.org>  Subject: Call for Participation: XML Signature Working Group (XML-DSig)    Dear Advisory Committee Representative,    The Director has approved a new briefing package for the XML Signature  Activity and announced the creation of a new working group, the XML  Signature Working Group. This Working Group is a joint activity of the  W3C and IETF -- where it is designated as "(xmldsig)".    As stated in the charter, the mission of the group is to specify the  necessary procedures and syntax for generating and checking the  validity of XML signatures.     During the review, questions were raised about the scope of the  activity, such as trust management and security. As chartered, the focus  of this working group will be XML signatures that provide content  integrity and associated key authenticity and non-repudiability. A  requirement on the WG is to ensure that additional semantics (trust and  security) must be able to layer on top of that framework. Larger questions   of trust and security will likely be addressed by an independent workshop   in the fall.    Additionally, this WG has the option of rechartering or proposing a  new activity once it has completed its deliverable of a signature  syntax. Editorial and clarity questions were raised which will be  reflected in a revised version of the charter and located at:  http://www.w3.org/Signature/charter-19990624.html.    Please note the following IPR disclosures were made during the review  of this activity and were posted on the patent-issues@w3.org list. These  disclosures will be publicly disclosed on one or more of the following:  the IETF site, the W3C site, the XML Signature specification.          PenOp, Chris Smithies <Chris_Smithies@penop.com>        Lucent, Igor Faynberg <faynberg@lucent.com>    The Signature Working Group is co-chaired by Don Eastlake of IBM and  Joseph Reagle of W3C. Joseph is also the W3C Staff Contact. You may  nominate individuals for this Working Group through the form at the  bottom of this message.    The following two documents were reviewed by the relevant parties.    Briefing Package:        http://www.w3.org/1999/05/XML-DSig-CFP-990521.html  Proposed Working Group charter:        http://www.w3.org/1999/05/XML-DSig-charter-990521.html  Resulting Working Group charter:        http://www.w3.org/Signature/charter-19990624.html      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      Gregor,     Good catch. But why did you exclude the option of letting the content be  mixed? In Boyer's examples of Transforms, the content model of the Transform  document is obviously not an element.            <Transform Algorithm="&XPath;">           descendant-or-self::node()[not(self::Id)]</Transform>           </Transforms>     Consequently, I've changed the content model to mixed for the time being.      At 14:44 99/12/20 +0100, Gregor Karlinger wrote:   >Section "3.3.3.1 The Transforms Element":   >-----------------------------------------   >   >In this section there is no hint (neither in the textual description nor  in the   >Schema definition) that the "Transform" element could have mixed content.  But   >in section 5.6 the specification defines some character content for the  "Transform"   >element.   >   >To solve this contradiction, I suggest the following:   >   >* Keep the content model as-is (content='elementOnly')   >   >* Put the stuff defined in section 5.6 into a parameter element (for  example the   >  XPath language expression).      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 16:45 1/6/2001 +0900, Martin J. Duerst wrote:  >At 01/01/06 11:27 +0900, Andy Camps wrote:  >>   * http://www.playgarden.com/w3c/TR/xhtml-basic/overview.html translated   >> bij <mailto:andy.camps@playgarden.com>Andy Camps - for the XHTML-Basic   >> document, original at   >> <http://www.w3.org/TR/xhtml-basic/>http://www.w3.org/TR/xhtml<http://www.w    >>  3. org/TR/xhtml-basic/>-basic/  >>For the XHTML-basic document I've also translated the comments in the DTD   >>at the end of the document. I'd like to publish this translation to.   >>Please let me know what to do. The question is: Can we translate the   >>comments in a DTD?  >  >My take would be that as this is part of the document itself,  >it is not a problem to translate it assuming that the introduction  >says that this has also been done.  >  >But it may be that the DTD is under a different licence than the  >rest of the document. Masayasu, Joseph, can you help?    DTD's are a bit of both, but live under the software license. Since the   intent isn't really to create a new DTD (I'm assuming it will use the same   identifier/namespace as the English one?), but a translation of an existing   one with respect to the comments (but not element types) I'd expect it'd be   good form to follow the translation procedures resulting from the document   license.    >>I'd also like to make the above translations available in the PDF-format,   >>ziped html and the palmtop doc format. The last one by converting it   >>trough <http://pilot.screwdriver.net/>http://pilot.screwdriver.net/.  >>Since it is a request to convert a translation of a spec I'm posting this   >>question in this group and not at site-policy@w3.org.  >  >I don't know exactly how it would look in palmtop doc format.  >Joseph, can you help?    As long as it complies with [1] I have no problems.    [1] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#format    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 16:29 99/12/14 -0500, Frederick Hirsch wrote:   >I have some questions on the XML-Signature core syntax and processing   >document    I'll answer what I can, but I think the other authors could address much of  this better than me.     >I have some questions about signed XML, specifically regarding    >Draft 07-December-1999,     >http://www.w3.org/Signature/Drafts/WD-xmldsig-core-19991207.html     >1. If I wish to not include the OBJECT elements themselves in the  signature for   >the transaction, is the example xpath transform below correct? If so, what   >does the draft mean in section 5.6.3 (Xpath filtering) that the root   >should be included so the result is well-formed? I thought I only want   >to sign the contents of the referenced object element. Is there an   >example available?    In your example, I believe your XPath would grab <txn xmlns=...> which is  the root of that object. You could also give the txn element type an ID and  reference that directly without using the XPath.     >2. For KeyInfo, KeyData, Is it correct to assume a CERTIFICATE element   >for each certificate in the signing party certificate chain? Is it   >correct to specify the encoding for each as an attribute of the   >certificate element?      David, Barbara, others?     >I am assuming that each certificate is base64 encoded (encoding type)   >of the DER encoding.    Yes.     >3. I assume that X.509 oids are not used since they are implicit in an   >XML element. Thus for example, if the signer sends device specific   >information as part of signing, the OID for this information would be   >implicit. Thus if in ASN.1 it is AUTHINFO and an OID, the tag   >SignerDeviceInfo would be enough - if the recipient knows to map this   >to the OID. (I guess I'm asking and assuming OID mapping is   >application dependent).     David, Barbara, others?     >4. In section 3.4, KeyInfo, I note that the spec allows including a   >CRL, with element X509CRL. Can we also define including signed OCSP   >responses, with an X509OCSP element? This would allow transmitted the   >status of the certs with a transaction in an interoperable manner.      David, Barbara, others?     >5. What is the relationship between SignatureAttribute object types   >and SignatureProperties elements, and when is either necessary?   >   >How is the optional type in an ObjectReference element used?   >(section 3.3.3). Does it matter if I have it or not? It seems not to   >matter. (e.g. <Object ID="timestamp"   >      type="&dsig;/SignatureAttributes">   >vs <Object ID="txn">    I don't think it matters nor is necessary, but if an application wants to  use it, they could as you have. David?     >Should all signature attribute objects be within SignatureProperties   >elements? I'm a little confused because it looks like properties of   >the signature (e.g. signing time) belong in SignatureProperties, but   >that is not how example 8.0 works. Is there a guideline?     You are correct there is an conceptual inconsistency in the example.  SignatureProperties should only be used for things about the signature, but  we don't specify that all things about a signature must appear in  SignatureProperties. I will tweak that example to use them.     >6. Likewise in the ObjectReference section 3.3.3, I'm not clear what a   >"parent document" is when using the null URL. Does this mean the root   >of the current document or something else?     Yes, the root of the current document, I will make sure we are consistent.     >7. The difference between SignedInfo, Manifest and Package is (to restate)   >SignedInfo - each digest must be validated   >Manifest - each digest may be validated   >Package - each referenced object should be the same after transforms   >are applied (e.g. this is like mirrors for the reference info)     Yes.     >A package may be used as a Object reference within a SignedInfo or   >Manifest, but then  only the digest of the manifest (and not the   >content itself is signed.      Yes.     >8. I might suggest adding in the security section (section 7), that in   >the X.509 case, the security also depends on the validity of the signers   >certificate chain, and that if any private key has been compromised the   >document signature is not dependable, so signature validation may only   >be the first step in a process to reduce the risk of depending on the  document.     I hope this is clear given the distinction in the definitions between  signature, core, and application validation in the latest draft.     >9. Section 1.3 refers to the XML namespace xmldsig-core, but the other   >namespaces (e.g. SHA1) include dsig-core. Are they intentionally different?     Well, given they have the same prefix, they are supposed to be seen as part  of the larger namespace. Given that XML-ns don't ascribe any semantics to  the URI, this is our own convention... One could use fragment identifiers  like RDF:            .../xmldsig-core#sha-1    but I think they ran into some problems with that. Would you suggest  something different?      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      In response to:    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/1999OctDec/thread.html#2  46    At 12:25 99/11/08 -0700, rhimes@nmcourt.fed.us wrote:   >We "must" sign the digest method and digest value (and type?) but I  believe it   >should not be a requirement for location or transforms to be signed.      We are not signing resources nor their URLs, we are signing a resource's  content that is "shown" when the URL (location) is dereferenced. To that  end, the DigestValue acts as the best location indepedent URI (identifier)  one could ask for. Consequently, this seems like a reasonable thing to do.  (But ...)     >Some   >applications may require these to be signed, so it should be an option.  Seems to   >me that logically, ObjectReference refers to Object which in turn should  allow   >the data format and location to vary without breaking the signature.  It is   >precisely the same data semantically, and that is what we should be  signing (a   >type of canonicalization). Forcing applications to freeze the location  will be a   >huge problem in the long run, IMO, even if it isn't a URL.  Likewise,  freezing   >the transform will be a problem for the longevity of the signature in some   >cases.  (I just realized that allowing location to change helps resolve  the ID   >conflict when documents are merged.)    However, it seems to me that we might be adding a fair amount of headache to  our specification to address a problem that is not ours to solve. I'm of  mixed feelings on the topic, but we are not tasked with designing ways of  referencing things in a "location indepedent globally unique, persistent"  manner.     >One way to do this is for the Transforms element of ObjectReference to  specify a   >transform on Object (rather than it's content), to allow exclusion of a   >location/transform within Object (transform is not currently specified in   >object).  I'd like this to be more natural though, by adding an attribute  to   >ObjectReference, for example.    You mean an exclude attribute? I'd prefer we remain consistent on that  point. Regardless ...    Consider an alternative in the "assertion about assertions" school of  philosophy. (I touched on some of these issues before in [2]). Since an  ObjectReference is merely a set of assertions, someone can make an assertion  that the content yielded from a new {URI,transforms) is the same as that of  an old one.    ObjectReference asserts the following:    Y.a ObjectReference with Identifier/Location "http://1" yields content  Y.b content when Transformed yields content'  Y.c content' when DigestMethod'd yields DigestValue    IF the nature of Y changes then anyone else can make a new statement and  sign that (and you can trust that based on your evaluation of that person's  trust-worthiness.)    Z.a ObjectReference with Identifier/Location "http://2" yields content''  Z.b content==content''    [2] http://www.w3.org/Signature/Drafts/xml-dsig-design-resources-990723.html      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 14:17 99/10/25 -0400, Ed Simon wrote:   >consider using it for <SignedInfo>.  However,   >if we expect   >that a significant number of applicatons will have   >to come up with their own canonicalization code,   >then we have to be wary of how complicated the   >canonicalization process becomes.    To restate this point, the question is how "standardized" (how well does the  spec read, how easy is it to write implementable/interoperable code from it)  will this feature be, and do we need to place its standardization on the  critical path. I feel more confident we can grapple c14n than we can  Xpath/Xptr/XSLT-dereferencing-processing-model in the short term, however I  don't believe either is an absolutely necessary feature that should be  required.    And the feature we are speaking of is I sign an XML document, it goes  through numerous intermediate processors who may re-arrange the namespaces  but otherwise don't change the content I signed, and my signature still  works. This is very useful, but I don't think it is critical since we can  orthogonally serve the community of people that don't need this feature  sooner rather than later.        _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      I forgot to include two references in the Requirements Document [1,2]. Not  all of [1] is relevant, but where I reference Tim's Web Axioms (very  relevant), this is a broader, more general description of the design  principles that the Director looks at in forthcoming specifications. This  document also references [2]. I include both in the required reading at [3].    [1] Tim Berners-Lee. Web Architecture from 50,000 feet. September 1998. Last  modified: $Date: 1998/11/15 20:54:36$. Status: An attempt to give a  high-level overview of the architecture of the WWW. Editing status: Draft.  Comments welcome   http://www.w3.org/DesignIssues/Architecture.html    [2] B. Carpenter, Editor: "Architectural Principles of the Internet"  Internet Architecture Board, June 1996, RFC1958.  ftp://ftp.isi.edu/in-notes/rfc1958.txt    [3] http://www.w3.org/Signature/Overview.html  _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      [I'll plug in Daniel's notes once he sends them.]    http://www.w3.org/Signature/Minutes/Irvine-Minutes.html                                              Editor: Joseph Reagle [5]reagle@w3.org     Authors: Milt Anderson, Daniel Woycke,  Joseph Reagle       August 30-31 1999 Face to Face Meeting       The following minutes capture points of discussion, consideration, and     action items resulting from the face-to-face meetings. Participants     should send the editor corrections; others on the mailing list should     suggest alternatives or document opposition to views/consensus     achieved in this meeting by 990910. Those issues in black are ones     that should still be investigated.         Attendance         Name Company     Joseph Reagle W3C     John Boyer UWI     Mark Bartel JetForm     Don Eastlake IBM     Milton Anderson FSTC     Shinsuke Honjo Hitachi     Ed Simon Entrust     Terry Hayes Netscape     Todd Vincent GSU     David Solo Citigroup     Barb Fox Microsoft     Rohit Khare UCI     Peter Norman FactPoint     Stephen Keung CIS, SC     Roberta D'Amico CSELT     Daniel W. Woycke MITRE       Monday, August 30      0900-1030 [6]Scenarios , John Boyer (Notes: Reagle)           * [7]Enveloped Internal Content            + Signature element is the root element. Doesn't need to be              supported directly, more elegant ways to do things.       * [8]Direct Envelopment            + Everyone's syntax does this, no worries mate.       * [9]Unenveloped Indirect Signature            + Application element is the root element.            + Encrypted hash is over the actual application element. (Want              it for symmetry in the enveloped case.) We need exclusion in              the Indirect since the signature is a child of the root              element.            + Conversation on when you exclude the signature, how you worry              about signing signatures.       * [10]Unenveloped Direct Signature            + Not a lot of support, but people think having the encoded              version is not hard. Don't need it just to avoid another              level of hashing. We do need to sign the original content,              but what about the original content plus other stuff?       * [11]Signing External Resources (Detached Signatures)            + [12]Signing Partial XML Documents              Boyer shows and argues that July XPointers (or more              specifically XPath) seemingly offers the              filter/select/exclude capabilities we need. When asked how              many people would expect to implement XPointers shortly, only              one person raised their hand. However, people do seem              comfortable in using a subset of Xpointer. Or can we just use              URIs to do what we need to do?  Not for selection in the              manifest, but perhaps in the core signature.              Norman: can we do this in a simpler way, with a dsig:exclude              attribute? Which requirements does Xptr meet that can not be              met through an easier method? Group: The insertion of              dsig:exclude is problematic when you have multiple              signatures, how does which signature know which dsig:exclude              belongs to it.              Boyer raises unrelated point that if the canonicalizer strips              out the DTDs, you won't know which attributes are IDs              anymore.              Norman: how do I seen pieces of documents that were not              structured with many names? With a dsig:target element one              can add to other documents to point out what it is you are              signing for poorly structured documents. But the removal of              these things happen before or after dsig (this affects the              nesting) -- just like in dsig:exclude. Reagle suggests you              could use XPtr as described, or take the document apply XSLT              to effect the transformation and sign both of them. (still              open)              dsig one-pass-processing: get feedback to people on              implementation side as to whether this is useful. (not clear              that there is additional utility.)             1015-1030 [13]Data Model, Joseph Reagle (Notes: Daniel Woycke)         [Insert Woycke's notes.]          [Reagle summary:]          Reviews his proposed data model, explains:      1. The goal is to make as much of the relationships between the         elements in our signature as explicit as possible, such that other         non-dsig applications could still derive interesting information         out of a signature, even if they don't care about signature         validity.             1030-1200 [14]Syntax and Processing Model (Notes: Milt Anderson and Reagle)         C14n will be dealt with this afternoon.          Notes for David Solo ---          Don plus discussion -- Distinguish between three levels.      1. Core signature syntax -- the syntax for creating a signature over         a set of bytes within the scope of the signature      2. Signed objects syntax -- how you sign referred to and signed         objects.      3. Application -- trust is in the application layer.              First Slide -- XML Syntax and Processing          ...          Second Slide -- General Issues       * Keyinfo compromise is to put the keyinfo at the top level outside         the scope of the signatures, and then put some added key         information in the signature for binding. This is not necessarily         a duplication of the keyinfo, since the application may wish to         bind different information into the signature.       * Putting keyinfo outside the scope of the signature was the         predominant application requirement. 97.44% of the cases according         to David Solo.       * Hayes -- felt that there are many cases where keyinfo should be         signed. We need to make it clear and explicit that key information         is allowed within the scope of the signature when the application         needs to put it there.              Third Slide -- General Structure.       * All "sigs" have been changed to "signature".              Fourth Slide -- signedinfo       * What are signedattributes? Could be signing time, key information         discussed above,       * Where does the signedobjectdata refer to an object that has been         already signed.       * Anderson wants signedattributes in order to simplify creation of         the signature element by security tokens in such a way that the         signedattributes are inserted automatically by the token device.         That way they have the security associated with the security and         tamper resistance of the token device, and don't depend on the         host systems security or on the integrity of the signer herself.         [Milt wasn't there for the second day, where we moved to removing         special attribute blocks, so Milt should weigh in on David's         latest proposal -- Reagle.]              Fifth Slide -- signedobjectdata       * Boyer: does this support enveloped? Response: signedobjectdata         always refers to an object, but the object may be within the scope         of the signature element. There is always indirection.       * References to signed objects can be to an object within signature,         to an object within the same document, or to an object in another         document.       * Transformations include c14n and encoding. It may also include         compression.       * Change signedobjectdata to signedobjectreference?       * May use a default c14n and hashing algorithm or inherit the ones         from the computation over signedinfo.              Sixth Slide -- algorithms       * Currently there is no definition of the Identity c14n. This is not         c14n plus fixing up CRLF and charset.       * Null and Identity c14n are specific to digsig and are for the         point to point application. The case of unique production of a         canonicalized output of the DOM is in the "more extensive" c14n         algorithm, as is the Syntax WG's proposal based on InfoSet.       * Question about whether hash and signature algorithm should be         combined and whether the dual signature should be combined in a         single type. The parties would need to have the combined hash/sig         algorithms and the combination of signing capabilities. When a         combination of signatures is used, then the signaturevalue is sent         to the appropriate combined algorithm. It simplifies processing to         not have the discrete combinations of algorithms visible at the         core syntax level.              Seventh Slide -- keyinfo types       * Hayes: multiple keys are required for multiple signatures. Then we         have multiple instances of certs in keyinfo.              Eighth Slide -- Eye test and example          Ninth Slide -- Open Issues       * Do we always go forward with signedobjectdata being a reference?         Advantage is that signature can always be calculated over         signedinfo and doesn't matter whether the object is inline or         outside. Canonicalization of singed info may have to take into         account that the reference may be a URI or an ID depending on         whether the referenced object is external or internal.       * Is there only one or more than one instance of signedobjectdata in         signedinfo?       * attributedata and keyinfodata are candidates for promotion to the         next level and the corresponding wrappers might be eliminated.?       * Long discussion regarding whether it was necessary for the         signature core to chase down and verify the hash of the object         referenced?       * Is it possible to have a manifest where the URIs are not signed,         therefore allowing to move the referenced objects.              [Reagle's addition summary of this discussion.]       * solo: the benefit of the indirection is:           1. switching: could refer (depending on how you reference it) an              object that is external or internal, and signature wouldn't              break. reagle: I dispute this, if they have different URIs              they are different things, unless there is a statement of              identity.           2. transformations: keeping it external means one can have one              single c14n over the signedinfo, that are indistinct of the              content transformations (no nesting/multiple-c14n)       * Fox: will XML content be too small sometimes (particularly if         signature is also over siginfo, pretty static information) in         order to permit a dictionary attack, do we need padding and salt?         Solo: jokes XML is never small. Should investigate.              [Reagle summary of Open Issues from Syntax:]          [The resolution to many of these issues will be reflected in the     [15]next draft Solo will send since we went back and forth on some of     this stuff quite a lot.]      1. signature attributes: if we have signature semantics and include         it in <signature-attributes> they must be relevant to the         cryptographic signature, nothing about the signed object itself.         Semantics about the object should be in maninest attributes (or         reagle argues in a new signed object see [16]tomorrow's discussion         where both types of attributes are removed.)      2. signed object ref (data), should we limit it to one? Go with one         with caveats that it must make sense in a DLG (can someone else         sign your signature attributes?).      3. algorithms (crypto/hash): mandatory, recommended, optional      4. c14n, syntax WG, null and simple/minimal c14n      5. exclusion/xptr. the dsig:exclude declaration, which signature does         it belong to?           1. <X dsig:exclude> ...</X> everything is hashed and signed, now              someone adds a           2. <Y dsig:exclude> ...</Y> it will get rendered differently,              but not break the signature because other applications won't              know the dsig:exclude semantic.         John, in XFDL had something that did it differently, but not any         easier. consensus that we should bite the bullet and use XPtr in a         limited way as possible. Need to check if XPtr returns the whole         resource and a view, or a different resource (check the DOM that         is returned.) Are we better off use XML with XPtr to select or XML         with XSLT? Boyer: they are supposed to be converging with XSLT ->         XPtr -> XPath as ordered in terms of complexity.         Consensus. The reference from SignedInfo will just be a URI. This         can then point to a manifest or package which can use         Xlink/Xptr/Xpath as appropriate. This means you don't have to         worry about Xptr in the core signature syntax.         Question: Are things like c14n, encoding, XSLT, etc., ordered or         non-ordered? <transformations> is an ordered list.      6. Which crypto algorithms do we choose and mandatory to implements         and defaults? Also need to include security requirement such as         avoiding Phillip's downgrade attack mentioned on the list.         Need to references specs, define algorithm, take from Brown.         hash: SHA-1 (mandatory), MD5 (recommended) AES-H (keep an eye out)         MAC: HMAC-SHA1 (recommended), HMAC-MD5 (optional)         PK Signature: DSS=DSA with SHA-1 (mandatory); RSA with SHA-1         (recommended); RSA with MD-5 (optional); ECDSA (coming along)         Key Agreement: DH (optional) as defined/specified in the keyinfo         block.      7. Do you do combined signature types, or have two different         signatures? reagle: if they are two different signatures, can make         statements about each. Solo: could do it either way. Discussion:         why you might choose one or the other. Solo: it'll be clearer when         we go to implement.      8. Definition: encoding is arbitrary ways to represent a set of         characters; c14n is one particular representation of multiple         permissible representations.           1. Null (mandatory)           2. Minimal (mandatory) CR/LF, encoding, UTFF-8,           3. Minimal':  white space handling?           4. DOM (optional)           5. SyntaxC14N (optional)         Boyer: we use the "<?" at the beginning of the document to         determine the encoding, but what if we only have a part of an XML         document? Reagle: good question!         Action item: Ed Simon, find someone to do minimal c14n.  Milt will         propose whitespace handling.         Action item: Don poke on a specification of DOM-c14n (right now it         is wrapped in DOM-HASH. (Boyer, would DOM-c14n do attribute sorts         and white space handling?)           Tuesday, August 31       Regrets: Barb Fox, Milt Anderson,         900-1015 Wrap Up of Syntax           * Peter Lipp's object location proposal on the list is accepted.             1030-11 Requirements          1. add security requirements.      2. Don and ? has a few comments will send to list.             1100-1200 Signature Semantics (Notes: Reagle)         Rohit: point of clarity: a signature on a manifest may very well     validate, while the manifest  (assertions) do not -- these are     distinct things.          Manifest is a collection of things, you need not validate.          Package is a collection of things, plus assertion of identity between     them.          Manifest and Package. Do we define attributes given a reference     stating the references should be fetched and validated? Or is it part     of the definition?          Reagle: argues against permitting external semantics to be introduced     into our definition through ambiguous manifest-attributes (Whether     those references are confirmed is up to the application.) Others can     define their own threshold XML application     <someoneelse:threshold>...</threshold> or make a statement about the     dsig:manifest using something like RDF.          First, a non-dsig application isn't going to know what the     relationship between manifest and man-attributes is, have to read the     spec.            <dsig:manifest id="1">         <signed objectref/>         <signed object/>         <man-attributes/>       </dsig:manifest>            However, if man-attributes is merely a signed-object with defined     policy assertions that reference "1", relationships are much more     exlplicit.          Second, lets avoid things like:            <dsig:attribute type="CDATA" and value="CDATA"/>            Make people introduce a new qualified namespace element with clearly     defined semantics, or make a statement about an existing resource.          Solo and consensus.: reconsideration on signedattributes,     signedattributes are merely a signedobject, referenced by the     signedobject reference. the signedobjectreference has a t ype     describing if its a manifest, package, signedattributes. Same with     manifest attributes but at a lower level.          Todd: we need a good way of binding the XML, style sheets, schemas,     and DTDs. Group members may work on a paper addressing the legal     issues of this and potential package requirements but not critical     path.         1030-1100 Scheduling and Allocating future documents and con calls         Calls now on Thursday on Noon.          CP (critical path), ST (standards track)       * Requirements (Reagle). CP       * Core Syntax (Fox, Solo, Brown). CP, ST       * Manifest & Package Application Defn. (Vincent). ST to be         integrated into other docs.       * Algorithm Definitions. (Bartel) CP, ST       * Scenarios (Boyer) to be integrated into other docs.       * Implementation (Simon) CP. will start playing with implementations         as soon as feasible, might propose how to do interop.             1300-1400 Marketing and Promotion         Once we have something we are comfortable with, we need to get on XML     sites and get people talking on XML-dev. Might have a marketing plan.    References       1. http://www.ietf.org/     2. http://www.w3.org/     3. http://www.w3.org/Signature/Overview.html     4.  http://cgi.w3.org/cgi-bin/html2txt?url=http://www.w3.org/Signature/Overview.h  tml     5. mailto:reagle@w3.org     6. http://www.w3.org/Signature/Drafts/xmldsig-scenarios-990818.html     7. http://www.w3.org/Signature/Minutes/Irvine-Minutes.html#one     8. http://www.w3.org/Signature/Minutes/Irvine-Minutes.html#EnvelopedDirect     9.  http://www.w3.org/Signature/Minutes/Irvine-Minutes.html#UnenvelopedIndirect    10.  http://www.w3.org/Signature/Minutes/Irvine-Minutes.html#UnenvelopedDirect    11. http://www.w3.org/Signature/Minutes/Irvine-Minutes.html#three    12. http://www.w3.org/Signature/Minutes/Irvine-Minutes.html#Four    13. http://www.w3.org/Signature/Drafts/xml-dsig-datamodel-990823.html    14.  http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/1999JulSep/thread.html#1  46    15.  http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/1999JulSep/0244.html    16.  http://www.w3.org/Signature/Minutes/Irvine-Minutes.html#Signature_Semantics                  _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 12:15 9/7/2000 -0400, Donald Eastlake 3rd wrote:    ><code>DigestMethod</code> or <code>DigestValue</code> sub-element and  >presence of the <code>URI</code> and <code>Type</code> attributes is  >mandatory.    We still have to deal with the mandatorines of that attribute. That means   people HAVE to come up with a type. Is this intended? We only specify a   subset of key types. Consequently people will come up with other types (that   is fine) or throw dummy text in there which seems like a bad thing if they   want to rely upon type information found elsewhere.    _________________________________________________________  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 12:05 99/12/17 -0800, John Boyer wrote:   >At this point, it became clear to me that the real problem here is that the   >default should be to verify 'everything' that the signer signed,     This is the default for core validation.      >BTW, some have said that we are venturing too far into application land.   >Firstly, this argument seems to be whipped out only when it is convenient.   >For example, IDREF is a mistake but was added so that certain applications   >could function without using an XPath transform.    I don't believe there was much opposition at the time and I liked it because  I was more confused with the treatment of URIs, mimetypes, and  fragment-identifiers than with the need to use (or not) XPath. This is one  of the design features I expect to get feedback on from the wider  communities. I believe you now think it is a mistake (and I might've missed  a post if you posted your argument to the list) saying why you think so, but  the cases are different.     >hesitation is being fairly applied to all scenarios.  Secondly, I think  that   >some are thinking too heavily about core behavior being restricted to   >signing a preconstructed bucket of bits, and this seems to be forgetting   >that a very large part of our mandate is to robustly sign XML.     I agree we have this bias (and I think it's been present from the start so  as to err on the side in terms of comprehension, security, and limiting our  dependencies on other specs.)     >Finally, I also don't find it to be a satisfying argument that we shouldn't   >make changes because vendors are already implementing this.  It is a  working   >draft, and that is the risk one takes when implementing a working draft.    I agree, our TR states, "This is a draft document and may be updated,  replaced or obsoleted by other documents at any time." However, in August I  mentioned how if we were to complete in time, we had about 4-6 weeks of  conceptual design time left, then 4-6 weeks of implementation experience  time. The way I think of those two phases is    conceptual time: try to address the requirements as elegantly as possible on  paper.    implementation time: improve exposition and make design changes if it is  quite clear that implementation experience yields knowledge that a mistake  was made.    I should've done a better job of documenting this, and mini-milestones along  the way, but I do think it is safe to say that we are now in the later  phase. Consequently, for a change to be made, the WG has to do the best it  can with the design decisions in the past unless its clear things can be  easily remedied and agreed to by the WG.        _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      What do you mean by unfinished document? (I think I'm getting the gist, and  with the C example you seem to be referring to the language completeness v.  expressitivity issue...)    Is an unfinished document a document that does not have va syntax required  by the specified grammar of its schema definition?    At 08:53 99/09/14 -0700, John Boyer wrote:   >The common language usage of the term closure is   >as a noun for the act of closing or finishing (e.g. "We would like closure   >on this specification process as soon as possible").   >   >The current XFDL filters are designed to specify the precise conditions   >necessary to close or finish a document.  Thus, if person A signs an   >unfinished document, then the signature filters can be set up to describe   >precisely what is allowed to change after Person A's signature in order to   >achieve closure on the document.    ...   >Since application   >designers are able to define part of the language that is being signed (the   >keywords used by their brand of XML), our task is simply to provide   >mechanisms that allow secure signatures to be created regardless of the   >particular well-formed XML grammatical constructs that are selected by the   >application designer.  Otherwise, we are deciding to sign a subset of   >well-formed XML and must go to the trouble of defining that subset and then   >considering whether the subset is sufficiently powerful   >to express the types of signatures that the community at large will need to   >create.    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 12:12 PM 6/13/00 -0400, tgindin@us.ibm.com wrote:   >     The two changes have distinct purposes.  First, and less   >controversially, the wording you suggested does NOT clearly rule out pure   >digest algorithms as cryptographic signatures.    Thank you guys for helping push and resolve this ambiguity. Given the weight  of the text in the requirements document [1] and the spec [2], and  subsequent discussion I think we can agree that the intent is to preclude  the above. In the interest of clarity, I recommend an amendment to Barb's  proposed text:    "This specification defines a set of algorithms, their URIs, and  requirements for implementation. In general, requirements apply to  implementations, not to signature use. However, this specification REQUIRES  /+the use of +/ cryptographic SignatureMethods /+and key(s)+/ for  SignatureValue generation and verification. Other authenticators  (electronic, biometric, etc.) may be included ONLY as a supplement to the  cryptographic signature via the SignatureProperty element type."    I include /+the use of +/ so as to not mislead readers to think the key must  be present in the syntax as that is optional.      >Second, my wording leaves open the question of   >whether a subsequent version will or will not support manually verifiable   >signatures, rather than leaping to a conclusion on the subject.    As we discussed out-of-band, there was a slight disconnect in our usage of  the term versions, with it being out of scope in both <smile>:    A. Version as the different status levels (proposed, draft, internet /  candidate, proposed, rec). Because of the joint nature, this WG has been  atypically aggressive in not permitting optionality or future  reconsideration. Instead we ask: is this in keeping with our stated  requirements and dependencies and does anyone plan to implement this soon?  We've been doing our best to write the spec based on that which has already  been captured in the requirements, implemented and as if we expected it to  be a standard tomorrow.    B. Version as in other namespaces/activities/specs. It is my sincerest hope  that when this spec is done, this WG will end. Others can easily use our  syntax and schema by importing it into their own under their own namespace.  If it turns out that namespace for 'electronic signatures' and its  element-types become immensely successful so be it, but the good result is  we don't have to have that argument here.    __    [1] http://www.w3.org/TR/1999/WD-xmldsig-requirements-19991014.html  2.3 The meaning of a signature is simple:  The XML-signature syntax  associates the content of resources listed in a manifest with a key via a  strong one-way transformation.   2.5 The specification must only require the provision of key information  essential to checking the validity of the cryptographic signature  3.3.1 The specification must permit arbitrary cryptographic signature and  message authentication algorithms, symmetric and asymmetric authentication  schemes, and key agreement methods.   [2] http://www.w3.org/TR/2000/WD-xmldsig-core-20000601/  4.3.2 The SignatureMethod Element  SignatureMethod is a required element that specifies the algorithm used for  signature generation and validation. This algorithm identifies all  cryptographic functions involved in the signature operation ...  6.1 Algorithm Identifiers and Implementation Requirements  For example, a SignatureMethod is implicitly given two parameters: the  keying info and the output of CanonicalizationMethod.   6.1 Algorithm Identifiers and Implementation Requirements  [digest and signature algorithms are distinguished]      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 04:42 PM 6/23/99 +0200, Ramzi GUETARI wrote:   >For example, if you press only the Alt key, the File Menu will   >be automatically activated. To avoid that, we have to "disable"   >the shortcuts automatically associated with the system menu.    Understood. However, I remapped them to the ctrl key, so there should be no  conflict, right? Oddly, when I remap them back to alt keys they work again:    Alt <Key>=:ZoomIn()  Alt <Key>-:ZoomOut()  ...  Alt <Key>1:     CreateHeading1()  Alt <Key>2:     CreateHeading2()  ...    However, the spelling and multisequence continue to not work, for this  reason, or perhaps another reason...    Ctrl <Key>l, Ctrl <Key>d:CreateDefinitionList()  Ctrl <Key>l, Ctrl <Key>o:CreateNumberedList()  Ctrl <Key>l, Ctrl <Key>u:CreateList()  <Key>F6:    SpellCheck()     _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 22:24 7/6/2001, Dournaee, Blake wrote:  >Thank you very much for this information.    Note, it's a more verbose restatment (with examples) of what is already said   in the spec:    http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html#sec-See        Some applications might operate over the original or intermediary      data but should be extremely careful about potential weaknesses      introduced between the original and transformed data. This is a      trust decision about the character and meaning of the transforms      that an application needs to make with caution. Consider a      canonicalization algorithm that normalizes character case (lower to      upper) or character composition ('e and accent' to 'accented-e'). An      adversary could introduce changes that are normalized and      consequently inconsequential to signature validity but material to a      DOM processor. For instance, by changing the case of a character one      might influence the result of an XPath selection. A serious risk is      introduced if that change is normalized for signature validation but      the processor operates over the original data and returns a      different result than intended.    >As an aside, there is one other thing that puzzled me regarding XML dsig. In  >one of the examples that you used below, you mentioned Base64 as an encoding  >transform.    That's a mistake. &disg;#base64 is a decode transform, there's no URI yet   for an encode algorithm as there isn't much use for such a thing besides   examples! <smile/> If there was an base64-encode URI, it would be different   than the one I gave.      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 17:56 6/17/2001, Philippe Le Hegaret wrote:  >Steven Champeon wrote:  > > And in any case, I fail to see how a test suite of any kind would put  > > the fear of GNU into anyone writing proprietary software, as I am not  > > aware of any arguments to be made in favor of building the test cases  > > - and code to run them - directly into the proprietary software  > > packages in question.  > >  > > Can Philippe shed some light on how a DOM test suite released under  > > the GPL could possibly cause any problems with proprietary software?  > > I'm sure I'm just being thick here and missing the obvious.    I'm missing some of the context of this discussion, but I can speak to the   FAQ [1]. As stated, software released under the W3C software license can be   used with GPL software or proprietary software. Very straightforward.    [1] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#GNU    If the question is how the W3C license differs from copyleft, like many open   source licenses, the critical difference is with respect to GPL 2b: "b) You   must cause any work that you distribute or publish, that in whole or in part   contains or is derived from the Program or any part thereof, to be licensed   as a whole at no charge to all third parties under the terms of this   License." [2] The GPL is more restrictive than the W3C license with this   "viral" item. The W3C is no more restrictive than GPL (you don't have to do   anything that the GPL also doesn't make you do), and that's why it's   compatible: derivative works can be redistributed under GPL or other (even   proprietary) licenses as long as the original W3C license is followed.    Yes, there are questions of what "can be reasonably considered independent   and separate works in themselves" [2] under GPL, and options for choosing   LGPL, but I'm not sure how that's relevant.    The W3C chose to have a non-copyleft type open source license, like many   others, and that's what we release software and test suites under, and what   we'd require submissions to permit, so perhaps someone could restate the   problem/question for me? (I'm not interested in copyleft versus open/free   licenses debates if that's the question! <smile/>)      [2] http://www.gnu.org/copyleft/gpl.html    --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 10:38 00/01/04 -0800, John Boyer wrote:   > However, URI="" has no scheme, so presumably the   >application is being asked to provide the document's bytes, and presumably   >it will do so in an application-specific way.     Also, not all URIs include a scheme that designates ways of providing a  document's bytes (for instance, URN or UUID).     >Currently, URI="" cannot be used without some kind of transform to exclude   >SignatureValue.  Since the XPath transform is currently written in such a   >way that W3C c14n is required, there will be no problems.  However, it  would   >seem that any transform (such as XSLT or Java) that takes URI="" as input   >will have a problem.  This is why we must still consider the URI=""  problem.   >One simple solution would be to eliminate all transforms other than c14n,   >base64 decode, xpath and xpointer.    However, these might be useful transforms for a 'URI-reference' [1].  Furthermore, they still might be useful if you do an XPath and XML c14n  (canonicalization) _first_.  Or maybe in the java example, the java code  c14n'izes and removes the signature elements itself. Consequently,  disallowing them in this particular case doesn't seem ecessary.    [1] URI-reference = [ absoluteURI | relativeURI ] [ "#" fragment ]      http://www.ietf.org/rfc/rfc2396.txt    However, the status of the URI and IDREF was 'lets put it in there, and see  what sort of response we get.' No one seems to be a huge fan from an  elegance point of view. The two options we had of proceeding were as follows:    a. (absoluteURI | relativeURI) and IDREF  b. (URI-reference) and no IDREFs    (We constrained ourselves so we'd have a single consistent way of doing  something). I'm beginning to think the right interpration would've been B.  (Partly because I don't think we can define a 'clean URI' (without a  fragment) that anyone will pay attention to. The uri schema datatype isn't  defined that way.) No attribute should be definied as an IDREF, instead it  should be defined as a URI. However, this still means that someone can  specify an XPath or an XPtr as part of the URI and also have one as part of  a transform. The consequence of this would be to return to a target  attribute of type attribute, but I'm curious to hear other thoughts.    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Ok, so I've tweaked that section as follows:    4.4.4 The X509Data Element  ...  An X509Data element within KeyInfo contains one or more identifiers of keys   or X509 certificates (or certificates' identifiers or revocation lists).   Five types of X509Data are defined  1. The X509IssuerSerial element, which contains an X.509 issuer   distinguished name/serial number pair that SHOULD be compliant with RFC2253   [LDAP-DN],  2. The X509SubjectName element, which contains an X.509 subject   distinguished name that SHOULD be compliant with RFC2253 [LDAP-DN],  3. The X509SKI element, which contains an X.509 subject key identifier value.  4. The X509Certificate element, which contains a Base64-encoded [X509v3]   certificate, and  5. The X509CRL element, which contains a Base64-encoded certificate   revocation list (CRL) [X509v3].  ...    REFERENCES  ...  [X509v3]  ITU-T Recommendation X.509 version 3 (1997). "Information Technology - Open   Systems Interconnection - The Directory Authentication Framework"  ISO/IEC   9594-81997.    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        I'm interested in the RSA Conference series. Could you please point me to  an accessible version of the conference information and registration? By  this I mean a page that doesn't require javascript and macromedia flash, a  page that is accessible to the disabled, those on PDAs or text browsers,  and those that use standard technologies? Thank you.        

      At 15:34 9/20/2000 +0100, merlin wrote:  >I could accept #1 if the spec provided a precise but  >simple pseudocode algorithm for determining whether  >a URI is relative or not. Are URIs always URLs?    This is an interesting point I hadn't considered, that #1 requires you to   add code to determine if it is an absolute URI. The pseudo-code should be   based on the absolute URI definition.    "To be defined, the name space node value must meet the following production   rule from [URI, section 3]:      <scheme>://<scheme-specific-part>  A namespace node value which does not meet this production rule is undefined   -- and it consequently can not be canonicalized by this specification."    [URI] http://www.ietf.org/rfc/rfc2396.txt    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 14:20 00/02/21 +0100, Gregor Karlinger wrote:   >I think the DTD given in section 4.5 is incorrect (at least it contradicts  the   >Schema definition):   >   >  <!ELEMENT Object (#PCDATA) >   >   >Is a understand the text of section 4.5, the Object element can also  encapsulate   >any XML markup. Therefore the content model must be ANY instead of  (#PCDATA).    Ed is correct about the statement regarding ANY. (ANY = element types within  the DTD). Consequently, we use #PCDATA. XML1.0 does permit MIXED content  models:            An element type has mixed content when elements of that type           may contain character data, optionally interspersed with child           elements. ...          <!ELEMENT p (#PCDATA|a|ul|b|i|em)*>          <!ELEMENT p (#PCDATA | %font; | %phrase; | %special; | %form;)* >          <!ELEMENT b (#PCDATA)>          http://www.w3.org/TR/REC-xml#sec-mixed-content    Such that we could do the following:          <!ELEMENT SignatureMethod ((#PCDATA | HMACOutputLength)*) >          <!ELEMENT Object ((#PCDATA  | SignatureProperties | Manifest)*) >          <!ELEMENT KeyValue  ((#PCDATA | DSAKeyValue | RSAKeyValue )*) >    However, while I can get XMetalPro to compile and validate instances with  that declaration, I can't get IE (and I'm not sure if my declaration is bugg  or not ...) so I avoid them. I will add some structure to the schema to make  what is going on more clear though:    <element name='KeyInfo'>     <type content='elementOnly'>      <group order='choice' minOccurs='1' maxOccurs='*'>         <element name='KeyName' type='string'/>   <element ref='ds:KeyValue'/>   <element name='RetrievalMethod' type='uri'/>   <element ref='ds:X509Data'/>   <element ref='ds:PGPData'/>   <element name='MgmtData' type='string' minOccurs='0' maxOccurs='1'/>  <any />      </group>      <attribute name='Id' type='ID' minOccurs='0' maxOccurs='1'/>     </type>   </element>    <element name='KeyValue'>    <type content='mixed'>      <element ref='ds:DSAKeyValue'/>      <element ref='ds:RSAKeyValue'/>      <any />    </type>  </element>          _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Done:          http://www.w3.org/Signature/2001/04/05-xmldsig-interop.html          $Revision: 1.22 $ on $Date: 2001/06/19 21:50:01 $    We now have 9 reported implementations!    At 15:34 6/18/2001, Dournaee, Blake wrote:  >Interoperability Results for RSA Security's Cert-J 2.0  >  >W3C XML Signature Interoperability Requirements:  >  >merlin-xmldsig-sixteen.tar.gz   Keyword   Cert-J  >------------------------------------------------  >Detached Signature              MUST      Y1  >  >Enveloping Signature: same  >document reference with  >fragment (URI="#Object1")       MUST      Y1  >  >Enveloped Signature: same  >document reference (URI="")  >with Enveloped Signature  >Transform.                      MUST      Y1  >  >SignatureValue generation/  >validation                      MUST      Y1  >  >Manifest DigestValue  >generation/validation           MAY       Y1  >  >Feature: laxly schema valid  >Signature element generation    MUST      Y1  >  >XPointers '#xpointer(/)'        SHOULD    N  >  >XPointers '#xpointer(id("ID"))' SHOULD    N  >  >XPath                           SHOULD    Y1  >  >the dsig XPath 'here()'  >function (can be used to  >implement enveloped signature)  SHOULD    Y1  >  >XSLT (note, the child XSLT  >element of Transform has been  >deprecated.)                    MAY       N  >  >RetrievalMethod (e.g., X509Data)SHOULD    Y1  >  >  >merlin-xmldsig-sixteen.tar.gz   Keyword   Cert-J  >------------------------------------------------  >Digest SHA1                     MUST      Y1  >Encoding Base64                 MUST      Y1  >MAC HMAC-SHA1                   MUST      Y1  >Signature DSAwithSHA1           MUST      Y1  >  RSAwithSHA1                    SHOULD    Y1  >Canonicalization minimal        SHOULD    N  >  Canonical XML (20010315)       MUST      Y1  >  Canonical XML with comments    SHOULD    Y1  >Signature Transform Enveloped  >Signature                       MUST      Y1  >  >merlin-xmldsig-fifteen.tar.gz         Cert-J  >----------------------------------------------  >signature-enveloped-dsa.xml           Y1  >signature-enveloping-b64-dsa.xml      Y1  >signature-enveloping-dsa.xml          Y1  >signature-enveloping-hmac-sha1-40.xml Y1  >signature-enveloping-hmac-sha1.xml    Y1  >signature-enveloping-rsa.xml          Y1  >signature-external-b64-dsa.xml        Y1  >signature-external-dsa.xml            Y1  >  >  >Blake Dournaee  >Toolkit Applications Engineer  >RSA Security  >  >"The only thing I know is that I know nothing" - Socrates  >  >      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 06:11 6/19/2001, Harada wrote:  >Could you update the following matrix?    Updated, please see:    http://www.w3.org/Signature/2001/04/05-xmldsig-interop.html      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 11:26 AM 6/5/00 +0300, Petteri Stenius wrote:   >Chapter 4.3.3 of [1] reads:   >   >"[URI] permits identifiers that specify a fragment identifier via a   >separating number/pound symbol '#'. (The meaning of the fragment is defined   >by the resource's MIME type). XML Signature applications MUST support the   >XPointer 'bare name' [Xptr] shortcut after '#' so as to identify IDs within   >XML documents. The results are serialized as specified in section   >6.6.3:XPath Filtering. For example,"   >   >   >My interpretation of 2.1.1 is that there is *no* default serialization or   >canonicalization algorithm. But reading 4.3.3 would suggest that XPath is   >used by default.     Hi Petteri. There was a time when I advocated "clean-URIs" such that if  anything beyond merely dereferencing a URI via its protocol scheme was  needed, it had to be explicitly represented in a transform. But there's no  such thing as a 'clean-URI' so we support URIs with fragment identifiers.  When the dereferenced object is XML, that means it's an XPtr expression. We  REQUIRE implementations to support the 'bare name' [1], which is a short  hand of the XPath id() function [2].    So generally speaking there is no default transforms. BUT, if a fragment  identifier is used within a <Reference URI="..."> that identifies an XML  resource, that means XPtr processing is done and the results need to be  serialized according to 6.6.3 [3]. Note, not all XPtr expressions that might  fit in the URI will be supported by Signature applications.    I don't find the fact that people are specifying transforms in the URI to be  very 'clean' but at least it's consistent with the rest of the world (or so  I'm told <smile>). That's why we recommend:            Regardless, such fragment identification and addressing           SHOULD be given under Transforms (not as part of the URI)           so that they can be fully identified and specified. For instance,           one could reference a fragment of a document that is encoded           by using the Reference URI to identify the resource, and one           Transform to specify decoding, and a second to specify an           XPath selection.          http://www.w3.org/TR/xmldsig-core/#sec-Reference    Is this agreeable to your reading? Should we change the text to make  something clearer?    [1] http://www.w3.org/TR/xptr#synth-2.1.2  [2] http://www.w3.org/TR/xpath#section-Node-Set-Functions  [3] http://www.w3.org/TR/xmldsig-core/#sec-XPath    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      I accidently ommitted the response from Thomas Maslen DSTC (one of the   implementors in the matrix) from my informal tally:    Maslen: option 2 required preferred         http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/0297.html    >Boyer: option 2 with many caveats  >    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/0304.html  >Geuer-Pollmann: I vote for option 2 - Recommended.  >    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/0299.html  >Mark Bartel: option 2 and REQUIRED.  >    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/0303.html  >Brian LaMacchia: option 1  >    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/0310.html  >Gregor Karlinger: option 1  >    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/0311.html        --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 13:38 99/10/28 -0700, Jim Schaad (Exchange) wrote: > Leave   >><ObjectReference Location="<http://www.ietf.org>http://www.ietf.org"> as   >>is.    >I must have   >missed something someplace -- When did location become an attribute   >rather than an element?     Hi Jim, thaks for paying careful attention to the notes!    I proposed it (a HREF) as way of trying to to come up with some conventions  for syntax usage [1]. Also, it is a more typical way of using links,  particularly in the XLink context. Don proposed that we then move all URIs  into attributes [2]. There wasn't much disagreemnt to this convention on the  list or calls. Today's call was to confirm what we wanted to do with it:    [Agenda]    Leave an attribute but change name to HREF?    Make an element with an HREF attribute?    Make an element with URI content?    So my note-takers comment of "leave as is" was biased in that it was from  the perspective of my proposal, but you are right, from the perspective of  anyone else, this is a change. I've tweaked the notes to show this. (And of  course, if you oppose the change now is certainly a good time to say so.)    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/1999OctDec/0073.html  [2] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/1999OctDec/0082.html    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      In light of our recommending {Only What is "Seen" Should be Signed} AND  {"See" What is Signed} I have a question now that we have some more  implementation experience. When the document [1] below is signed, what is  Signed? If a PI references a style sheet, this could change the meaning of  the document being signed, is this change also signed?    1. If the document has Canonical XML applied, is the Infoset availble  through DOM/SAX that of the example XML instance with a PI Infoset node, or  the resulting (transformed) instance? If the infoset includes the changes,  we can easily satisfy the security requirements above be recommending  canonicalization.  2. Otherwise, we'd have to recommend that 'http://foo.example.com/bar.xslt'  also be included in a Signature Reference if we  want to get bit by having  foo.example.com changing the stylesheet to affect the result after the  signature.    [1] Example (where bar.xslt changes the total amount value)  <?xml-stylesheet type="text/xml" href="http://foo.example.com/bar.xslt"?>  <html xsl:version="1.0"        xmlns:xsl="http://www.w3.org/1999/XSL/Transform"        xmlns="http://www.w3.org/TR/xhtml1/strict">    <head>      <title>Expense Report Summary</title>    </head>    <body>      <p>Total Amount: 5</p>    </body>  </html>    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Ok, result shown in Editors' copy:    http://www.w3.org/Signature/Drafts/WD-xmldsig-core-latest/Overview.html#sec-X509Data      At 17:51 9/7/2000 -0400, Donald E. Eastlake 3rd wrote:    >I haven't wrapped the text because I wasn't sure what the best width  >was but white space is ignored in Base64 so spaces and new lines can  >be inserted withough effecting the encoded certifciates.  This is the  >data provided by Tom Gindin.  >  >Thanks,  >Donald  >  ><h3>4.4.4 The <a id="sec-X509Data"  >name="sec-X509Data"><code>X509Data</code></a> Element</h3>  >  ><p><u>An <code>X509Data</code> element within <code>KeyInfo</code>  >contains one or more identifiers of keys or X509 certificates (or  >certificates' identifiers or revocation lists).</u>  Five types of  ><code>X509Data</code> are defined:  >  ><ol>  >   <li>The <code>X509IssuerSerial</code> element, which contains an  >   X.509 issuer distinguished name/serial number pair that SHOULD be  >   compliant with <u>RFC2253 [<a href="#ref-LDAP-DN">LDAP-DN</a>]</u>,  >   </li>  >   <li>The <code>X509SubjectName</code> element, which contains an  >   X.509 subject distinguished name that SHOULD be compliant with  >   <u>RFC2253 [<a href="#ref-LDAP-DN">LDAP-DN</a>]</u>, </li>  >   <li>The <code>X509SKI</code> element, which contains an X.509 subject key  >   identifier value.</li>  >   <li>The <code>X509Certificate</code> element,  >   which contains a Base64-encoded X.509v3 certificate, and</li>  >   <li>The <code>X509CRL</code> element, which contains a  >   Base64-encoded X.509v2 certificate revocation list (CRL).</li>  ></ol>  >  ><p>Multiple declarations about a single certificate (e.g., a  ><code>X509SubjectName</code> and <code>X509IssuerSerial</code>  >element) MUST be grouped inside a single <code>X509Data</code>  >element; multiple declarations about the same key but different  >certificates (related to that single key) MUST be grouped within a  >single <code>KeyInfo</code> element but MAY occur in multiple  ><code>X509Data</code> elements.  For example, the  >following block contains two pointers to certificate-A (issuer/serial  >number and SKI) and a single reference to certificate-B  >(SubjectName) and also shows use of certificate elements:</p>  >  ><pre class="xml-example">   <KeyInfo>  >      <X509Data> <!-- two pointers to certificate-A -->  >        <X509IssuerSerial>  >          <X509IssuerName><span class="tx">CN=TAMURA Kent, OU=TRL,   > O=IBM,  >            L=Yamato-shi, ST=Kanagawa, C=JP</span></X509IssuerName>  >          <X509SerialNumber>12345678</X509SerialNumber>  >        </X509IssuerSerial>  >        <X509SKI>31d97bd7</X509SKI>  >      </X509Data>  >      <X509Data> <!-- single pointer to certificate-B -->  >        <X509SubjectName>Subject of <u>Certificate   > B</u></X509SubjectName>  >      </X509Data> <!-- certificate chain -->  >        <!--Signer cert, issuer C=US,O=IBM,OU=FVT,CN=arbolCA serial   > 4-->  >   ><X509Certificate>MIICXTCCAcagAwIBAgIBBDANBgkqhkiG9w0BAQUFADA7MQswCQYDVQQGEwJVUzEMMAoGA1UEChMDSUJNMQwwCgYDVQQLEwNGVlQxEDAOBgNVBAMTB2FyYm9sQ0EwHhcNMDAwODI0MTkyNTUyWhcNMDEwODI0MTkyNTUyWjBLMQswCQYDVQQGEwJVUzEMMAoGA1UEChMDSUJNMQwwCgYDVQQLEwNGVlQxIDAeBgNVBAMTF1RvbSBHaW5kaW4gRnJvbSBTdWJqZWN0MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQD8C6/lRE65Okdr2/zKWzpF+wq98pyi0beJdq9vVDh8pz88NSLpvN+kUdoVIUY45Xuy0VN0qB+br8vUgG6ZfxtqLO23QrNIqsU8pAIFvQ2KdjkJnWR34yfgxIOtbqMM+l0ZE4mp+V2efnhi89NihTKOB3VcEsLnEBLy3Y3+/6r26wIDAQABo2EwXzAOBgNVHQ8BAf8EBAMCB4AwEwYDVR0lBAwwCgYIKwYBBQUHAwIwEAYDVR0gBAkwBzAFBgNKQwcwEQYDVR0OBAoECMJJqBBTd2oEMBMGA1UdIwQMMAqACAEOauKKX+IEMA0GCSqGSIb3DQEBBQUAA4GBAFcdMyIpWjTT3Ulv84xPLSLAXoFaZn9SjkR+OffoekYKNNxIcugZvLAbtvANPqJAFAkXkrp9zrhFXEnVfyeER0KJKCC84GTaUfMeck65vU4OtwR7JzcPNoQyYuBjJt2B7jPAdCckfJqkvaR3UKN1cMJrGocv0PIyG721ROan3Cai  >        </X509Certificate>  >        <!-- intermediate cert subject C=US,O=IBM,OU=FVT,CN=arbolCA   > issuer,C=US,O=Bridgepoint,OU=FVT,CN=tootiseCA -->  >   ><X509Certificate>MIICPzCCAaigAwIBAgIBBjANBgkqhkiG9w0BAQUFADBFMQswCQYDVQQGEwJVUzEUMBIGA1UEChMLQnJpZGdlcG9pbnQxDDAKBgNVBAsTA0ZWVDESMBAGA1UEAxMJdG9vdGlzZUNBMB4XDTAwMDgyNDE5NTk0OVoXDTAyMDgyNDE5NTk0OVowOzELMAkGA1UEBhMCVVMxDDAKBgNVBAoTA0lCTTEMMAoGA1UECxMDRlZUMRAwDgYDVQQDEwdhcmJvbENBMIGdMAsGCSqGSIb3DQEBAQOBjQAwgYkCgYEAqEF4pvvO3DjBPhXPyvBJ63lAaZXWcy7yDrMfZ8mc3IhC7B9jT3C0E5u6AALkbDdqNifyp8rlqCurjT5hzVGsCe8eKn9bjKli8GUvfX/67doh7otN5MPnu6Hq8DR8a2kjuYOT3S2qKptnlytQpG3BzgNmeaD+ijqICSHrkQcHPFMCAwEAAaNLMEkwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwEQYDVR0OBAoECAEOauKKX+IEMBMGA1UdIwQMMAqACL+hwm7BpGUEMA0GCSqGSIb3DQEBBQUAA4GBALEqW7CMC47FhMrOmh+R+1pVWtzAf87oajvMrtF7KykDj+jLEGjXnh5JMnO5e7EAHyitr1CG/p/R3u56UOzIiugvp159aiyn9up8rP1UHecGjmwYUoxpy5JC6HfSavx5uTVX5a49gn/JKX4qIcVyeVpO7y/9g9tTUfzdwKn6TmBK  >        </X509Certificate>  >        <!-- root cert subject C=US,O=Bridgepoint,OU=FVT,CN=tootiseCA   > -->  >   ><X509Certificate>MIICSTCCAbKgAwIBAgIBADANBgkqhkiG9w0BAQUFADBFMQswCQYDVQQGEwJVUzEUMBIGA1UEChMLQnJpZGdlcG9pbnQxDDAKBgNVBAsTA0ZWVDESMBAGA1UEAxMJdG9vdGlzZUNBMB4XDTAwMDgyMTE2MjkwMVoXDTMwMDgyMTE2MjkwMVowRTELMAkGA1UEBhMCVVMxFDASBgNVBAoTC0JyaWRnZXBvaW50MQwwCgYDVQQLEwNGVlQxEjAQBgNVBAMTCXRvb3Rpc2VDQTCBnTALBgkqhkiG9w0BAQEDgY0AMIGJAoGBALzPk+5Md5yzvKLzk20/Uh/50BlBkC1OxjEllTLl4WTBhZs4WvqCYZEri3OPnZ+m/uZTaBlDAauOfDj5dAdC1EN3eriYbK5gAKkvK1Qlyz7YPZz7tdqeIWjVXNtin9K1ye5/gviRA0/SKWPvpyqdCbWdSQkb9/s5oMSWwNdkCdpzAgMBAAGjSzBJMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MBEGA1UdDgQKBAi/ocJuwaRlBDATBgNVHSMEDDAKgAi/ocJuwaRlBDANBgkqhkiG9w0BAQUFAAOBgQAKDyn9kD0r/MAW5zCKU0mUWoa+ggo4aNgVplFFAEJdcUNGz9Zr81ggiOe2NLW59D4mGC+JbJ/yQPaUn/yLUlDaw6r7SpLFUm01DMJTDMuYqajFxujm9YZgfyrV7g5XUcqSQYB5DThEAMEwzx+9FO5MmpMTZcfwbBkN2UImct1Riw==  >        </X509Certificate>  >      </X509Data>  >    </KeyInfo></pre>  >  ><p><u>Note: Direct provision is not made for a PKCS#7 encoded  >"bag" of certificates or CRLs but a set of certificates or a  >CRL can occur within an <code>X509Data</code> element and multiple  ><code>X509Data</code> elements can occur in a  ><code>KeyInfo</code>. Whenever multiple certificates occur in an  ><code>X509Data</code> element, at least one such certificate must  >contain the public key which verifies the signature.</u></p>  >  ><pre class="xml-dtd">  >    Schema Definition:  >  >    <element name='X509Data'>  >      <complexType content='elementOnly'>  >        <choice minOccurs='1' maxOccurs='<u>1</u>'>  >          <sequence minOccurs='1' maxOccurs='<u>unbounded</u>'>  >            <choice minOccurs='1' maxOccurs='1'>  >              <element ref='ds:X509IssuerSerial'/>  >              <element name='X509SKI' type='ds:CryptoBinary'/>  >              <element name='X509SubjectName' type='string'/>  >              <u><element name='X509Certificate'   > type='ds:CryptoBinary'/></u>  >            </choice>  >          </sequence>  >          <u><element name='X509CRL'   > type='<u>ds:CryptoBinary</u>'/></u>  >        </choice>  >      </complexType>  >    </element>  >  >    <element name='X509IssuerSerial'>  >      <complexType content='elementOnly'>  >        <sequence minOccurs='1' maxOccurs='1'>  >          <element name='X509IssuerName' type='string' minOccurs='1'   > maxOccurs='1'/>  >          <element name='X509SerialNumber' type='<u>integer</u>'   > minOccurs='1' maxOccurs='1'/>  >        </sequence>  >      </complexType>  >    </element>  ></pre>  >  ><pre class="xml-dtd">  >    DTD:  >  >  <u>  <!ELEMENT X509Data ((X509IssuerSerial | X509SKI | X509SubjectName  >                       X509Certificate)+ | X509CRL)></u>  >    <!ELEMENT X509IssuerSerial (X509IssuerName, X509SerialNumber) >  >    <!ELEMENT X509IssuerName (#PCDATA) >  >    <!ELEMENT X509SubjectName (#PCDATA) >  >    <!ELEMENT X509SerialNumber (#PCDATA) >  >    <!ELEMENT X509SKI (#PCDATA) >  >    <!ELEMENT X509Certificate (#PCDATA) >  >    <!ELEMENT X509CRL (#PCDATA) >  ></pre>      _________________________________________________________  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Please send me your response regarding having your name listed on the WG  page.[1]    ____    [1] http://www.w3.org/Signature/#pending  Pending Chair Action Items and Requests  ...          The  hypertextual token links to the email that includes the complete     action item or request; the parenthetical date (YYMMDD) includes the     open/close date for that item.      1. CR: Respond to reagle if you wish to be listed as a         Participant. (990601/?)         http://www.w3.org/Signature/Participants.html             _________________________________________________________  Joseph Reagle Jr.     Policy Analyst      mailto:reagle@w3.org  XML-DSig Co-Chair   http://w3.org/People/Reagle/        

      Kent asked [1], "The current specification also permits multiple KeyValue   elements in a KeyInfo element. What does this mean?"    The natural language in the specification is clear that KeyInfo is about one   key, the implication of this specification is not accurately reflected in   the schema design because more than one KeyValue is permitted. However some   felt that this constraint should be relaxed given that other applications   may wish to borrow this construct for general key transport. However, given   the mixed views, a lack of immediate/clear cases where we would hinder   dependent specs (actually, Encryption borrows the dsig "single key" semantic   [2]), as well as an interest in not make changes in CR/Proposed the chairs   feel we should stick with the original meaning and where *possible* tweak   the schema to reflect the natural language specification. But regardless of   what we do with the definitions, the natural language specification should   remain unchanged.    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001JanMar/0052.html  [2] http://www.w3.org/Encryption/2001/Meetings/0301-Boston/dillaway.html  "All encryption key info for an encrypted data must refer to the same key"    **Unfortunately, the definition of ds:KeyInfo uses a (1,unbounded) choices   over mandatory elements to emulate an unordered set of optional elements.   This does not readily permit us to constrain KeyValue to (0,1). On hindsight   the use of choice appears to be a bad for a couple reasons which I'll   address in a subsequent email.    __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      In the Editors' draft I've updated the internal subset in the one signature example provided with the spec to account for external content under DTD validation and automated schema fetching.    http://www.w3.org/Signature/Drafts/xmldsig-core/signature-example.xml    <?xml version='1.0'?>  <!DOCTYPE Signature SYSTEM "xmldsig-core-schema.dtd" [  <!ENTITY dsig "http://www.w3.org/2000/09/xmldsig#">     <!ENTITY % SignatureProperty.ANY '| ts:timestamp'>     <!ELEMENT ts:timestamp (#PCDATA)>     <!ATTLIST ts:timestamp               xmlns:tsCDATA#FIXED   'http://www.example.org/rfc/rfcxxxx.txt'>     <!ATTLIST Signature               xmlns:xsi  CDATA #FIXED   'http://www.w3.org/2000/10/XMLSchema-instance'               xsi:schemaLocationCDATA#REQUIRED>  ]>  <Signature Id="MyFirstSignature" xmlns="http://www.w3.org/2000/09/xmldsig#"     xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"     xsi:schemaLocation="http://www.w3.org/2000/09/xmldsig#     http://www.w3.org/TR/2000/CR-xmldsig-core-20001031/xmldsig-core-schema.xsd">    <SignedInfo>    <CanonicalizationMethod Algorithm="http://www.w3.org/TR/2000/WD-xml-c14n-20000710">   </CanonicalizationMethod>   <SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#dsa">   </SignatureMethod>   <Reference URI="http://www.w3.org/TR/xml-stylesheet/">   <Transforms>     <Transform Algorithm="http://www.w3.org/2000/09/xmldsig#base64"/>    <Transform Algorithm="http://www.w3.org/2000/09/xmldsig#null"/>  </Transforms>   <DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1">   </DigestMethod>  <DigestValue>j6lwx3rvEPO0vKtMup4NbeVu8nk=</DigestValue>    </Reference>    <Reference URI="http://www.w3.org/TR/REC-xml-names/">   <Transforms>     <Transform Algorithm="http://www.w3.org/2000/09/xmldsig#base64"/>   </Transforms>   <DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1">   </DigestMethod>  <DigestValue>UrXLDLBIta6skoV5/A8Q38GEw44=</DigestValue>    </Reference>      </SignedInfo>     <SignatureValue>MC0CFFrVLtRlkMc3Daon4BqqnkhCOlEaAhUAk8pH1iRNK+q1I+sisDTz2TFEALE=</SignatureValue>     <KeyInfo>      <KeyValue>        <DSAKeyValue>          <P>...</P><Q>...</Q><G>...</G><Y>...</Y>        </DSAKeyValue>       </KeyValue>     </KeyInfo>    <Object>       <SignatureProperties>          <SignatureProperty Target="#MyFirstSignature">            <ts:timestamp xmlns:ts="http://www.example.org/rfc/rfcxxxx.txt">             this is a test of the mixed content model</ts:timestamp>          </SignatureProperty>        </SignatureProperties>    </Object>  </Signature>    __   Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      I have to give this some more thought, and play around with it, but this  seems like a potential approach to open content models using DTDs.    Forwarded Text ----   Date: Fri, 14 Apr 2000 16:14:04 +0900   To: "Joseph M. Reagle Jr." <reagle@w3.org>   From: "Martin J. Duerst" <duerst@w3.org>   Subject: Re: DTDs and ANY        At 00/04/13 12:14 -0400, Joseph M. Reagle Jr. wrote:   >At 10:53 PM 4/13/00 +0900, Martin J. Duerst wrote:   >  >Joseph - Can you tell me which places in   >  >http://www.w3.org/TR/2000/WD-xmldsig-core-20000228/xmldsig-core-schema.dtd   >  >you would like to have ANY? Preferably just by taking the dtd,   >  >and putting in ANY where you want it, and sending it to me.   >   >Presently, we removed the text below and changed ANY to PCDATA. (This   >actually causes more problems with validators though.) The last version of   >the spec said:   >   >In some cases permitted element content includes user specified and/or  other   >namespace elements, or these and character content. In this case the ANY   >declaration is used in the DTD, although strictly speaking this only means   >any element declared in the DTD.    >http://www.w3.org/Signature/Drafts/WD-xmldsig-core-20000218/Overview.html#se  c   >-Editorial   >   >and it's DTD is   >    >http://www.w3.org/Signature/Drafts/WD-xmldsig-core-20000218/xmldsig-core-sch  e   >ma.dtd      The schema has ANY in three places, KeyInfo, Object, and SignatureProperty.   The schema has other ANYs, so I'm a bit confused.      Basically, what you do is the following. At any place you want to   have ANY, you put something like:      <!ELEMENT Object %Object.ANY; >      Then *before* that, in the same file, you declare as follows:      <!ENTITY % Object.ANY "EMPTY">      Use EMPTY or whatever appropriate for the 'null' case.         Then what a user does to use your DTD is as follows:      First, define Object.ANY the way s/he wants:      <!ENTITY % Object.ANY "( (myObjectA | myObjectB)*)">      to allow myObjectA/B in arbitrary sequence and number,...      Then include the DSig DTD:      <!ENTITY % xmldsig                  PUBLIC "don't know what should go here, but doesn't really    matter"                         "URI of DSIG DTD" >   %xmldsig;      (sorry, but it takes that much to do an include, first declare and   then use).      I didn't run this through any software, so it's easily possible   there are some syntactic mistakes. But with this approach,   everybody that wants to use DSig in a certain context can rather   easily do so.      If you have any further questions, please feel free to ask.         Regards,    Martin.           End Forwarded Text ----    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 04:27 PM 7/27/99 -0700, John Boyer wrote:   >As if to underscore the problems that arise with signing a manifest full of   >XLinks to the resources we really want to validate...    John, based on DanC's comment, I changed the references to specifications  from the latest versions, to the dated versions that we are familiar with.  (We can't normatively refer/imbed external semantics from the future!)  However, I made some errors in the URIs/HTML, but all the links should be  complete.    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      http://www.w3.org/Signature/Minutes/991118-tele.html                         [1]IETF [2]W3C   [3]XML Signature WG          [1] http://www.ietf.org/        [2] http://www.w3.org/        [3] http://www.w3.org/Signature/Overview.html      99-November-18    Chairs: Donald Eastlake and Joseph Reagle    Note Taker: Joseph Reagle [[4]ascii]          [4] http://www.w3.org/Signature/Minutes/991118-tele,text    Participants         * Donald Eastlake 3rd, IBM       * Joseph Reagle, W3C       * Mark Bartel, JetForm       * David Solo, Citigroup       * Ed Simon , Entrust Technologies Inc.       * Marc Pashoa,       * Todd Vincent, GSU       * John Boyer, UWI (regrets, couldn't get through to bridge)       (Sorry for the teleconference problems to that didn't join.)      Review of Outstanding Action Items        Clean up from IETF meeting: slides/minutes < 5 minutes         * Need slides from Boyer and Schaad       * Boyer will send today, Schaad's were hand drawn, will check with         him.        Signature Syntax & Processing draft questions:         * need someone to rewrite Parameters (and KeyInfo) such that we use         elements like <prime>...</prime>.       * Aside: Processing Model and reporting errors.            + Do we need to specify a processing model whereby you              determine what failed (signedInfo or the ObjectValue).              Applications can do this at their option (Simon's prototype              did) but we don't need to standardize on this.            + ACTION: Solo, add a sentence or two security consideration              that speaks that applications can do this sort of thing.        Schemas &/or DTDs < 10 minutes       * Include both.       * Solo: IETF will likely want one to be normative. No opposition to         DTD being normative if Schema is not stable.       * However, people are happy with continuing to use the schema         declarations in the body of the text as they are more expressive.        Other questions/items from latest posted draft < 15 minutes         * push the latest spec out to xml-dev and xml.com        Securing Location/Transforms & Levels of indirection, Manifests,      References, ... < 15 minutes       ___       Reagle Summary:     [       defn:DigestContent            The content that is digested (versus earlier intemediary            contents that are processed/transformed).       Provoked email thread because      1. Detected a lack of common understanding of core validation.      2. Wanted further clarity on the assertions made is Signed Info (as         distinguished from Manifest): Distinguish between:           1. Does SignedInfo mean DigestValue are checked: yes! (If in a              Manifest: no, one might take those as trusted assertions.)           2. Does SignedInfo mean the URL must be dereferenced: no! Only              means that the signature operates over the Digested Content.           3. Does SignedInfo mean the Transforms must be applied? not              necessarily. Transforms specifies a set of Content that when              Transformed yields DigestedContent.       To rephrase: we are not signing a URL. We are signing the Digested     Content, and in an odd sense, the class of documents that yield     DigestedContent when transformed in as far as those parts that are     kept.       ]     __       Bartel: Since encoding seems to be different from the other     Transforms, propose that we move encoding into Target (as part of the     hint):       <ObjectReference URI=[5]"http://www.mypage.com" Encoding="UTF-8">       <Transforms>       ...         Call seems happy with this.       [Notetakers Question: Can Encoding still appear in the transform, in     both places?]       Reagle: say one has to dereference the URL, decode it, XPath it and     C14Nize it., if I have a document on hand that has already been     XPath'd but no C14Nized, can I just start it mid process?       Solo: Yes: Signer is only saying he signed the DigestContent.     Everything else is a hint. If an application knows it does something,     it can pick up the chain where it wants.       Bartel: Agrees: if an application applies some of the transforms, save     an intermediary step, and completes the other steps later, that is     fine       Reagle: The thing I'm not sure about is says there's a sequence of     tricky transforms, could someone play a trick?       Reagle: Is there some sort of assertion by the signer such that "there     is a class of documents related to this DigestConent via these     transforms?"       Solo: No normative assertion, in the end the you are hashing/signing     the DigestContent, and if you don't get the right DigestValue, the     signature obviously doesn't work.       Eastlake: David might be too stringent, there is some sort of     assertion about those other documents.       Boyer: In the users context, he's looking at the thing that is     transformed, where certain parts may change or not, not necessarily     the DigestContent min I'm focussing.       Reagle: I think we agree that we don't need to make major change in     the syntax, we do need to better define the semantics of the     assertions within an ObjectReference. Let's take this to the list,     please propose a set of assertions that you think are made by     ObjectReference.       Todd: in the legal context, sill concerned about the issue of what the     user sees and what is signed (particularly) XSLT's. Call feels that     the specification makes these distinctions fairly well. ACTION Todd:     propose some text (a sentence or two) that he would like to add to     spec, WG can then point out where it exists, or adopt.       Boyer: Orthogonal quick question before the call ends: If you use a     IDREF, does it include the element within which the ID sets, or only     the element's content. Call: IDREF probably returns the element.     Boyer: in Richard Himes' scenario, he only wants the content (because     that is what is fed into the Base64 decoder if an encoded document is     embedded in XML).       Call: suspect if you want only the content, you will have to use a     simple XPath like child::text().       [Note taker question: is the IDREF still listed in the     ObjectReference, and then the further qualification is in the     transform, or does the IDREF/URI="" and the complete Transform     follows?]        Con calls versus Thanksgiving/Christmas < 5 minutes         * Nov 25th is holiday       * Dec 2nd (Reagle Jury duty), Scheduled call. On that call         reconsider the next two.       * Dec 9, bridge reserved       * Dec 16 bridge reserved       * Dec 23th Christmas Eve       * Dec 30th Holiday        Face to Face meeting arrangements? < 5 minutes         * Call feels one day (a Friday) is good enough.       * Had said January 14, looking for location near San Jose, potential         hosts include Verisign and Sun.       * Solo: has asked about a location in San Francisco on the 14th,         probably can handle 20 people.       * Boyer: since the RSA conference ends on Thur (20), why not have it         on 21? (Then people don't have to loose a weekend if they are         doing both.)       * ACTION Eastlake: confirm when RSA ends and propose one of the days         (ask for RSVPs).       * Solo's room might only be available on the 14th, doesn't know         about 21.          _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      [Resulting document          http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html  ]    At 19:02 5/19/2001 -0700, Susan Lesch wrote:  >The bottom part of this GIF seems to be cut off.  >http://www.w3.org/TR/2001/CR-xmldsig-core-20010419/xmldsig-datamodel-20000112.gif    Ok, used to be a key there that I masked to delete, but comes through in   some viewers.    (all the editorials ok)    >4.3.3.2 pars. 5-7  >URI-Reference  >URI reference (In RFC 2396 this is the most common form, and I'd use it   >unless  >referring to the BNF construct itself.)    Given some previous experience with this, I'd like to stay with the more   specific 'URI-Reference'.      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 14:25 7/27/2000 -0400, Ken Goldman wrote:   >We actually are considering using <SignatureProperties> as we try to   >fit FSML into DSIG.  It's quite klunky because we designed FSML   >assuming a smart card would be doing the signing.    BTW: I'd appreciate your thoughts on removing SignaturePropeteries as Gregor  noted it is superfluous to SignatureProperty [1].    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000AprJun/0188.html     >All of this has to be done atomically inside the card, or the security   >is easily compromised.  It's not clear whether the extra processing   >can be done in a cheap smart card.   >   >Is there a good reason not to permit tags other then references in   >SignedInfo?  I can see that it's elegant the way it is, but why is   >opening SignedInfo dangerous.   >   >In our application, if the smart card can't do the operation   >atomically, we will have to trust the host application, which is   >certainly dangerous.    Hi Ken, this is a good report on your experience. This aspect is one of the  earliest design principles:    2.2. XML-signatures are generated from a hash over the canonical form of a  signature manifest. (In this document we use the term manifest to mean a  collection of references to the objects being signed. The specifications may  use the terms manifest, package or other terms differently from this  document while still meeting this requirement.)   http://www.w3.org/TR/1999/WD-xmldsig-requirements-19991014.html    This is a result of:    0. For all Signature applications, implementing the SignedInfo processing  logic is very easy, there won't be any surprises. Taking advantage of  SignatureProperties is more complex, but that's commensurate with its  relative position to validating a simple signature.  1. The early data model [1] which attempted to associate the syntax with an  assertion (digraph) based data model. Consequently, someone could run a RDF  parser over our syntax and pick up the relations of these things.  2. We want to provide the ability not to include it in SignedInfo (it's own  Digest or C14N Methods), consequently, supporting within and without is  unecessarily redundant. (Instead of supporting "inline" signature, and all  the others, the WG decided to choose the single method.)  3. It's proved useful in the rat-hole prone debate of Signature semantics.  If you have something to say about the signature, that is external to our  defintion of what a XML Signature is, place it outside of SignedInfo.    While I appreciate your implementation concerns this is a core design  principle that I don't think is likely to change at this point. (Though if  others have thoughts based on your experience they should weigh in.)      [1]  http://www.w3.org/TR/2000/WD-xmldsig-core-20000711/xmldsig-datamodel-20000112  .gif    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Donald and WG,    I've made the changes I think are relevant. They are reflected in the  following document in red underline. I request we review these tweaks on the  list and confirm its advancement at the next conference call.    http://www.w3.org/Signature/Drafts/WD-xmldsig-requirements-990916.html    Also, 3.4 now reads "The signature design and specification text must not  permit implementers to erroringly build weak implementations susceptible to  common security weaknesses (such as as downgrade or algorithm substitution  attacks)." Anyone have a good reference to a security design principles  document? I think I remember seeing one in IETF...      At 23:07 99/09/07 -0400, Donald E. Eastlake 3rd wrote:   >2.2 Suggest "XML syntax signatures" instead of "XML signtuares" as   >just saying "XML signatures" seems to, sooner or later, lead to   >questions on whether they are signatures in XML syntax or signatures   >of XML objects.    2.1 ... The XML syntax used to represent a signature (over any content) is  described as an XML-signature.     >2.2 Drop comment.  As far as I can tell, no one is talking, or at   >least not talking anymore, about implicitly indicating the data signed   >by the mere placement of the signature.    Ok.       >3.2 Comment.  should end with "and/or" non-repudiability since we   >support keyed hashes which do not provide technical non-repudiation.   >(Note Intro says "and/or non-repudiabiilty".    Ok.     >7.1 Spell out "opt".    opt to     >7.2 Suggest "Applications must use XLink locators when they reference   >resources from within a manifest".  I don't like the slat of the   >current wording which could imply that the use of a manifest is   >mandatory.    XLink [Xlink] within its own signature syntax. For any resource  identification beyond simple URIs (without fragment IDs) or fragmentIDs,  applications must use XLink locators to reference signed resources     >3.1.2 Pushes manifest to much and mandates URIs or fragments when   >sometimes we use XLink.    I tried rewriting the manifest sections, and felt it too awkard, so now it  says:    2.2 ... (In this document we use the term manifest to mean a collection of  references to the objects being signed. The specifications may use the terms  manifest, package or other terms differently from this document while still  meeting this requirement.)      >2.4 Suggest replacing "A key" with "An important".    Good.     >3.3.3 I suppose it is OK with the note but when have a "requirement"   >mandating a certain action when we may decide otherwise.     the XML-Fragment or XPointer specifications to yield this functionality, or  a requested change to those specifications if the functionality is not  available. See List(Boyer(1,2)) for further discussion of this issue.     _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      On Fri, 15 Oct 1999, Greg Whitehead wrote:  > Did the proposal to fix the canonicalization algorithm used on SignedInfo,  > and eliminate 4.1, get rejected or just lost in the shuffle?    Greg, this is very much a "get it out the door" version, there's a slew of  to-do's that didn't make it in there. The chair/authors should probably  come up with a good/better list of these open issues/to-do's that we can  hopefully next week.        

      My preference is for element only as well for Transforms. Does anyone oppose   this. Ed/John, is the mixed content for Transforms even relevant to the   types of transforms we'd expect people to write now?      At 15:40 9/1/2000 +0200, Gregor Karlinger wrote:  > > At 08:29 9/1/2000 +0200, Gregor Karlinger wrote:  > > >Yes, I think it would be fine to have the same structure for all kind of  > > >algorithms.  > >  > > But are you arguing for consistency or for mixed? I could make them all  > > element only.  >  >I am arguing mainly for consistency. I personally would feel better with  >element only; if somebody wants to have mixed content, he can define a  >parameter element which allows this mixed content.        _________________________________________________________  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Ok,    Given this I will add it to the Signature issues list [1], and note it as a   minority position (class="minority"). I will also mention it at the upcoming   Canonicalization Proposed Rec Review. If you get a new spin on it, or in   subsequent decision become willing to remove your objection of the WG's   decision, please let me know.      [1] http://www.w3.org/Signature/20000228-last-call-issues.html (see bottom)    At 12:00 1/9/2001 -0800, Joseph Ashwood wrote:  >----- Original Message -----  >From: "Joseph M. Reagle Jr." <reagle@w3.org>  > > So I think there are three courses open to you on this issue:  > > 3. A noted opposition in the specifications' issues document.  >  >This seems like the most reasonable thing to do at this point. Because the  >rest of the spec is close to completion, it would be foolish to hold it up,  >however having it noted is a reasonable answer. Additionally I have given it  >some thought, and I am now unconvinced that Canonical XML is actually the  >problem, the problem may be buried more deeply, and it will take quite a bit  >more investigation to uncover the real source. I think having a noted issue  >with the specification would at this point be the most reasonable thing.  >                     Joe      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 04:53 PM 5/11/00 +0900, Martin J. Duerst wrote:   >- Because the 'boolean' datatype has four lexical values (true, false,   >   1, 0; this is in the spec, no kidding) instead of two lexical values,   >   that means that additional effort (at least) is necessary if somebody   >   wants to create a schema for some data containing boolean values.    Martin, thank you for reminding me about this. I recall you've mentioned  this before and I believe we had an agreement from Michael to do something  about ensuring a consistent lexical representation of data types. I can't  find a URL for that agreement (I think it was sometime last year) but I can  find evidence that the WG was trying to satisfy that requirement (for  floating points at least):    3.2.3 - 3.2.5 Lexical notation of floating-point numbers   [Where the author requested other notations]  AM>> This argument was made by several people but there was a strong  AM>> sentiment for a single  AM>> lexical representation.  http://lists.w3.org/Archives/Public/www-xml-schema-comments/2000AprJun/0043.h  tml    However, I'm not sure to what extent this is a problem (I'm expressing  ignorance, not arguing it isn't). If an XML instance uses '0' that is  signed, is there and expectation that since the schema permits a 'false' as  well, intermediary processors would change it? I appreciate this might  happen with character code mappings, but I tend to view schema's as  constraints on permissible values, and not a processor (in the vein of  infoset/C14N/DOM). (For instance, just because a schema permits an  unconstrained string, one wouldn't presume it would change the string ...?)     >- If there is some way to express that elements of the same type   >   have to appear in a certain order (don't know whether this is in   >   the spec or not), this will also help to create schemata that can   >   be used to validate data and then feed that data into XML DSig   >   without any or without much processing.   >   >In other words, try to make sure that for appropriately designed   >XML Schemas, no additional 'data canonicalization' step is necessary   >to sign some data.     I don't quite follow. Element of the same element type? Can you give an  example?      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 09:46 99/10/29 -0700, John Boyer wrote:   >What you're proposing for function parameters is analogous to wrapping all   >of the subelements in the item above in 'field' elements, as follows:    I think one of the things being confused here is the necessity of parameters  for Transforms [1], for .*Method Algorithms, and as to whether they must be  the same thing. But I'm going to assume they are not at the start of this  email and try to focus on what we are trying to say with respect to Digests.    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/1999OctDec/0203.html  [2]  http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/1999OctDec/0214.html      >Don:   ><item>   ><field type="name">Television, 19 inch, Color</field>   ><field type="serialno">123456</field>   ><field type="unitcost">100</field>   ><field type="price">300</field>   >...   ></item>    Yes, I definitely wouldn't like the above. I'd rather someone stick in their  own XML (which I'm advocating here where I can.)      >Joseph (sans xmlns):   ><item>   ><field>   ><name>Television, 19 inch, Color</name>   ></field>   >...   ></item>    Actually, I haven't tried to argue we need parameter in this thread, I just  want to avoid unqualified type/values. Otherwise, I've been trying to  _understand_ the parameter issue.    Forget the syntax for a moment, again what is it that we are saying?    The (object) pointed to by ObjectReference has a location of  "http://ietf.org"  The (object) pointed to by ObjectReference has a Digest (object)     Digest (object) has an Method (object)          Method (object) has a literal value of "urn:nist-gov:sha1"          Method (object) has a Parameter (object) with an open content model.     Digest (object) has a Value (object)          Value (object) has an encoding of "Base64"          Value (object) has a literal value of "a23bcd43"    I am not fairly confident this is what we are trying to say (see [1] for the  DLG).    This could be represented as follows    <ObjectReference Location="http://www.ietf.org">      <Digest>          <Algorithm="urn:nist-gov:sha1">              <Parameter Type="urn:ietf:length">32</Parameter>           </Algorithm>           <Value Encoding="urn:ietf-org:base64">a23bcd43</DigestValue>     </Digest>  </ObjectReference>     or to collapse it a bit more.    <ObjectReference Location="http://www.ietf.org">      <Digest Algorithm="urn:nist-gov:sha1">          <Parameter Type="urn:ietf:length">32</Parameter>           <Value Encoding="urn:ietf-org:base64">a23bcd43</DigestValue>     </Digest>  </ObjectReference>     It is interesting to note that this is completely consistent with that  offered in [1] for transforms except it has an additional Value element  which don't need to be represented in transforms -- it is implicit -- though  some could conceivable want to represent the intermediate results of  transforms! John, what I believe you are disputing in either instance is the  use of the Parameter element (not the structure itself) because the above  could be skipped, or done use XML elements, I agree!    <ObjectReference Location="http://www.ietf.org">      <Digest Method="urn:nist-gov:sha1">          <length xmlsl="http://www.w3.org/1999/sig/length">32</length>     </Digest>     <Value Encoding="urn:ietf-org:base64">a23bcd43</DigestValue>   </ObjectReference>     [1] http://www.w3.org/Signature/Drafts/xmldsig-datamodel-19991029.gif    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      Forwarded for public reference.    Forwarded Text ----  >Date: Fri, 14 Jan 2000 21:31:59 +0000  >To: license-approval@opensource.org  >From: "Joseph M. Reagle Jr." <reagle@w3.org>  >Subject: Re: Open source organization  >Cc: "W3C Comm Team" <w3t-comm-no-spam@w3.org>  >  >Could you please tell me the status of my request? (Received, discussed,   >queued, examined, etc.) I am not subscribed to [a] and I can't find   >publicly accessible archives.  >  >[a] license-discuss-subscribe@opensource.org.  >  >Forwarded Text ----  >  Date: Tue, 04 Jan 2000 17:04:47 -0500  >  To: license-approval@opensource.org  >  From: "Joseph M. Reagle Jr." <reagle@w3.org>  >  Subject: Re: Open source organization  >  Cc: Philippe Le Hegaret <plh@w3.org>  >  In-Reply-To: <38525A2A.621842BE@w3.org>  >  >  This email request is in compliance with the policy documented in [1].  >  >  I would like to request consideration of the following license:  >          W3C IPR SOFTWARE NOTICE [2]  >          copyright-software-19980720.html  >  >  This request may be discussed publically.  >  >  [1] http://www.opensource.org/certification-mark.html#approval  >  [2] http://www.w3.org/Consortium/Legal/copyright-software-19980720.html  >  >End Forwarded Text ----  End Forwarded Text ----    --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      Ok,    http://www.w3.org/Signature/Drafts/WD-xmldsig-core-200003plc/#sec-Transforms    At 17:17 2000-05-01 -0400, Donald Eastlake 3rd wrote:   >Here is the revised section 4.3.3.1 to eliminate the MimeType and   >Charset attributes and provide for them as parameters.  It claims   >that none of the Transforms specified in the doc need them but    >is this true form canonicalization?   >   ><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">   ><html>   >   ><body>   ><h4>4.3.3.1 The <a name="sec-Transforms"><code>Transforms</code></a>  Element </h4>   >   ><p>The optional <code>Transforms</code> element contains an ordered   >list of <code>Transform</code> elements; these describe how the   >signer obtained the data object that was digested. The output of each   ><code>Transform</code> (octets) serves as input to the next   ><code>Transform</code>.  The input to the first <code>Transform</code>   >is the source data. The output from the last <code>Transform</code> is   >the input for the <code>DigestMethod</code> algorithm. When transforms   >are applied the signer is not signing the native (original) document   >but the resulting (transformed) document (See section 8.2: <a   >href="#sec-Seen">Only What is "Seen" Should be Signed</a>.)   ></p>   >   ><p>Each <code>Transform</code> consists of an <code>Algorithm</code>   >attribute and content parameters, if any, appropriate for the given   >algorithm. The <code>Algorithm</code> attribute value specifies the   >name of the algorithm to be performed, and the <code>Transform</code>   >content provides additional data to govern the algorithm's processing   >of the input resource (see section 6.1: <a href="#sec-AlgID">Algorithm   >Identifiers and Implementation Requirements</a>).</p>   >   ><p>Some <code>Transform</code> may require explicit   ><code>MimeType</code>, <code>Charset</code> (IANA   >registered character set), or other such information   >concerning the data they are receiving from an earlier  <code>Transform</code>   >or the source data, although no    ><code>Transform</code> algorithm specified in this document needs    >such information.  Such data characteristics are provided as   >parameters to the <code>Transform</code> algorithm and should be   >described in the specification for the algorithm. </p>   >   ><pre class="xml-dtd">   Schema Definition:   >   >   <element name='Transforms' >    >     <complexType content='elementOnly'>    >       <element ref='ds:Transform' minOccurs='1' maxOccurs='*'/>     >     </complexType>   >   </element>    >   >   <element name='Transform'>    >     <complexType content='mixed'>   >       <any minOccurs='0' maxOccurs='*'/>   >       <attribute name='Algorithm' type='string' minOccurs='1'  maxOccurs='1'/>    >     </complexType>   >   </element>    ></pre>   >   ><pre class="xml-dtd">   DTD:   >   >   <!ELEMENT Transforms (Transform+)>   >   >   <!ELEMENT Transform (#PCDATA)>   >   <!ATTLIST Transform    >             Algorithm    CDATA     #REQUIRED >   ></pre>   >   ><p>Examples of transforms include but are not limited to base64   >decoding [<a href="#ref-MIME">MIME</a>], canonicalization [<a   >href="#ref-XML-c14n">XML-c14n</a>], XPath filtering [<a   >href="#ref-XPath">XPath</a>], and XSLT [<a   >href="#ref-XSLT">XSLT</a>]. The generic definition of the   ><code>Transform</code> element also allows application-specific   >transform algorithms. For example, the transform could be a   >decompression routine given by a Java class appearing as a base64   >encoded parameter to a Java <code>Transform</code> algorithm. However,   >applications should refrain from using application-specific transforms   >if they wish their signatures to be verifiable outside of their   >application domain.  Section 6.6: <a HREF="#sec-Transforms">Transform   >Algorithms</a> defines the list of standard transformations. </p>   >   ></body>   ></html>   >   >==================================================================   > Donald Eastlake 3rd  +1 978-562-2827(h)  dee3@torque.pothole.com   > 140 Forest Avenue     +1 508-261-5434(w)  lde008@dma.isg.mot.com   > Hudson, MA 01749 USA   >    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 03:39 PM 6/5/00 -0700, Barb Fox wrote:   >I disagree.  We've defined KeyInfo (in just about every conceivable form!)  to mean "hints" to a verifier about where to find evidence that he is using  the correct key.  There is NO ambiguity here: the result of interpreting  KeyInfo can only be the use of a particular key by the verifier in a  cryptographic operation.      I understood KeyInfo to be the information related to generating the  SignatureValue. Consequently if someone defined a non-cryptographic method,  KeyInfo should carry the hints appropriate to validating SignatureValue  using that method.    Your definition is appropriate as well (particularly given it's called  KeyInfo) in that KeyInfo only holds information related to generating the  SignatureValue via a cryptographic algorithm.    I just want to be clear which it is and what the implication of your  definition:  A. Non cryptographic electronic signatures should place their "validating"  information in SiggnatureProperties, or  B. Non cryptographic electronic signatures can not use XML Signature syntax  what-so-ever. (Specifying this would be difficult as we would then have to  enumerate all the algorithms that may be used, or all those that may not,  and it's difficult to enforce.)    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 12:03 00/01/11 +0100, Gregor Karlinger wrote:   >As an alternative approach, consider to label the types which a data entity   >to be signed could have, in relation to its signature:    Gregor, thanks for the comment. I sort of tried this approach when I  realized the qualifier was sometimes referring to the signature, and  sometimes to the data.  However, it ended up leading to rather awkward  grammatical constructs in the sentences of the spec.    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        W3C is holding a workshop on XML Key Management Services.    Date:      19 July 2001  Location:  Sofitel Redwood Shores Hotel, Redwood City, California    The Call for Participation is on the Web at:        http://www.w3.org/2001/07/xkms-ws/cfp    The full Call for Participation contains information about registration  requirements and procedures, and a link to the online registration form.  The deadlines for this workshop are:             Position paper due: 19 June 2001           Registration closes: 19 June 2001    Excerpted from the Workshop description page:    ==========  Goals    This workshop will consider the requirements for simple key resolution  and trust services for XML security applications, the degree to which  the XKMS specification satisfies those requirements, and determine if  there is sufficient focus and interest  to propose a W3C activity in this area.    Scope of the Workshop    Topics likely to be discussed at this workshop include, but are not  limited to:           XML Security application key management requirements.         Dependencies on XML Protocol, Web services, XML Query,  Semantic Web, and transport protocols (e.g., HTTP).         Security considerations resulting from a specification.         The scope of any resulting Activity.    ...     _________________________________________________________________    The workshop is an open event; however, space is limited and preference  will be given on the basis of (1) quality of position paper, and (2)  members of W3C Working Groups.    Please follow the instructions on registration and participation  provided in the CFP Web page, at:    http://www.w3.org/2001/07/xkms-ws/cfp    Should you have questions regarding the workshop, please feel free to  contact Joe Pato, Workshop Chair, at joe_pato@hp.com    --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      The discussion from a tele generated the following comments on the C14    DISCUSSION      Canonicalization      The report of the W3C Syntax working group was discussed.  People had    a number of questions about it.  Richard Brown questioned dropping the    doctype and dropping white space inside attribute values.  Milton    Anderson had questions about the canonicalization and significance    status of new lines at the end of element tags.  There seemed to be    some confusion in reference to examples in the canonicalization draft.    Hiroshi Maruyama has already sent in some comments.  Richard Brown and    others should post their comments to the XMLDSIG list by the 10th of    August and Donald Eastlake will submit them in a batch as provided in    the draft.    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/1999JulSep/0145.html    RESULTING COMMENTS  (They've also been forwarded to w3c-xml-c14n-comments@w3.org).    Anderson    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/1999JulSep/0140.html  Maruyama    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/1999JulSep/0065.html   Brown    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/1999JulSep/0142.html    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 08:35 AM 6/20/99 +0900, Hiroshi Maruyama wrote:   >After following the discussion between Don and James Clark, however, I   >realized that James Clark's proposal can also be made context independent   >as he points out.  In the light of the increased readability as well as   >avoidance of complexity of introducing the digest algorithm, I think it is   >more reasonable and more preferable to have a C14N definition based on his   >proposal, using generated prefixes such as "n1", "n2", ..., and so on for   >EACH element.    Thank you Hiroshi. I will report this back to the Syntax WG.    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      Ed and I have worked on the following.           http://www.w3.org/Signature/2000/03/13-interop    It consists of    1. a (small/incomplete) feature matrix based on the last call draft (some of  those things are the topic of current presentation). As we get  implementations implementing various bits, hopefully we can add columns.  2. a few points (given we are starting) outlining what we need contributions  on (examples/test-cases, implementations, and test interfaces).   3. pseudo code for an example test interface.    This is critical to moving quickly into and out of Candidate/Proposed-DRAFT,  if you think you can make a contribution or have any ideas, please let us  know.      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      As always, comments, correction, and discussion are welcome.    http://www.w3.org/Signature/Minutes/000203-tele      00-February-03    Chairs: Donald Eastlake and Joseph Reagle    Note Taker: Joseph Reagle    Participants         * Donald Eastlake 3rd, IBM       * Joseph Reagle, W3C       * Ed Simon , Entrust Technologies Inc.       * David Solo, Citigroup       * Barb Fox, Microsoft       * Mark Bartel, JetForm Corporation       * Winchel "Todd" Vincent III, GSU       * John M. Boyer, UWI.com       * David Smiley, Sagasoftware       * Mike Meyers, VeriSign       * Bill Curtain, DISA      Status of documents < 5 minutes         * Requirements is now in RFC-editors queue.      Signature Syntax & Processing draft questions:        Editorial:        1. Remove Core from title?         ACTION Reagle: Remove core and try to label sections as required         versus optional better.         Simon: someone who read the document found it to be very         intimidating, not sure what they needed to implement.         Reagle: we need a lot of editorial/exposition work to make the         document read better, so if you have any suggestions or get         comments on that note, please let us know.      2. Signature versus Authenticator?         There is concern that if we support secret key MACs, it shouldn't         be called a Signature but an Authenticator.         Eastlake: put a sentence or two up front making the distinction         between Signature and Authenticator and say we use Signature         generally as public key will be the common case.         Reagle: Connolly mentioned removing the HMAC specification. Fox:         wants to retain HMAC, as does Bartel. ConCall wishes to retain         "Signature" but use the term carefully; no one wants to remove         HMAC either.        FTF:        1. - FAQ/Scenarios.         People should send comments. Not a normative document, but before         we populate it with examples, we should make sure we are in         agreement.      2. - C14N Report           1. character model: multiple ways of representing the character              model.              Presently, normalize according to character model. Simon and              Eastlake aren't keen on this.              Simon: They really need feedback from implementors who have              experience, but it isn't required for security purposes --              though is likely to be more complex.           2. How to treat XPath results that aren't well formed XML (e.g.,              a series of attributes, or text string or a series of              elements without a root.)              Eastlake: I read of a well balanced fragment somewhere.              Simon: that was in the Fragment spec, they specified that for              any piece you will always send enough information so it can              be understood.              Simon: will write that we've identified this issue though it              is not one the XML C14N need worry about.              ACTION Simon: will send text on both these issues today. List              has one week to discuss before it is prepared to be sent to              the XML working group as this group's consensus position.      3. Interopability         Simon: an autoresponder would be neat, but presently the         implementations out there are just keeping up with the spec.         Eastlake: IPSec had a big 40 vendor test.         Simon: a little early, but important two months from now.        LIST:        1. - URI/IDREF         Slight discussion similar to email disussion. Eastlake: At FTF we         agreed to go with present exposition and see what last call         comments were.         Reagle: it doesn't seem this issue isn't going anywhere on the         basis of arguing about principle. Would be useful if someone feels         strong enough to write a "plug-and-play" proposal such that we can         look at it and say, "yes" that makes sense.        DOCUMENT      [5]http://www.w3.org/Signature/Edits.html          [5] http://www.w3.org/Signature/Edits.html        1. (Also relates to use of entities). 1.3 General issue - the         question was raised as to whether since the version is implied by         the namespace, do we need to make sure the version is explicitly         bound under the signature (it may be already, I'm not sure whether         there's a way to include the reference to the schema/DTD within         signed info). If not, we might need to thing about recommending         inclusion of a reference to the signature schema in cases where         this is a concern.  1.3 last par (security comment) I don't like         leaving a sentence like "we haven't assessed the risk" in for last         call. I'd suggest an explicit recommendation that if null c14n is         used for signedInfo, then all namespaces must be fully expanded.         [P.S. there's no 1.4]         Eatlake: but most everyone will canonicalize and this solves both         of these problems.         Reagle: but we haven't been able to require canonicalization so we         have to address this problem -- even if some of us would like         people to canonicalize by deafult.         Reagle: I will remove this text and add two setences for the         benefit of those that don't canonicalize.      2. - Need to define HMAC output lengths and define element types.         ACTION Bartel: will suggest some changes/text.       Eastlake: Next call on February 17th.       Reagle: I will generate a TR/ietf-draft end of week. If we list Feb     21st as Last Call that gives us time enough for another interim draft     and then we can ask the WG "are you comfortable with this going to     Last Call" (speak now or forever hold your peace).          _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      I've created a new (and sparse) interop matrix:           http://www.w3.org/Signature/2001/04/05-xmldsig-interop.html    Please send an email to the list (so I can reference it) that describes your   implementation of the stated features and algorithms with respect to the   example provided by Merlin, and whose implementation it interoperates with   -- Merlin is an easy one to test for!    (Also, feel free to provide a URI to more information about your   implementation.)    __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      Ok, I took your text, added Don's suggestion, and tweaked it to read as  stated below. My only concern with the text stated below is that I would  ALWAYS like this element to be present even if we REQUIRE Canonical XML.  (Just like SignatureMethod). My preference has been to include syntax where  (potentially) varied semantics are being communicated. For instance, making  a semantic always base64 merits removing elements and attributes. But  otherwise for algorithms that we require, we haven't been setting the  default to that required algorithm. I think this is good because it's  explicit, less-confusing, and mitigates some fuzzy concerns I have about the  need to migrate to other algorithms in the future.    Do you mind making this a required element?  __    4.3.1 The CanonicalizationMethod Element     CanonicalizationMethod is an optional element that specifies the  canonicalization algorithm applied to the SignedInfo element prior to  performing signature calculations. This element uses the general structure  for algorithms described in section 6.1: Algorithm Identifiers. The default  canonicalization algorithm (applied if this element is omitted) is Canonical  XML  [XML-C14N].    Alternatives, such as the minimal canonicalization algorithm (the CRLF and  charset normalization specified in section 6.5.1: Minimal Canonicalization),  may be explicitly specified but are NOT REQUIRED. Consequently, their use  may not interoperate with other applications that do no support the  specified algorithm (see section 7: XML Canonicalization and Syntax  Constraint Considerations). Security issues may also arise in the treatment  of entity processing and comments if minimal or other non-XML aware  canonicalization algorithms are not properly constrained (see section 8.2:  Only What is "Seen" Should be Signed).     We RECOMMEND that resource constrained applications that do not implement  the Canonical XML [XML-C14N] transform and instead choose minimal  canonicalization (or some other form) are implemented to generate Canonical  XML as their output serialization to easily mitigate some of these  interoperability and security concerns. For instance, such an implementation  SHOULD (at least) generate standalone XML instances [XML].    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Draft minutes with links to the presentations we have are available at:          http://www.w3.org/Signature/Minutes/DC-Minutes/    Comments and corrections are very welcome.    Thanks to all those that participated and special thanks to the notetakers:  Thomas Gindin, Winchel 'Todd' Vincent, and Hilarie Orman.        _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 21:38 3/8/2001 +0530, XML DSig wrote:  >I also looked at the sample signature XML document referenced at  >http://www.w3.org/TR/2000/CR-xmldsig-core-20001031/signature-example-rsa.xml   >. There ain't no Schema /DTD reference either!    Correct, I expect many signature applications are well-formed XML   applications. They recognize the namespace URI and know exactly what to do   from that for signature validation. The processing rules [1] for Signature   create well-formed XML, as does Canonical XML, without doctypes.    I don't *believe* (though someone might correct me) that anything in the   specification requires an XML Signature to have its doctype present. We do   say the signature instance should be a laxly valid according to the schema   definitions but this is a rather weak requirement and can be enforced   without schema processing by application code.    >In absence of the reference to the XML Schema / DTD there, it isn't  >a valid XML document! What is the rationale here ?  >Are we saying here that the intelligence of getting hold of the  >XMLDSig Schema resides with the signature application ?    Some namespaces have dereferencing conventions associated with them such   that when you dereference them you get the right resource. Presently,   dereferencing the dsig namespace gives you the spec, but I'm working on   setting it up such that if the client (schema validators) ask for text/xml   or application/xml, you get the schema. I hope the schema community comes to   a shared convention on this point.    BTW: In [3], I've created an example that has a doctype declaration as well   as xsi:schemaLocation that solves this problem if it is your concern.    >Additionally, I note in the case of enveloping signatures, the document  >fragment between the root element is inserted within  >  ><disg:Object ID="SomeID" xmlns=""   >xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">  >  <rootElement>  >    ...  >  </rootElement>  ></dsig:Object>  >  >Here again I have lost information about the schema location!    Why is xmlns="" ? "The default namespace can be set to the empty string.   This has the same effect, within the scope of the declaration, of there   being no default namespace." [4] So your <rootElement> isn't even a   namespace, right? If it had a namespace, it might be dereferenceable,   otherwise, if this is a concern of the application it could use   xsi:schemaLocation .      [1]   http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html#sec-Processing  >3.1.2.3 Construct the Signature element that includes SignedInfo, Object(s)   >(if desired, encoding may be different than that used for signing), KeyInfo   >(if required), and SignatureValue.  [2] http://www.w3.org/TR/2001/PR-xml-c14n-20010119  [3] http://www.w3.org/Signature/Drafts/xmldsig-core/signature-example.xml  [4] http://www.w3.org/TR/REC-xml-names/      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      I spoke to Michael Sperberg-McQueen about this (as co-Chair of Schema, and   as Chair of XMLCG on the the canonical definition of DTD [a]) at EuropeXML   and he agreed to round up a response on both questions.    [a] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/0103.html    Michael, as discussed, can/should [b] be read as defined by SOAP?    >  The SOAP 1.1 submission [2] removes the line length limitation in their   > use of  >Base64; Section 5.4.3 of SOAP reads as follows:  >  >    The recommended representation of an opaque array of bytes is the  >    'base64' encoding defined in XML Schemas [10][11], which uses the  >    base64 encoding algorithm defined in 2045 [13]. However, the line  >    length restrictions that normally apply to base64 data in MIME do  >    not apply in SOAP. A "SOAP-ENC:base64" subtype is supplied for use  >    with SOAP.    [b] http://www.w3.org/TR/xmlschema-2/#base64Binary    At 08:01 5/24/2001 +0900, Martin Duerst wrote:  >After seeing all the discussion, I'm okay with long lines as such.  >But there is still the problem that XML Schema doesn't allow that,  >because it references RFC 2045 directly, without anything else.  >This is a problem on both sides:  >  >- XML Signature cannot use the XML Schema datatype as it stands  >   (and extension or restriction won't work here)  >- XML Schema should consider changing their definition of  >   Base64 to include longer lines, because it seems that that's  >   widely used in practice. Whether that can be done as a corrigendum  >   to Schema 1.0 or whether that has to go into Schema 1.1, I don't  >   know.  >  >I have copied www-xml-schema-comments. Schema experts, please see  >the other messages in this thread  >(http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/0183.html).  >  >Regards,   Martin.  >  >  >At 17:31 01/05/22 -0700, Brian LaMacchia wrote:  >>Folks--  >>  >>Currently, XMLDSIG references RFC 2045 (one of the MIME RFCs) for a  >>definition of Base64 encoding/decoding.  (See section 6.8 of [1].)  It  >>has been pointed out to me that RFC 2045 *requires* that Base64-encoded  >>content have line breaks at least every 76 characters.  Paragraph 6  >>reads as follows:  >>  >>    The encoded output stream must be represented in lines of no more  >>    than 76 characters each.  All line breaks or other characters not  >>    found in Table 1 must be ignored by decoding software.  In base64  >>    data, characters other than those in Table 1, line breaks, and other  >>    white space probably indicate a transmission error, about which a  >>    warning message or even a message rejection might be appropriate  >>    under some circumstances.  >>  >>I can't see any reason for XMLDSIG to inherit a line-length limitation  >>that appears to have been there for mail-specific reasons.  The SOAP 1.1  >>submission [2] removes the line length limitation in their use of  >>Base64; Section 5.4.3 of SOAP reads as follows:  >>  >>    The recommended representation of an opaque array of bytes is the  >>    'base64' encoding defined in XML Schemas [10][11], which uses the  >>    base64 encoding algorithm defined in 2045 [13]. However, the line  >>    length restrictions that normally apply to base64 data in MIME do  >>    not apply in SOAP. A "SOAP-ENC:base64" subtype is supplied for use  >>    with SOAP.  >>  >>I propose that XMLDSIG adopt language similar to SOAP and not require  >>applications to insert line breaks at least every 76 characters.  >>(Conforming implementation will still accept line-limited encodings  >>since they have to ignore any found whitespace in the Base64 string.)  >>  >>                                         --bal  >>  >>[1] http://www.ietf.org/rfc/rfc2045.txt  >>[2] http://www.w3.org/TR/SOAP/      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      I agree with your view Martin. By specification, I (at least) mean those   documents in http://www.w3.org/TR/ . These documents are stable; other   documents on the site may not be and we might not want to encourage the   translation of these documents which would lead to dated/erroneous pages   being common in a foreign language domain.    For XML in 7 points, we should publish it as a TR (technical report) or be   prepared to consider specific translation policies for it.      At 20:37 2/6/2001 +0900, Martin Duerst wrote:  >Please note:  >  >According to the current Copyright FAQ  >http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#translate  >  >- For *specifications*, you do not have to ask for permission,  >   but you have to notify us.  >- For other documents, you need permission, because we have the  >   copyright in these documents and because copyright law does  >   not allow translation (which is a 'derivative work') without  >   the permission of the copyright holder.  >  >Obviously, 'XML in 10 points' is not a specification.  >  >It seems that some more clarification of this in the copyright  >FAQ may be necessary.  >  >Regards,   Martin.  >  >  >At 14:15 01/02/05 +0200, Fotis Kouretas wrote:  >>In http://www.w3.org/Consortium/Translation/#Volunteer I found the  >>following:  >>  >>"For notifying us about starting or completing a translation (required),  >>to find other volunteers to help you translate large specifications, or  >>to discuss questions you have when translating, we have  >>created the w3c-translators@w3.org mailing list..."  >>  >>Regards,  >>Fotis  >>  >>----- Original Message -----  >>From: "Croll" <kroll_@yahoo.com>  >>  >> > >>Kane6 - Whisky1 requesting fire mission over...  >> > >>Kane6 - Whisky1 request denied...  >> >  >> > Hello dear Sirs!  >> >  >> > Why do you send a <the strange thing>request</the  >> > strange thing> for translating XML in 10 points? If I  >> > decide to do it, do I need to send you smth. except  >> > the advertising of the link where I would put it?  >> >  >> > Thank you.  >> > Croll.      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 17:12 12/18/2000 -0800, Brian LaMacchia wrote:  >Um, that's not how I remember the intent of these items.  It was my  >understanding that we were defining <SPKIData> and <PGPData> as known tags  >where the internal sub-elements would be defined by the respective working  >groups.    Hi Brian, I bet your recollection is better than mine on this note.    >   We went a further step to define some of the PGP sub-structure  >(based on advice from members of the OpenPGP WG).  I think the ANYs should  >be present both for PGPData and SPKIData.    However, I was going to ask even if that what was intended, should it be so   now? SPKIData is provided for a particular a non XML representation, "The   content of this element type is expected to be a Canonical S-expression." As   is PGPData: PGPKeyID and PGPKeyPacket are of type string and ds:CryptoBinary   respectively.    Given our philosophy of extensibility and the use of XML I'd think that if   WGs created actual XML structures, they should have their own root element   that sits under KeyInfo under their own namespace. Under my understanding,   the following namespaces had well specified meanings:  [1] http://www.w3.org/2000/09/xmldsig#X509Data           X509 is fairly extensive  [2] http://www.w3.org/2000/09/xmldsig#PGPData           encoding of KeyID and KeyPacket  [3] http://www.w3.org/2000/09/xmldsig#SPKIData           SPKIData for S expressions  and if someone supports any of these, it's clear what it means. Having ANY   within these structures still requires the use of an external namespace, but   makes the ability to say, "I support [1,3]" ambiguous.      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      I've publicly posted the latest draft of the charter Don and I have been  working on. It has gone through a few iterations based on feedback from IESG  and W3M review. It was briefly discussed at today's W3C AC meeting, people  seem eager for the activity and a little puzzled by the odd nature of the  "jointness," but cautiously optimistic. My opinion is that it's the culture  and people of the WG that is critical to the activities success. We've ended  with quite an explicit charter so the WG will stay on track and not be  distracted by procedural ambiguities.    I hope we can formally advance it within a week or two.    [1] http://www.w3.org/1999/05/XML-DSig-charter-990510.html  ___________________________________________________________  Joseph Reagle Jr.  http://www.w3.org/People/Reagle/  Policy Analyst     mailto:reagle@w3.org        

      http://www.w3.org/1999/07/WD-xml-c14n-19990729.html    Canonical XML: W3C Working Draft 29-July-1999    Status of this document       This is a W3C Working Draft for review by W3C members and other     interested parties. This draft represents the consensus of the W3C XML     Syntax Working Group, which expects to make no further substantive     changes. However, review by the W3C and the broader community may     reveal new issues and lead to substantive changes. It is inappropriate     to use W3C Working Drafts as reference material or to cite them as     other than work in progress.          Comments on this WD should be sent to:     [15]w3c-xml-c14n-comments@w3.org.       Abstract       This document describes a subset of the information contained in an     XML document and a syntax for expressing that subset. This syntax,     called Canonical XML, is designed to encode the "logical structure" of     XML documents; two XML documents whose Canonical-XML form is identical     will be considered equivalent for the purposes of many applications.       _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 19:28 3/26/2001 -0800, Brian LaMacchia wrote:  >CryptoBinary and base64Binary are not exactly equivalent -- there are  >further restrictions on a CryptoBinary because it is a representation of  >a single bignum.  From the latest DSIG draft, section 6.4, is this  >implicit definition of the CryptoBinary format    Ok, as we discussed, this bignum encoding rule we created for RSA and DSA   KeyValues should probably apply to all the CryptoBinary types. So I've moved   the text in section 6.4 and associate it with the CryptoBinary type [1]. The   question then is there any definitions relying upon ds:CryptoBinary (i.e.,   SignatureValue, DigestValue, X509SKI, X509Certificate,  X509CRL,   PGPKeyPacket) that should be of xsd:base64Binary (or any other variant)?    __      [1]   http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html#sec-CryptoBinary  4.0.1 The CryptoBinary Simple Type  This specification defines the CryptoBinary simple type for representing   arbitrary-length integers (e.g. "bignums") in XML as octet strings. The   integer value is first converted to a "big endian" bitstring. The bitstring   is then padded with leading zero bits so that the total number of bits == 0   mod 8 (so that there are an integral number of octets). If the bitstring   contains entire leading octets that are zero, these are removed (so the   high-order octet is always non-zero). This octet string is then base64   [MIME] encoded. (The conversion from integer to octet string is equivalent   to IEEE 1363's I2OSP [1363] with minimal length).      Schema Definition:        <simpleType name="CryptoBinary">        <restriction base="base64Binary">        </restriction>      </simpleType>        __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      John Boyer has been the advocate for this requirement, so perhaps he can  speak more authoritatively. My understanding is that one needs ways of  signing portions of XML. I suspect Xlink/Ptrs could be abused in that I  could have a series of locators referencing elements with given IDs and  change the relative order of those resources within the document and the  signature would still pass -- their relative order wasn't captured by  listing the Xlinks as signature references. Excluding portions of a complete  XML document from the signature, or selecting those portions and maintaining  the context and their relative positions seem to be the two feasible options.    Regardless, I expect well-balanced regions [1] are sufficient for the  applications I know of. To that end, the content production [2:43] rule  might even cover most of what people would want to do.    [1] http://www.w3.org/TR/WD-xml-fragment#terminology      At 16:44 99/08/25 -0500, Paul Grosso wrote:   >At 16:53 1999 08 25 -0400, Joseph M. Reagle Jr. wrote:   >>At 11:17 99/08/23 -0500, Paul Grosso wrote:   >>Dependency: signing non-contigous portions of XML content in a way that   >>retains their relative positions/context.   >   >I think it may be important to be clear about your non-contiguous   >portions.  Specifically, will they be restricted to what the XML   >Fragment spec calls well-balanced regions, or do they need to be   >able to be un-well-balanced?  If the latter, that will probably   >raise a lot more issues and require a lot more coordination, say,   >with the XML Infoset and DOM and Fragments and XPointer and such    >(since most XML processes work on a tree or node model of XML element    >structure which wouldn't allow un-well-balanced regions).    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 17:29 1/18/2001 -0500, Ken Goldman wrote:  >How does this work in the real world?  Assuming that the spec will not  >be frozen forever, does the name space keep changing?  Doesn't this  >affect interoperability?  Does the specification change, but the name  >space stays the same?    As Don pointed out, we change the namespace when we've made a substantive   change to the specification -- rather than clarification. Also, as we get   more mature one would hope the specification and namespace doesn't have to   change as often, however, at that time more people are likely to be tracking   it and if something does change, they're better off stubbing their toe on   the change in the namespace instead of a more subtle alteration in the DTD   or schema that they don't notice for 70% of their instances. The namespace   should reflect reality instead of keeping it the same while changing the   spec/dtd/schema behind it and pretending because the namespace hasn't   changed, everything is stable.    >Would the software have to keep an ever growing list of name spaces it   >supports, and run down the list every time it's looking for an element in   >the DOM tree?  Is basing the name on the date typical?    A dated (or versioned, or RFC allocated) specification has a specific and   frozen meaning. Prior to clarification of W3C's policies, I had written   instances using schema that were valid at a given time for a given   namespace. The WG then changed the DTD behind that namespace invalidating   the examples I wrote that used to work! My examples should've continued to   be valid under that namespace, and they should've created a new one.    >Is there a name space naming guidelines document at W3C which could  >give me some insight?    Yep, have a look at [1].    [1] http://www.w3.org/1999/10/nsuri  >[This namespace name may be reused in any update of the specification which   >is made for the purpose of clarification or bug fixes. These changes will   >be minor in that they do not (a) change the meaning or validity of existing   >documents written using the namespace, or (b) affect the operation of   >existing software written to process such documents.]        __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      I should have put a link to this page in the STATUS of the document, but [1]  will document the disposition of comments raised during review.  __    [1] http://www.w3.org/Signature/20000228-last-call-issues.html    This page links to comments/issues raised during Last Call (Feb 28 - March  28) and how it was resolved. A style sheet declaration is used to not render  issues which are considered done. This page is a follow-on to the Editors'  Page which had most all oustanding issues resolved prior to going to last  call.    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 06:11 7/12/2001, merlin wrote:  >I think that this may be part of a bigger issue raised later  >in [2]. I agree with you that it is probably smart for us to  >derive from string.    I neglected to explicitly represent this in [1] (now remedied) because I was   waiting for a response back from the Schema WG on base64 and some   discussions at the XML Processing Workshop [2]. Michael Sperberg-McQueen   (Schema Co-Chair) did tell me the WG decided to go with the base64 lexical   space from the RFC (no funky characters permitted) and arbitrary white space   which is ignored -- I think. But they hadn't decided on the schema   normalized form, so he's supposed to send an email with the character   constraints and question about the normalized form to this WG.    [1] http://www.w3.org/Signature/20000228-last-call-issues.html#CandidateREC-2  [2] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/0224.html    But he's also the Chair of the Processing Workshop which I attended today   (and tomorrow), so I understand why he's been hard pressed to send that   email. At this Workshop, we're trying to address what/if there is a default   XML processing (for instance, XML1.0/DTD parse, then xml:base, then XLink   expansion, then schema validation.) I assumed (with some confusing and   hesitation) that when we say an XML document is parsed, that stuff would   happen automagically. However, that isn't the case and I don't think it's   likely that a Recommendation will issue specifying how these things will   always happen: people want flexibility. Seems most people think   XML1.0+namespace+xml:base is the first step in the XML "pipeline" but after   that it's up to the apps. One could for see a standard for describing the   processing steps (as we did with Transforms) but that's an open question.   However, the thing I take away is that we should identify XInclude and   Schema contributions to the node set being serialized/signed as explicit   transforms since we can't assume it'll be done consistently by default.   (Some want to schema validate, then do XIncludes, others want to do   XIncludes, then schema validate). For example, the following parses the XML   (taking care of XML1.0 and its DTD, xml:base, and namespaces), expands the   Xincludes, and schema validates it.    <Reference URI="foo.xml">     <Transforms>       <Transform Algorithm="http://www.w3.org/TR/2001/WD-xinclude-20010516/">       <Transform        Algorithm="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/">       <Transform Algorithm="&c14n;">     <Transforms>    Now, to the question of what schema infoset contributions (they call this   the "PSVI") will be manifested in the canonical form: since they won't be   available to the XPath data model, most won't be serialized. However, if   schema validation is specified as a transform, that *would* result in   default attributes manifesting. In speaking to Henry Thompson about this, he   realized that the schema spec doesn't provide this info as a normalized   attribute value, only as a PSVI normalized attribute value which XPath   wouldn't see -- this is a bug meriting an erratum most likely.    I'm still thinking all this through, so it requires more conversation. (Best   yet, since XSV (schema validator) is written in python, I'd like to see what   kind of node set it returns and what an XPath selection over it returns.)          >It is not clear to me whether a schema-validated document is  >required to expose both the initial value (i.e., post-DTD)  >and the schema-normalized value, or whether it can expose just  >the schema-normalized value. But schema validation may  >introduce a set of normalization problems with signed docs.  >  >Merlin  >  >[2] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/0361.html  >  >  >-----------------------------------------------------------------------------  >Baltimore Technologies plc will not be liable for   >direct,  special,  indirect  >or consequential  damages  arising  from  alteration of  the contents of this  >message by a third party or as a result of any virus being passed on.  >  >In addition, certain Marketing collateral may be added from time to time to  >promote Baltimore Technologies products, services, Global e-Security or  >appearance at trade shows and conferences.  >  >This footnote confirms that this email message has been swept by  >Baltimore MIMEsweeper for Content Security threats, including  >computer viruses.  >    http://www.baltimore.com      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

        The version of the document we will work from at the FTF can be found at  [1]. I will probably not have time to turn it around into an 'official'  TR/ietf-draft before the meeting. But, it includes _lots_ of editing. I've  placed a temporary snapshot of my editorial issues list at [2]. The CSS  '.done' class prevents completed issues from being rendered. If you want to  view the completed items, load it into an editor or remove the  'display:none'.    [1] http://www.w3.org/Signature/Drafts/WD-xmldsig-core-20000114/  [2] http://www.w3.org/Signature/Edits.html    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 19:30 7/18/00 +0100, Merlin Hughes wrote:   >4.4.3 RetrievalMethod   >   >Schema has Encoding attribute on both RetrievalMethod and Type   >elements but DTD has Encoding attribute just on Type element.   >DTD correct?    I assume so and will move to: (unless the authors of that section say  otherwise):    <element name='RetrievalMethod'>     <complexType content='elementOnly'>      <sequence minOccurs='1' maxOccurs='1'>         <element name='Location' type='uriReference' minOccurs='1'  maxOccurs='1'/>         <element name='Method' type='string' minOccurs='1' maxOccurs='1'/>         <element ref='ds:Type' minOccurs='1' maxOccurs='1'/>       </sequence>    </complexType>  </element>     <element name='Type'>    <complexType content='mixed'>      <any namespace='##any' minOccurs='1' maxOccurs='unbounded'/>      <attribute name='Encoding' type='uriReference' use='optional'/>    </complexType>  </element>     >Then in the DTD on file, there is no Type element defined.    I will change the DTD to:    <!-- Key Information -->    <!ELEMENT KeyName%Key.ANY; >  <!ELEMENT KeyValue%Key.ANY; >  <!ELEMENT MgmtData%Key.ANY; >  <!ELEMENT RetrievalMethod (Location, Method, Type) >  <!ELEMENT Location%Key.ANY; >  <!ELEMENT Method%Key.ANY; >  <!ELEMENT Type%Key.ANY; >  <!ATTLIST TypeEncoding  CDATA   #IMPLIED>     >The Schema has mandatory content for the Type element. This   >seems wrong because it can't then be implemented interoperably   >without further specification.     Are you suggestion it be change to optional?       <element name='Type'>       <complexType content='mixed'>         <any namespace='##other' minOccurs='0' maxOccurs='unbounded'/>          ...     >4.3.3.1 Transform   >   >In the schema, the "XPath" element is case-incorrect "Xpath".     Fixed.      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 11:29 99/11/12 -0500, Winchel 'Todd' Vincent, III wrote:   >Who is "we" -- (www.xml.com)? [your cite] or the W3C? -- and what is it  that   >"we" would like to do, exactly?    That xml.com reference cites things that DTDs don't allow you to do, that I  (at least) would like to do. That includes validating XML namespaces and  using  mixed/open content models. We (xmldsig) will certainly be mixing  schemas (embedded signatures and the like).     >Now, if I understand correctly, you are saying that using XML DTDs to   >validate XML documents is the wrong way to go (contrary to the message of   >the last two years) and now I (and everyone else) have to switch to XML   >schemas and use the phantom tools that exists to make it happen.    Over time people will begin to use schemas. I'm not telling you have to do  anything. I am saying TimBL is encouraging WGs to use schemas and to press  on each other specifications.     >> and our XML   >> will be used in many circumstances that will not XML validate anyway.   >   >Who is "our"?    xmldsig.     >I assume you will produce examples, so let me add, what about those people   >who like the idea of SGML and valid documents?  Does this mean the W3C is   >abandoning valid XML?    Of course not, people are advancing schemas such that you can have valid XML  applications that use XML facilities (like namespaces.)     >Please recall, SGML and valid SGML documents based on   >DTDs have been around for 20 years.  As I understood it, the idea of XML  1.0   >was to simplify SGML to bring the SGML philosophy to the massses.  No one   >ever said the idea of XML 1.0 was to throw away 20 years of SGML  philosophy,   >experience, and software and replace it with XML schemas.     Todd, frankly I think you've gone off the handle. DTDs were advanced by the  typesetting community (not theoretical SGML wonks) to ensure people did not  submit documents that were broken and result in dumped jobs. XML simplifies  a lot of the SGML (80% functionality/ 20% complexity) and adds a few new  features like namespaces. It turns out that in order to support some of  those XML features your DTDs become extremely complex and still not very  expressive. That is why folks are working on XML Schemas.     >> I'd ask that we keep the schema declarations I've used in the draft we  are   >> working on until we post it early next week and the WG can discuss it.   >   >Is the use of schemas mandated in the XML-Signatures "Requirements"  document   >and/or is the "Requirements" document going to be amended?  Is this up for  a   >vote or is it simply going to be done?  Does the W3C consensus policy  apply?    Of course, all I've asked is that people have a look at what we've done, and  we can discuss it.     >During the second to last telephone conference, you (Joseph) *suggested*   >that we try to put the XML-Signature syntax into an XML schema to see what   >it would look like and asked for volunteers.  But, no one said or ever   >suggested we were replacing DTDs with schemas.       If you use schemas the idea is -- of course -- to get away from DTDs. I'd  like to post a draft of what the spec likes when using schemas, if the WG  doesn't like it, we can use DTD declarations.    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 16:53 9/22/2000 -0400, Raghavan.Srinivas@east.sun.com wrote:  >You meant Sep. 27th, correct?    Argh, yes! (My record at putting dates on these e-mails is pretty bad!)      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 12:36 00/04/12 -0700, John Boyer wrote:   >Actually, I think both Chris and Joseph are right; they are coming from   >different points of view that are not irreconcilable.    I thought so as well. However, I just re-encountered the text:          While the signing application should be very careful about what           it signs (it should understand what is in the SignatureProperty) a           receiving application has no obligation to understand that semantic           (though its parent trust engine may wish to).           [1] http://www.w3.org/TR/2000/WD-xmldsig-core-20000228/#sec-o-SignatureProperty    The nice thing about my proposal/example is that the signature need not even be aware of the application semantics. Now there really shouldn't be any difference between stuff in the application data, and stuff in SignatureProperty. When I wrote the text above, I wasn't sure about it (I hoped to get comments) and I'm beginning to think that the Signature application need not understand any of the content in SignatureProperty. Not sure though. I think the difference might be that when the application in [2] signs, it is obviously aware of its semantic. As I said in my last email, "In my example, the application and the signer are the same (or at least both are present at time of application XML and signature generation), though I know this isn't always the case." [3]    Possible text:  - An application should always understand the semantics of its application data, particularly when it makes an assertion (assuredby) and binds it. A Signature application need never understand application data, be it in SignatureProperty or anywhere else.      [2] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000AprJun/0040.html   [3] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000AprJun/0052.html    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 10:36 99/10/08 -0700, David Burdett wrote:   >There's work going on in the area of registries and repositories (see   >http://www.xml.org) that should enable on-line dynamic access to XSLT or   >other resources.     You need nothing more than a URI and HTTP to have dynamic access to an XSLT  instance. Whether signature applications will want to be reliant to on-line  access is up to them.     >It should also mean that if an application chooses, the stylesheet could be   >indpendently included as an "ObjectReference" to support checking that the   >correct transformation was actually applied.    This is the idea, you don't need a registry for it though, just the Web!  <smile>      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 15:06 3/12/2001 +0100, Christian Geuer-Pollmann wrote:  >I have a small problem related to XPath:  >If I run "(//. | //@* | //namespace::*)" against C14N example "3.1 - PIs,   >Comments, and Outside of Document Element", I dont catch the nodes outside   >of the document element. Am I completely wrong?    Hi Christian,    Since that's what the spec says, and 4 implementations reported they   complied with that example [1] (retaining the PI in the ordinary case, plus   the comments in the "commented" case) I presume so. <smile/> Do you mean   those nodes aren't provided to you by your XPath implementation (which one?)?    [1] http://www.w3.org/Signature/2000/10/10-c14n-interop.html      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

        http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JanMar/0226.html  >In summary, by making support for minimal-c14n canonicalization  >of the SignedInfo element, the spec really makes things  >painful for XML Signature toolkit implementors.  If there  >is someone out there who has actually implemented code that  >can support minimal-c14n canonicalization of the SignedInfo  >element, I'd like to hear about it.    We've been trying to play agnostic between XML as XML, and XML as a  character sequence, but I believe the spec should follow the  implementations, which seem to be adopting the XML toolkit (XML as  XML) route.    The two problems that exist for that route are security and fragments, and  things seem to be falling out as follows (IMHO):    Security:    You can't do enveloped or partial documents signatures really without  operating in the XML as XML paradigm, if that frightens you from a  security point of view, use detached. (Or see Phil's comment:  http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JanMar/0246.html  )    Fragments:    We need some way of serializing the results of DOM/XPath node lists  (abstractions). Canonical XML only processes full documents, what to do? I  liked Gregor's proposal:  http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JanMar/0156.html    These approaches work well for XML as a refereant being signed,  I'm not sure if it's a compelling enough case to make the WG get off the  fence (move to the XML as XML or XML as character sequence) yet with  respect to SignedInfo, but given the comments from Gregor, Kent, and Ed  (based on implementation experience) I'm certainly leaning that way.        

      I was trying to represent the present spec [1] as clearly as possible in  terms of modelling [2] what we area trying to specify and hit a question  based on the following:    <Signature>     (SignedInfo)     (SignatureValue)     (KeyInfo)?     (Object)*   </Signature>     Given you can only have one SignatureValue in a Signature, than all elements  within KeyInfo (perhaps a KeyName and a KeyValue) are related by identity,  or they are all supposed to be about the same key basically.    If you want more than one signature (I and Don signed it), you have to  construct a whole new signature block, right? Or is it possible to hang more  than one (KeyInfo, SigValue) pair off the same SignedInfo via a reference to  it?      [1] http://www.w3.org/TR/1999/WD-xmldsig-core-19991022.html  [2] http://www.w3.org/Signature/Drafts/xmldsig-datamodel-19991025.gif    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      I'm not sure to what extend IPR will be an issue for this WG -- hopefully  not -- but this topic is a necessary one in the administration of a WG.  Please send any disclosures to this list and cc:patent-issues@w3.org .    I will be forwarding the two IPR statements that were disclosed during the  W3C consideration of this proposed activity. I'd also like to remind people  that according to W3C [1] and IETF [2] process you are obligated to make a  disclosure regarding relevant IPR that is material to this activity. The W3C  -- at least -- prefers specifications to be unencumbered by patents. We want  open and accessible specifications such that anyone can sit down with our  spec, implement and deploy it without legal hassle. However, we realize this  is a thorny issue. Regardless, I think everyone in this WG can agree that  what we want to avoid the work being steered in a way that favors  non-disclosed proprietary interests. Early and specific disclosure is the  best way for us to achieve a specification that will be readily implemented  and deployed.    [1] http://www.w3.org/Consortium/Process/#ipr      1.5 W3C's Intellectual Property Rights (IPR) policy         W3C promotes an open working environment. Whenever possible, technical     decisions should be made unencumbered by intellectual property right     (IPR) claims. To this end, W3C discloses to the entire Membership all     IPR claims made by Members. Members may disclose IPR claims at any     time. Members disclose patent and other IPR claims by sending email to     an archived mailing list that is readable by Members and the Team:     patent-issues@w3.org. Members must disclose all IPR claims to this     mailing list but they may also copy other recipients. For instance,     they should copy the Activity Lead responsible for a particular     technology to ensure that the IPR claims receive prompt consideration.          Advisory Committee representatives are responsible for facilitating     communication with IPR contacts in their organization. When disclosing     IPR claims, individuals should therefore copy their Advisory Committee     representative.          Member disclosures of IPR claims about a particular subject should     include the following language:            To the best of my knowledge, I believe my organization has/doesn't       have IPR claims regarding [subject].            Members are encouraged to disclose their claims in detail whenever     possible.          Announcements, important documents, and frequently visited Web pages     should remind Members to disclose IPR claims. Important places of     interaction include: Activity proposals and briefing packages, calls     for participation in groups and their charters, the Member home page,     Activity home pages, and Group home pages.    [2] http://www.ietf.org/rfc/rfc2026.txt (section 10)    ...     (B)  The IETF encourages all interested parties to bring to its        attention, at the earliest possible time, the existence of any        intellectual property rights pertaining to Internet Standards.        For this purpose, each standards document shall include the        following invitation:             "The IETF invites any interested party to bring to its           attention any copyrights, patents or patent applications, or           other proprietary rights which may cover technology that may be           required to practice this standard.  Please address the           information to the IETF Executive Director."      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      [ Results of this discussion are in the editors' copy (in the schema/dtd and   in the spec):  [1] http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html  [2] http://www.w3.org/Signature/Drafts/xmldsig-core/xmldsig-core-schema.dtd  [3] http://www.w3.org/Signature/Drafts/xmldsig-core/xmldsig-core-schema.xsd  ]    At 21:58 12/16/2000 +0900, muraw3c@attglobal.net wrote:  >I am comparing the XML Schema version and your latest DTD version.  >I have some more questions and comments.  >  >1) The schema version allows KeyInfo to contain SPKIData, but the DTD  >does not.    Ok, now included:    <!ELEMENT KeyInfo       (#PCDATA|KeyName|KeyValue|RetrievalMethod|               X509Data|PGPData|SPKIData|MgmtData %KeyInfo.ANY;)* >  <!ATTLIST KeyInfo           Id      ID       #IMPLIED >    <!ELEMENT SPKIData (#PCDATA) >      >2) What is SPKIData?  This exists only in the XML Schema version.    http://www.w3.org/TR/2000/CR-xmldsig-core-20001031/#sec-SPKIData    >3) The DTD version does not allow customization of contents of PGPData.    You are right (schema *does* permit ANY in PGPData). However, X509Data and   SPKIData do not presume that you will add external elements to those element   types; instead should someone ever define an authoratitive structure, that   structure will be the child of KeyInfo, not our placeholder. So I will   remove the ANY from PGPData:        <complexType name="PGPDataType">          <sequence>            <element name="PGPKeyID" type="string"/>            <element name="PGPKeyPacket" type="ds:CryptoBinary"/>          </sequence>      </complexType>    >4) In the XML Schema version, KeyValue can have only one DSAKeyValue,  >but can have more than two external key values.  Is this really  >intended?    I think not. As the text says, "The KeyValue element contains a single   public key" I will change its declaration to (which by default means 1):        <complexType name="KeyValueType" mixed="true">        <choice>          <any namespace="##other" processContents="lax"/>      >5) When <any> is used in the XML Schema version, mixed="true" is  >sometimes specified and sometimes not.  Again, is this really  >intended?  >  >- Not Specified  >    - CanonicalizationMethod  >    - SignatureMethod  >    - Transform  >    - DigestMethod    DigestMethod's DTD entry wasn't mixed: (#PCDATA %Method.ANY;) and it now is.    >    - Keyinfo  >- Specified  >    - KeyValue  >    - Object  >    - SignatureProperty    Good point. In the three instances, I'm sure we had examples in mind where   we wanted to enable string or element, but I don't see any reason why the   others shouldn't. I've made them all mixed as you did in your RELAX   instance. (BTW: I'm wondering if there a simple way to say element is simple   type="xsd:string" OR an element. mixed="ture" serves but is actually broader   than it need be...)    >By the way, my motivation is to make sure that RELAX can handle XML  >Digistal Signature without any problems.    Fortunately, we' have a simple schema, and I'm glad to see it's easily done   (and it helped flush out bugs! <smile>).    As an aside, Karl identified a structure (SignatureProperty) where the   <choice> and <any> were both unbounded (more than one element from more than   one namespace); in the instance he pointed out I think that made sense , but   I went through the schema and documented when this happens. So for   SignatureProperty, KeyInfo, Transform they permit multiple elements from   multiple namespaces, but SignatureMethod (as there is only one   SignatureMethod for any signature) should be like CanonicalizationMethod, so   I changed it to reflect:    <complexType name="SignatureMethodType" mixed="true">     <!-- (0,unbounded) elements from (1) external namespaces -->     <sequence minOccurs="0" maxOccurs="1">       <element name="HMACOutputLength"  minOccurs="0"         type="ds:HMACOutputLengthType"/>       <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>     </sequence>     <attribute name="Algorithm" type="uriReference" use="required"/>  </complexType>      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Updated, please see:    http://www.w3.org/Signature/2001/04/05-xmldsig-interop.html    --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      Is anyone willing to participate in the xHTML WG and keep both WGs in synch  on signed form issues?    ___    Message-Id: <3.0.5.32.19990524095905.00af7c30@localhost>  Date: Mon, 24 May 1999 09:59:05 -0400  From: "Joseph M. Reagle Jr." <reagle@w3.org>  Subject: Re: xHTML Forms    A number of people at the signed-XML workshop were interested in signing XML  Forms. The HTML WG (which is working on XHTML) will be turning to the topic  shortly. Those interested in the topic should contact Dave. Additionally, I  may ask for a volunteer to be a liaison between the groups so as to identify  and resolve dependencies and requirements.    Forwarded Text ----   Date: Fri, 21 May 1999 09:43:28 +0100 (GMT Daylight Time)   From: Dave Raggett <dsr@w3.org>   To: "Joseph M. Reagle Jr." <reagle@w3.org>   Subject: Re: xHTML Forms      On Fri, 14 May 1999, Joseph M. Reagle Jr. wrote:      > Dave, please send me any information related to the forms work   > of the HTML WG that I can forward on to those in the XML-DSIG   > activity.      Sorry for the delay - I missed your message in my rush to catch   up after www8.      You can find more info about the work by the HTML WG at:         http://www.w3.org/MarkUp/Group/Forms      and in the charter:         http://www.w3.org/MarkUp/Group/HTMLcharter      The charter is somewhat terse but says:        -  An improved match to database/workflow applications      We are interested in collecting requirements for a new generation   of web forms and how to deal with an increasingly hetergeneous   range of browser capabilities. At the high end, this means a much   rich toolkit of forms features and support for workflow where   forms are passed from one person to the next as part of a process.      I envision this involving the notion of a form as a persistent   entity supporting the means for people to sign off various stages of   work. These signatures will have clear semantics and apply to those   parts of the form that have been completed at the time of signing   but not to those that are filled in subsequently.      We have a weekly teleconference (the first is next Monday at 10-11am   Boston time on Longfellow). Perhaps it would be useful to be able to   invite you or another representative of the Signed XML effort to   take part in the Forms subgroup as appropriate. Sadly, I don't have   the time to participate in both groups.      Let me know if you have any further questions.      Regards,      -- Dave Raggett <dsr@w3.org> http://www.w3.org/People/Raggett   phone: +44 122 578 2984 (or 2521) +44 385 320 444 (gsm mobile)   World Wide Web Consortium (on assignment from HP Labs)     End Forwarded Text ----  ___________________________________________________________  Joseph Reagle Jr.  http://www.w3.org/People/Reagle/  Policy Analyst     mailto:reagle@w3.org    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst      mailto:reagle@w3.org  XML-DSig Co-Chair   http://w3.org/People/Reagle/        

        I've been muddling about this too and my summary and opinion of the   situation follows:    At 12:23 5/30/2001, Eastlake III Donald-LDE008 wrote:  >In some sense, in the Encryption use case I describe above, you want C14N   >to "attract" the context. But for portable XMLDSIG, you normally want to   >"repel" the context.    Good, this is a nice way to describe it. Given the scenario: a signature   when placed in an XML "envelope" will attract and exhibit the ancestors'   namespace declarations in its canonical form, breaking the signature. The   options we seem to have available to us are:  1. Leave it to the application. In response to Merlin's question about DOM   [1], Philippe Le H?garet confirmed that removeChild will divorce the child   from its ancestor namespace declarations.  2. Define a new canonicalization method that repels ancestor context. [2]  3. Permit SignedInfo to be transformed.    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/0149.html  [2] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/0208.html  [3] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/0218.html    The options above are actually listed in order of my preference, but I've   covered all the bases, right? The reasons for my preference is as follows   (in reverse order):    3. Big change, and scary as before.  2. I generally like this idea, and a "repelling" c14n might be a useful   document regardless, but:  1. I spoke to Hugo Has about this in the XML Protocol context and he   informally said his expectation of XMLP processors would be that they do   their business and "detach" their payloads and hand them off to other   modules (like dsig) anyway. If this is the case, writing an XPath expression   to remove your from your wrapped context could actually get you confused.   For example, if envelope specific XPath expressions are written that only   survive in SOAP but not other envelopes. This might be a red herring as I'm   sure one could write a generic intend-to-be-enveloped XPath expression.   Regardless, it doesn't seem very modular. Let applications that carry around   XML after the signature worry about the encapsulation and detachment, those   specs can best address this problem.    >As for cutting up the document with DOM before applying C14N, I am   >reluctant to drag in another data model and require DOM as well as some   >part of XPath for simple normal uses of C14N to support XML Digital Signature.    I don't think it's a DOM data model issue. I just think it's the enveloping   applications concern of how it processes it's payloads, and some text of   warning in the dsig spec is advisable, but that's all I'm presently   advocating.    >PS: Since C14N currently suppresses declarations of the xml namespace to be   >its standard value, should it also suppress declarations of xmlns to be   >"http://www.w3.org/2000/xmlns/" which the DOM group has decided should be   >its standard value?    I'm not sure if you're saying it should suppress those, or present that as   the value? Regardless, the DOM WG hasn't decided anything on this note. This   value is not in the Infoset or DOM data model, it's just available to   implementations:    http://www.w3.org/2000/xmlns/  >But in some processing contexts, e.g. DOM, it is useful to represent all   >XML attributes as (namespace name, local name) pairs. For this purpose, the   >namespace name http://www.w3.org/2000/xmlns/ is assigned.      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      Mr. Diodati,    I spoke with the some of the W3C team including management and our continued  policy is that translation should be literal, including errors. However, you  may also translate the errata page.    At 03:26 PM 3/17/98 -0000, Carrasco Benitez Manuel wrote:   >Translator must translate and must not try to improve the source text.   >They should point out the errors, terminological aspects, and other   >suggestions to the author.  The author should take note: create an   >errata document, improve future versions, etc.   >   >Having aligned texts (see my previous posting) will help greatly with   >maintaining the translations.   >   >Regards   >Tomas   >   >> -----Original Message-----   >> From:Joseph M. Reagle Jr. [SMTP:reagle@w3.org]   >> Sent:17 March 1998 14:26   >> To:Michele Diodati   >> Cc:w3c-translators@w3.org; Dave Raggett; Arnaud Le Hors; Ian Jacobs   >> Subject:Re: About file html40-errata.html   >>    >> Excellent question, however I've become involved with the translation   >> efforts mainly through policy and intellectual property concerns.   >> Since this   >> is an editorial issue, I'm cc'ing w3c-translators@w3.org and the HTML   >> 4.0   >> editors. My initial response would to do a literal translation,   >> including   >> the errors. Another possibility, as you say is to, is to make note   >> where you   >> made the corrections, perhaps using a different color text or some   >> such   >> thing, but I am personally less comfortable with that.   >>    >    ___________________________________________________________    Joseph Reagle Jr.  W3C:     http://www.w3.org/People/Reagle/  Policy Analyst     Personal:  http://web.mit.edu/reagle/www/                     mailto:reagle@w3.org        

      http://www.w3.org/Signature/Minutes/000217-tele    Participants         * Donald Eastlake 3rd, Motorola       * Joseph Reagle, W3C       * Ed Simon , Entrust Technologies Inc.       * (regrets) David Solo, Citigroup       * Mark Bartel, JetForm Corporation       * John M. Boyer, PureEdge       * Raghavan "Rags".Srinivas, Sun Microsystems      Status of documents < 5 minutes         * Last Call dead-line is fast approaching.       * Requirements is now in RFC-editors queue.      Signature Syntax & Processing draft questions:         * Section 2 re-write as example (10 minutes)         Bartel, Boyer, Eastlake, Reagle like it. ACTION: Move forward with         the new organization.         2.1.1 Uses transforms, using a base64 transform. Change example to         Canonical XML.       * Section 6.6.3 XPath re-write (10 minutes)         Eastlake: question about serialization of line feeds. John         clarifies ... .         Reagle: seems like a complex section, might frighten people, but I         expect if people want to do this, this level of specificity is         necessary. ACTION: go with this and see if there are further         comments on the list and at last call.         Eastlake: Aside, add a sentence in editorial convention say we         don't rely upon default in DTD/schema.       * URI/IDREF again (10 minutes)         Eastlake: Reagle's text MUST understand URI syntax, but not all         scheme and methods, "XML Signature applications MUST be able to         dereference (obtain the octets associated with) the resource         identified by a URI (e.g, DOM, an API, network method). " Must         understand URI syntax, scheme is application dependent.         Bartel: and we recommend HTTP.         Reagle, Eastlake, Boyer, Bartel want to go forward.  Simon and         Srinivas had not had a chance to read it yet.         ACTION Reagle: touch bases with all those at last FTF to make sure         they are comfortable with moving forward.         Boyer: similar to understanding some of XPath, makes a distinction         between unverifiable versus invalid.         Eastlake: if we were doing a more API type specification, we would         probably have focussed on the processor model a bit more.         Eastlake: put something in Section 3 that makes it clear there is         a potential state of unverifiable even if it might be valid.         Simon: speaking of returning something other than invalid if the         algorithm isn't available.         Boyer: in XPath, "throw an exception to show the particular         function/algorithm is not available."         Eastlake: write two sentences as proposal for unverifiable.       * DTD/Schema inline/appendices (8 minutes)         Stay with what we have.       * Place for semantics (10 minutes)         Go with text as it is minimal and clarifying: "While the signing         application should be very careful about what it signs (it should         understand what is in the SignatureProperty) a receiving         application has no obligation to understand that semantic (though         its parent trust engine may wish to)." More extensive text can be         proposed, but go with we have and we'll probably get comments and         arguments.       * Other topics (7 minutes)         Boyer: present XPath specified (in DSig) doesn't preserve the DTD         or declaration. John could change it if necessary, are there any         requests? Also, preserving order of comments in and around that         declaration could be done, but seems too complex.         Boyer: little difficulty with idea that we'd have an XPath         specified in UTF-8 that operates over a UTF-16 document. The XPath         application will be comparing a 3 byte sequence for a 16 byte         sequence. Eastlake: present text seems ok. Reagle: an Xpath         application could use whatever internal representation it wants         but should be able to handle this regardless.         Generate a candidate last call by 21st, move forward with last         call on the 28th.          _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 14:40 10/4/2000 +0900, TAMURA Kent wrote:  > > Author creates signature that includes a reference to KeyInfo element   > (and  > > consequently it is signed). This KeyInfo contains a RetrievalMethod with   > a  > > relative URL; KeyInfo is canonicalized using an algorithm that resolved   > URLs  > > (since the Signature Reference is an XPointer barename to it).  >  >It is very strange...  >What would happen if a KeyInfo element was pointed from two  >Reference elements and they had different Transforms?    Yes, I goofed in my scenario, I'll try again:    Author creates signature that includes a reference to KeyInfo element (it is   signed) in a separate document via a relative URL. The   CanonicalizationMethod absolutizes the URI via some arbitrary method. (Also,   the SignatureMethod could be changed in some way too).    The thing that's necessary is that the applications validate that which was   signed. So in section 3.2.2 the only thing that the applications deals with   is the KeyInfo (and while it need not be signed, if it is we should protect   it appropriately) and the SignatureMethod. If either of these could've been   altered by the CanonicalizationMethod, then the canonicalization step in   validation should correspond to the canonicalization in generation in 3.1.2.2.    Does that make sense? I know the screw case I'm trying to cover is probably   very unlikely (some URIs being altered), but given the recent discussion on   URIs, I'm trying to capture a completeness/symmetry...      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 19:43 7/12/2001, Joseph M. Reagle Jr. wrote:  >In speaking to Henry Thompson about this, he realized that the schema spec   >doesn't provide this info as a normalized attribute value, only as a PSVI   >normalized attribute value which XPath wouldn't see -- this is a bug   >meriting an erratum most likely.  >  >I'm still thinking all this through, so it requires more conversation.   >(Best yet, since XSV (schema validator) is written in python, I'd like to   >see what kind of node set it returns and what an XPath selection over it   >returns.)    BTW: Short of playing with an implementation of a nodeset, XSV -r will   return a reflection of the actual schema augmented Infoset. That reflection   is a 2 meg file (for a simple 1 line XML document and 4 line schema document   attached!) with the following, which *seems* to report a default value   normalized and schema normalized (as it should) despite what Henry said(?):                <normalizedValue>baz</normalizedValue>              <psv:schemaNormalizedValue>baz</psv:schemaNormalizedValue>    If so, this default attribute would be manifested in the Canonical XML --   assuming schema validation is specified as a Transform if that's what it   takes...  __                       <attributes>                       <attribute>                         <namespaceName xsi:nil='true'/>                         <localName>name</localName>                         <prefix xsi:nil='true'/>                         <normalizedValue>bar</normalizedValue>                         <specified>true</specified>                         <attributeType xsi:nil='true'/>                         <references xsi:nil='true'/>                         <psv:validationAttempted>full</psv:validationAttempted>                         <psv:validationContext>                           <pointer ref='g1'/>                         </psv:validationContext>                         <psv:validity>valid</psv:validity>                         <psv:schemaErrorCode xsi:nil='true'/>                         <psv:schemaNormalizedValue>bar</psv:schemaNormalizedValue>                         <psv:schemaSpecified xsi:nil='true'/>                         <psv:typeDefinition>                           <pointer ref='xsd:type.NCName'/>                         </psv:typeDefinition>                         <psv:memberTypeDefinition xsi:nil='true'/>                         <psv:declaration>                           <pointer ref='attr.name.104'/>                         </psv:declaration>                       </attribute>                       <attribute>                         <namespaceName xsi:nil='true'/>                         <localName>type</localName>                         <prefix xsi:nil='true'/>                         <normalizedValue>xsd:string</normalizedValue>                         <specified>true</specified>                         <attributeType xsi:nil='true'/>                         <references xsi:nil='true'/>                         <psv:validationAttempted>full</psv:validationAttempted>                         <psv:validationContext>                           <pointer ref='g1'/>                         </psv:validationContext>                         <psv:validity>valid</psv:validity>                         <psv:schemaErrorCode xsi:nil='true'/>                         <psv:schemaNormalizedValue>xsd:string</psv:schemaNormalizedValue>                         <psv:schemaSpecified xsi:nil='true'/>                         <psv:typeDefinition>                           <pointer ref='QName'/>                         </psv:typeDefinition>                         <psv:memberTypeDefinition xsi:nil='true'/>                         <psv:declaration>                           <pointer ref='attr.type.141'/>                         </psv:declaration>                       </attribute>                       <attribute>                         <namespaceName xsi:nil='true'/>                         <localName>default</localName>                         <prefix xsi:nil='true'/>                         <normalizedValue>baz</normalizedValue>                         <specified>true</specified>                         <attributeType xsi:nil='true'/>                         <references xsi:nil='true'/>                         <psv:validationAttempted>full</psv:validationAttempted>                         <psv:validationContext>                           <pointer ref='g1'/>                         </psv:validationContext>                         <psv:validity>valid</psv:validity>                         <psv:schemaErrorCode xsi:nil='true'/>                         <psv:schemaNormalizedValue>baz</psv:schemaNormalizedValue>                         <psv:schemaSpecified xsi:nil='true'/>                         <psv:typeDefinition>                           <pointer ref='string'/>                         </psv:typeDefinition>                         <psv:memberTypeDefinition xsi:nil='true'/>                         <psv:declaration>                           <pointer ref='attr.default.147'/>                         </psv:declaration>                       </attribute>                       <attribute>                         <namespaceName xsi:nil='true'/>                         <localName>use</localName>                         <prefix xsi:nil='true'/>                         <normalizedValue>optional</normalizedValue>                         <specified>true</specified>                         <attributeType xsi:nil='true'/>                         <references xsi:nil='true'/>                         <psv:validationAttempted>full</psv:validationAttempted>                         <psv:validationContext>                           <pointer ref='g1'/>                         </psv:validationContext>                         <psv:validity>valid</psv:validity>                         <psv:schemaErrorCode xsi:nil='true'/>                         <psv:schemaNormalizedValue>optional</psv:schemaNormalizedValue>                         <psv:schemaSpecified xsi:nil='true'/>                         <psv:typeDefinition>                           <pointer ref='xsd:type._anon_144'/>                         </psv:typeDefinition>                         <psv:memberTypeDefinition xsi:nil='true'/>                         <psv:declaration>                           <pointer ref='attr.use.145'/>                         </psv:declaration>                       </attribute>                     </attributes>    --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        application/xml attachment: foo.xml    application/octet-stream attachment: foo.xsd          

      [          $Revision: 1.87 $ on $Date: 2001/06/25 18:50:34 $          http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html  ]      At 22:52 6/24/2001, Donald E. Eastlake 3rd wrote:  >Section 4.3.1: one occurance of "CanonicalizationMethod" has the  ></code> before, instead of after, the last letter.    Fixed.    >Section 4.3.3.2: In both the DTD and Schema, the "stylesheet" element  >should occur in addition to the "XPath" element.    I think you mean 4.3.3.4? We dropped the XLST element, <stylesheet> can be   included by the app.  http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/0025.html    >Section 4.4: The first three in the list of Type URIs is missing the  >colon (":") after the "http".    Fixed.    >Maybe I'm just missing something but why, in 4.4.3, does it say that  >keying information obtained by a RetrievalMethod "may need to be  >canonicalized"? Even if the KeyInfo is signed, the signature is over  >the RetrievalMethod element and content, not over what is retrieved,  >right?    I think this is because you "may" sign the data obtained by RetrievalMethod.    >Section 4.4.5: Seems a bit odd in just saying that PGPKeyID is a  >string.  Actually, I belive, PGPKeyID's are 8 octet binary quantities  >so it would seem like it should say they are Base64 encoded...    I'm not sure. Brian?    >Section 7.3: At the end, the last points two numbered don't seem  >connected to the rest of the text.  Suggest preceeding them with "To  >avoid these problems, applications may need to:" or the like.    Done.        --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      I've written a draft comment on the schema last call. I plan to send our  formal comment on May 10th. Please comment or discuss and make sure that if  you disagree or have some issue beyond those represented (aside from  editorial comments which can be sent seperately (I will probably break mine  off)) make it known _before_ the 9th. Thanks!    [1] http://www.w3.org/Signature/2000/05/03-schema-review.html    DRAFT:       The XML Signature WG thanks the XML Schema WG for their work and the     opportunity to review the last call Working Draft [1].  This comment     does not address the ease of implementation but only whether the     functionality as specified meets our requirements. To that end, the     last call specification easily meets our requirements. In particular,     the content types (elementOnly | empty | mixed | textOnly) and the     Wildecard Schema Component <ANY/> are very useful for dealing with     mixed content scenarios which are common to the signature domain. In     time, the type extension capabilities might be a useful feature in     constructing other cryptographic (key and certificate) syntaxes but we     are presently not employing these typing features.          [1] mailto:ht@cogsci.ed.ac.uk       Since the XML Signature specification should enter the W3C     Recommendation and IETF Standard tracks soon, we ask that the schema     WG give priority to the need for a stabilized syntax and for     expediently advancing the schema specification towards Recommendation.       Joseph Reagle, on behalf of the XML Signature WG    [Editorial Comments]    ...    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 12:26 8/28/2000 +0100, merlin wrote:   >The DTD has an 'Encoding' attribute, it should be 'Type'.   >   >I presume that a request for a type allocation for a   >raw X.509 certificate would meet with resistance?    I'm trying to do an edit now and I'm running into this problem. It's not  satisfactory to say, "URI consisting of "http://www.w3.org/2000/07/xmldsig#"  suffixed with a  KeyInfo sub-element type." We actually have to create URIs for all the  KeyInfo types now, and what happens if someone wants to Retrieve something  that we haven't defined? It's well known that I don't like these Reference  and RetrievalMethod types, but given that it's required, it seems bogus to  limit people to only our types and I don't want to define every type out  there in our spec!    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 21:31 7/7/00 -0700, Kevin Regan wrote:   >   >   >Hmm, It doesn't look (from the DTD) like a Signature   >element can contain another Signature element.  The   >content of Object is:   >   ><!ENTITY % Object.ANY '(#PCDATA|SignatureProperties|Manifest)*'>    That's because the content  model of the DTD is rather limited in that  anything should be able to go in an Object, and we have to specify the few  things from our own set, and hope #PCDATA means external data (which it  doesn't, that's why we are using Schema). However, I'll add Signature to  that delcaration.      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      John (and WG),    In your new processing model [a], some of the nodeset-to-octets and  octets-to-nodeset is implicit. However, what happens if these functions  change?    1. a new Canonical XML appears (nodeset-to-octets). If you want to make  sure that the old implicit method isn't used, you have to specify an  explicit transform? Will implementors have hard-wired the 1.0 such that  bugs will inevitably crop up?  2. a new XML appears (octets-to-nodeset). How will you signal that it  should be parse as XML2.0 and not XML1.0 . (This is mostly an argument  for symmetry as I expect the definitive answer will be in the instance's  declaration).    [a] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0419.html    The reason I ask this is I'm wondering if it's better to make the  following implicit transforms explicit and add a few characters but make  it clear in implementors mind that the signature spec is orthogonal to the C14N.    [1]  <Reference URI="foo.b64">   [2]    <Transforms>  [3]      <Transform Algorithm="http://www.w3.org/2000/09/xmldsig#base64">  [4]      <Transform Algorithm="http://www.w3.org/TR/1999/REC-xpath-19991116">  [5]       <XPath xmlns:dsig="&dsig;">  [6]       not(ancestor-or-self::dsig:Signature)  [7]       </XPath>  [8]     </Transform>  [9]   </Transforms>    (Te following implicit/explicit relate to the line numbers above.)    [1] explicit:  octets (derference the URI)  [3] explicit: octets-to-octets (decode)  [4] implicit: octets-to-nodeset (parse)  [5] explicit: nodeset-to-nodeset (XPATH)  [5] implicit: nodeset-to-octets (serialize)    The version where all of the above is explicit designates both the XML parsing version  and canonicalization version follows:    [1]  <Reference URI="foo.b64">   [2]    <Transforms>  [3]      <Transform Algorithm="http://www.w3.org/2000/09/xmldsig#base64">  [3A]    <Transform Algorithm="http://www.w3.org/TR/2000/WD-xml-2e-20000814">  [4]      <Transform Algorithm="http://www.w3.org/TR/1999/REC-xpath-19991116">  [5]       <XPath xmlns:dsig="&dsig;">  [6]       not(ancestor-or-self::dsig:Signature)  [6A]     <Transform Algorithm="http://www.w3.org/TR/2000/WD-xml-c14n-20000907">  [7]       </XPath>  [8]     </Transform>  [9]   </Transforms>    [3a] now explicit: Extensible Markup Language 2nd Edition  [6a] now explcit: Canonical XML 20000907    I'm not advocating this necessarily, just making sure we considered the  option. The only reason I raise this is I wanted the isse on the list and I'm slightly concerned about the potential of new versions or even errata being issued that affects no one but us and creating ambiguity in implementors' code.     _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      http://www.w3.org/Signature/Drafts/xmldsig-signature-990618.html    See you all soon!    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 03:14 6/13/2001, Gregor Karlinger wrote:  >I would prefer to skip the "[DOM],".    Done.      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 08:46 99/11/19 -0500, david.solo@citicorp.com wrote:   >The only assertion made by the signature is that that exact collection of    >bytes, paragraph X, was signed.  The fact that paragraph X was extracted  from    >document Y is in no way cryptographically assured by the XML signature  unless I    >include object references both to paragraph X and to document Y (and  perform    >additional external validation).    I believe there are two other "orthogonal" assertions:    1. There is a set of documents that when processed via the specified chain  of transforms will yield DigestContent.   2. At some point in time, the document obtained by dereferencing the URI was  a member of that set.    One does not need to "confirm" either of these assetions to have a valid  signature.    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 12:37 11/8/2000 +0100, Karl Scheibelhofer wrote:  >i attached a "xmldsig-core-schema" with named types in the style you showed  >in [1].    Hi Karl,    The only stylistic difference in what I did was something I followed from   the schema specifications themselves where the type is NOT the same name as   the instance (for clarity), but append "Type" to the element name. It's a   trivial matter really, but my inclination would to be follow the spec style.    <xsd:element name="purchaseOrder" type="PurchaseOrderType"/>  <xsd:complexType name="PurchaseOrderType">      ...      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      [1] http://www.w3.org/Signature/Group/dependencies.html       This document has been prepared during the [7]Last Call of the [8]XML     Signature Requirements Document. This coordination is expected to be     guided bythe [9]XML Activity Process for Requirements and Issue     Tracking.          The following text describes the Signature WG Chairs' views on     dependencies or requests for review that must be satisfied prior to     the XML Signature specifications being advanced beyond Last Call. We     are soliciting a commitment to resolve a dependency (by having it     addressed it in a spec or RD) and/or a commitment to review the XML     Signature specification(s) -- a specific question is sometimes     included as well. The W3C staff contact for the WG is idenitified     though he need not necessarily be the designated reviewer.       Metadata Coordination Group [38]       Review: data model design          38. http://www.w3.org/Metadata/Group/        _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 11:30 AM 7/29/99 -0400, Phillip M Hallam-Baker wrote:   >One specific condition I have been considering is the case in   >which an XML message represents a negotiable instrument (e.g.   >a Bill of Lading).     Had you been at the meeting, hopefully I would've convinced you this is a  trust application decision  <smile>, and is not related to whether  (valid:signed-resource == true)    signed-resource(I, C, key, sig): there was some request R such that           GET(R) = C and address(R) = I and sign-doc(C, key, sig)  sign-doc(C, key, sig): sig is the value of a strong one-way function over           content and key that yields C integrity/validity and K  non-repudiability     >The conditions of validity for which can   >only be understood in the context of a particular rule book.   >In this case I would like to ensure that clients which are   >not aware of the requirements of a specific rule book do not   >erroneously validate the signature.    Again, I would like to redefine "validate" specifically to signature  validation, not trust evaluation/inference. I think you were speaking of the  ability to make application statements such that one can make a useful  inference:    trusted-statement(signed-resource(I, C, key, sig)): where  (signed-resource(I, C, key, sig) and (C consists of assertions {S1, S2, S3})  and infer(S1,S2,S3).    (As I continue on in my bungled notation! Any logic weenies out there?)    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 11:06 AM 6/13/00 -0400, Eve L. Maler wrote:   >I'm happy to collaborate on designing a joint DTD.  I have a suspicion  that    >the header requirements are pretty different, but this could be    >modularized.    This is actually what I'm most interested in. If you are writing a W3C spec,  you don't have to worry about the expires field. If you are writing an IETF  spec you don't have to worry about the latest version field. But if you are  writing for both it's easy (one document, two XSLTs), and it'll pool our  experiences in writing a spec schema/dtd for everything else.     >In fact, there's already a parameter entity in the XMLspec    >DTD that allows you to substitute your own stuff.  Please note that the    >latest XMLspec information is at the following locations:   >   >http://www.w3.org/XML/1998/06/xmlspec-report-v21.htm   >http://www.w3.org/XML/1998/06/xmlspec-v21.dtd   >   >(I think there may be something funny going on with the "latest version"    >links provided in the documentation, so stick with the specific V2.1 links    >for now.)    I started my unsuccessful path in finding the latest version at:          http://www.w3.org/TR/1998/spec.dtd  which states:    >#       "http://www.w3.org/XML/Group/DTD/xmlspec.dtd">  >...  >  For all details, see the design report at:  >   <http://www.w3.org/XML/Group/DTD/xmlspec-report.htm>            Neither of which exist ...        _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Ok, given this I created a later version of the interop matrix [1] with   Done360 and IAIK listed. Anyone else that would like to be listed (or   correct what I've already done), please email me.    [1] http://www.w3.org/Signature/2000/10/17-xmldsig-interop.html    At 09:13 10/16/2000 +0200, Gregor Karlinger wrote:  > > Hi Joseph,  > >  > > The Algorithm URI for C14N changed in this document so I've attached  > > two updated signature examples that are hopefully valid.  >                                           ^^^^^^^^^^^^^^^  >I can validate them with IAIK's implementation.  >  >Regards, Gregor  >---------------------------------------------------------------  >Gregor Karlinger  >mailto://gregor.karlinger@iaik.at  >http://www.iaik.at  >Phone +43 316 873 5541  >Institute for Applied Information Processing and Communications  >Austria  >---------------------------------------------------------------  >      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      There will be a call tomorrow. Don's on the road, but I assume the  information given last week is the same. Don will be able to correct me this  evening if anything below is incorrect (or if he wants to tweak the agenda  below).    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JanMar/0068.html    There will be teleconference meetings of the XMLDSIG working group    every other Thursday at 1PM Eastern US Time for 2 months starting    February 3rd.  So they will be Feb 3, Feb 12, Mar 2, and Mar 16.      Call in number is 1-800-351-4898 in the US, 1-334-260-2557    International.  Password for all calls is "Signature".    __      An editorial copy of the latest draft can be found out:          http://www.w3.org/Signature/Drafts/WD-xmldsig-core-20000203/    The substantive tweaks (and questions) are underlined (and displayed in red  using CSS) for those that want to see the diffs. We removed a few sections  as discussed at the  FTF (parameters, java, etc.) and also moved the  processing rules up closer to the front.    Potential Agenda Items include the following (and their sources)    FTF:   - FAQ/Scenarios.   - C14N Report   - Interopability    LIST:   - URI/IDREF    DOCUMENT  http://www.w3.org/Signature/Edits.html    -  1.3 General issue - the question was raised as to whether since the  version is implied by the namespace, do we need to make sure the version is  explicitly bound under the signature (it may be already, I'm not sure  whether there's a way to include the reference to the schema/DTD within  signed info). If not, we might need to thing about recommending inclusion of  a reference to the signature schema in cases where this is a concern.   -  1.3 last par (security comment) I don't like leaving a sentence like "we  haven't assessed the risk" in for last call. I'd suggest an explicit  recommendation that if null c14n is used for signedInfo, then all namespaces  must be fully expanded. [P.S. there's no 1.4]   - Need to define HMAC output lengths and define element types.        _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

       DATE AND TIME      Thursday, 16:00 EST (4:00 pm). 99-August-19.   Call 4pm Eastern US time, 1-888-790-3090 (intl: 1-212-547-0311), Passcode  39197.      BACKGROUND      The Overview URL for this group is at:           http://www.w3.org/Signature      AGENDA      Based on    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/1999JulSep/0145.html           http://www.w3.org/Signature/Minutes/990722-tele.html         o FTF details/confirmation.   o Canonicalization (should reagle send comments and start discussion?)   o Status of scenarios?   o Discussion of Syntax proposal, how to create a first draft prior to FTF?   o Data Model (reagule should have a data model proposal by tomorrow)      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 15:28 99/12/17 -0500, dee3@us.ibm.com wrote:   >The one pass feature is a purely optional to use and   >optional to implement hint.    I'm not too keen on this because:  1. I don't know how important a requirement [1] it is nor how likely it is  that it will be implemented.  2. I generally prefer not to have these sort of optional features (bloat).  3. PIs are a bit of a black sheep in the XML world from what I understand,  they are generally discouraged.    [1] It isn't listed in:          http://www.w3.org/TR/1999/WD-xmldsig-requirements-19991014.html      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      [Note: there is no need to quote my original message, all messages are  archived at:          http://lists.w3.org/Archives/Public/w3c-xml-sig-ws/    ]    At 11:56 AM 4/22/99 -0700, Paul Lambert wrote:   >>We can't place restrictions on a syntax, ...   >   >Humm ... how do we develop a standard without any  restrictions?  How can   >we generate conformance tests?    We need restrictions, I'm merely stating that we may not be able to restrict  some things, and we should be clear at what level we are  specifying/constraining. For instance, if you were to say signed-XML is just  like XML but XYZ, that would get torpedoed pretty quickly because it  wouldn't be XML anymore. (We've encountered this with applications of XML  defining their syntax in BNF which might be ok, but can get sort of hairy if  it excludes permissible XML features...) I think one could potentially be  specifying/constraining at numerous levels:    1. Syntax - strings/bits  2. Semantics - meaning  3. Syntax/Semantic defense - requirements to ignore or repulse intrusion on  your own syntax/semantic.  4. State machine (of a protocol.)  5. APIs  6. Default values (protocol suites)  7. Application behavior, requirements, or constraints.    People frequently confuse these things.  ___________________________________________________________  Joseph Reagle Jr.  W3C:     http://www.w3.org/People/Reagle/  Policy Analyst     Personal:  http://web.mit.edu/reagle/www/                     mailto:reagle@w3.org        

      At 23:28 00/01/21 -0500, Ed Simon wrote:   >Two areas we know we need to explore are the octet representation   >of characters (eg. the character model)    To that end, the snippets of the relative reports are below:    http://lists.w3.org/Archives/Public/www-xml-canonicalization-comments/2000Jan/0000.html    Relative to the rest of XML C14N, I believe Unicode C14N is relatively  complex and resource intensive.  It will make a significant difference  to either code size or speed (you can probably implement slowly in a  little code, or fast in a lot of code).  In the context of its use for  digital signatures, XML C14N needs to be performed in scenarios where  processing resources are strictly limited.     http://lists.w3.org/Archives/Public/www-xml-canonicalization-comments/2000Jan/0001.html    The overhead of normalization is not large in code space or data space or  time.  I have provided a non-normative explanation of the algorithm at ...  In general, a table space of about 8K bytes is involved, and the process  is O(N) except on pathological data.      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

       Forwarded Text ----    From: faynberg@lucent.com (Igor Faynberg)    Date: Wed, 23 Jun 1999 17:11:40 -0400    To: "Joseph M. Reagle Jr." <reagle@w3.org>    Subject: Re: Filled Form    ...        This is to affirm that Lucent Technologies Inc., in accordance with long-    established practice, will offer patent licenses for submissions made by it    which are adopted or recommended as a standard by your organization as     follows:        If part(s) of a submission by Lucent is(are) included in a standard and     Lucent has patents and/or pending application(s) that are essential to     implementation of such included part(s) in said standard, Lucent is    prepared to grant - on the basis of receiprocity (grantback) - a license  on     such included part(s) on reasonable, non-discriminatory terms and  conditions.        With best regards,        Igor Faynberg          End Forwarded Text ----    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 13:12 99/11/17 -0800, Jim Schaad (Exchange) wrote:   >3.  The current wording of the document says:   >   >    1. locate object and apply Transforms  to the specified resource   >       based on each ObjectReference(s) in the SignedInfo element.  Each   >       transform is applied in order from left to right to the object   >       with the output of each transform being the input to the next.   >   >This does not imply in my mind that the location is the only place that the   >object can come from.  It merely says find the bytes for the object.    Jim,    I had read this differently (and as I said I didn't like the result of the  way I read it). But reading it as you do (which I think is probably the  right way on hindsight) I'd agree that the current syntax is sufficient. In  the next version of the specification we should be clearer that it is not  necessary that the URL be dereferenced from the network for the resource to  validate only that some content when transformed (and perhaps that content  was pulled from a cache) yields the digest value.      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      http://www.w3.org/Signature/2000/05/10-schema-review-reagle.html    The following comments are (mainly) editorial comments by Joseph Reagle on  the XML Schema last call Working Draft [1].     [1] http://www.w3.org/TR/2000/WD-xmlschema-0-20000407/       http://www.w3.org/TR/2000/WD-xmlschema-1-20000407/       http://www.w3.org/TR/2000/WD-xmlschema-2-20000407/    Glossary; and Model Groups, Model Group Definitions, and Element  Declarations        I find the distinction between these things confusing, perhaps it could  be       simplified or more text could be spent on describing how these things  are       different. Actually, I look forward to the glossary being completed as  this       will help me in understanding the specification. See [2] for more:       [2]       http://lists.w3.org/Archives/Public/xmlschema-dev/2000Apr/0021.html   2.2 XML Schema Abstract Data Model        I could understand this chapter better if the 12 components listed       somehow corresponded more closely to the 2.2.* section headings.       Perhaps, a quick definition on each of the 12 components, or a move       away from the "primary" and "secondary" and "helper" designations       (towards others) if those terms aren't substantively used elsewhere.   2.5 Names and Symbol Spaces             The fact that you are using the same namespace       "http://www.w3.org/1999/XMLSchema" across different specifications       with substantively different syntaxes may cause problems for  applications       that expect the definition of a dated name space to be stable. See [3]  for       more discussion on this topic:       [3]       http://lists.w3.org/Archives/Public/xmlschema-dev/2000Apr/0026.html   Namespace Prefixes        When trying to understand the specifications, I frequently found myself       bouncing between the primer, structures, and datatypes documents,       frequently using find or grep facilities to find bits of examples.  Using a       consistent namespace prefix (xs: or xsd:) through all documents would       be helpful.   2.6 Schema-Related Markup in Documents Being Schema-Validated        Could the Schema Instance namespace somehow relate to the Schema       namespace? For instance, I'd find it easier to understand who defined       the schema instance namespace with something like:       http://www.w3.org/1999/XMLSchema/Instance       http://www.w3.org/1999/XMLSchema#Instance   Appendix A (normative) Schema for Schemas        It would be useful for XML declarations to include more explicit       declarations of DTD and schema locations. For instance:            <xml version='1.0'?>       <!-- XML Schema schema for XML Schemas: Part 1: Structures -->       <!DOCTYPE schema PUBLIC "-//W3C//DTD XMLSCHEMA 19991216//EN"          "http://www.w3.org/1999/XMLSchema.dtd">         <schema xmlns="http://www.w3.org/1999/XMLSchema"         targetNamespace="http://www.w3.org/1999/XMLSchema"         blockDefault="#all" elementFormDefault="qualified"         version="Id: XMLSchema.xsd,v 1.1 2000/04/06 13:51:05 aqw Exp"        xsi:schemaLocation ="http://www.w3.org/1999/XMLSchema.xsd" >    Defaults        The more explicit representation of default values in schema component       definitions is useful. However, the many varied defaults can still be       confusing, perhaps this could be simplified, or a table could be  provided       that includes all default values.   3. Advanced Concepts I: Namespaces, Schemas & Qualification        This topic (not necessarily the exposition) is difficult to comprehend  with       respect to both comprehending the concepts and as a potential source of       validation errors in instances I create. Perhaps some guidelines such  as,       "If you want to create an instance that has no prefixes in children       elements then X; if you want to create an instance ... Y" so readers can       easily jump-start their own schema writing.         _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      [Comments to an email from  Don, that hasn't yet made it to the list.]    At 13:21 99/08/17 -0400, dee3@us.ibm.com wrote:   >2.2:  Suggest changing "The manifest includes..." to "The manifest must   >support..." so as to permit other types of manifest.    Manifests that don't use URIs? If so, what would be the example?     >3.1.2: Assumes the manifest of locators model.  Perhaps simply changing   >"XML-signatures apply ..." to "XML-signatures may apply..." would give the   >flexibility needed to accodate other models.    What other models are we speaking of?     >3.1.2.1, 3.1.2.2, 3.1.2.3: I don't understand why these points are at the  fourth   >level.  S    Ok, they've been promoted.     >3.1.3 & 3.3.1: Suggest replacing "negotiation" with "calculation".  I  believe   >this refers to Diffie-Hellman and I think calculation is more accurate than   >negotiation.  Might even want to change 3.1.3 to be "...calculation of  keying   >material such as Diffie-Hellman agreement."    Done. Richard if you object, say so.     >3.2.1: Suggest simply replacing "document" with "element" and dropping the  boxed   >comment.    Now reads, "An XML-signature must be a well-balanced XML region (as defined  by XML-Fragment) that begins and ends with a signature element. [Charter]"     >3.2.2: Suggest replacing "required" with "mandatory to implement".    ok.     >3.3.3: I think behaviour in this case is application dependent.  It would  be   >good for applications to at least notice conflicts and be able to report  them.     Are you agreeing with the comment? Could you restate the requirement or  comment?     >Boxed comment at the end of 3.4: I don't see that packaging is that  dependent on   >trust/semantic definitions.  Since there are fragment and package WGs, why  isn't   >coordination with them adequate?    (At 4.2. Package might start next year, and Boyer doesn't think the fragment  work is sufficient, so I'm flagging these as particularly salient  dependencies.        _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      http://www.w3.org/Signature/Minutes/010730-tele.html    It includes the response to the Schema WG on the base64 type and my proposal   for exclusive canonicalization. (The proposal might have a bug, and might be   too "implementation specific" but that's because if something like that   worked, that's how I would implement it with a few lines of code! <smile/>.   If it's decent, it can probably be generalized...)    __    IETF W3C   XML Signature WG    2001-July-30  Chairs: Donald Eastlake and Joseph Reagle  Note Taker: Joseph Reagle [ascii]    Participants       * John M. Boyer, PureEdge     * Blake Dournee, RSA     * Donald Eastlake, Motorola     * Merlin Hughes, Baltimore     * Joseph Reagle, W3C     * Angela Shi, RSA    Status of documents < 5 minutes    Will request a Proposed REC review from W3C Director shortly (assuming base64  schema data type is satisfactorily resolved.)    Base64 Datatype    We receieved a response from the Schema WG, with four questions:      1. The base64Binary type has no line length restriction on its lexical   forms.         Response: Agree.      2. The lexical form of base64Binary data can contain any of the 65   characters       in the "Base64 Alphabet", plus any characters recognized by the XML   spec as       whitespace.         Response: Agree      3. Are XML Schema processors expected to enforce the rules about   equals-signs       and character count which are implicit in RFC 2045?         Response: someone has to do it, all things being equal (assuming not too       much of a burden on schema and recognizing applications that don't use       schema validation will still have to check) we prefer schema enforce   this.      4. what is the canonical form for base64Binary values?         Respose: Option A: 76 characters from the base64 alphabet, then a newline       sequence; repeat as needed; last line of more than 0, less than 76       characters, also terminated by newline sequence,      XML Processing Model (XSLT and Schema)    Reagle: Are people ok with Suggested additions to 3.0 Processing Rules   section.    Hughes, will look at it, but no one has any problems yet.    Exclusive Canonicalization    Reagle: I propose the requirement it be as or faster (or no more  complex) than Canonical XML.    (Discussion on whether the original position of the namespace declaration is  available in the XPath data model: no).    Boyer: the present processing requires you to look down as well.    Hughes: does it in two passes    ACTION Hughes: post data on performance of canonicalization versus parsing,   and  Canonical XML and Exclusive Canonicalization as presently specified. (Reagle:  we might be barking up the wrong tree, might not be able to make it that much  faster.)    Eastlake: in present proposal, should we elevate the namespace appearence to  the highest place possible? Boyer: that sounds costly.    ACTION Reagle: write proposal akin to:      1. Create an empty ancestor_ns_stack of empty list of (prefix,value) pairs.       ...    2. Canonicalize Element.        1. If element in subset.        2. Print it out it out            1. Render the start/endtags and element name.            2. In the start tag                1. Render the attributes. (No need to find ancestor xml:foo                   attributes).                2. For every namespace node in use within that element (by the                   element or its attributes) or within                   UnsuppressedNamespacePrefixList:                    1. If the namespace nodes (prefix,value) is not in list on   top                       of the ancestor_ns_stack then: Render the namespace node                       declaration using the prefix and namespace URI.                3. Append the list of rendered nodes to the list.                4. Push list on stack.            3. Do the children            4. Pop the ancestor_ns_stack    --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 12:09 5/18/2001 +0100, merlin wrote:  >I've always thought that Encoding and MimeType were a bit  >weird. They seem only to have meaning for character content  >(which will be the minority of uses), the encoding is implicit  >in the Transforms applied of the corresponding Reference and  >the MimeType can be represented by its Type attribute. It  >would make more sense to me if they were defined on a MimeData  >element that could be used within Object, but I would not  >even advocate that.    [ Resulting document           http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html          $Revision: 1.63 $ on $Date: 2001/05/31 22:40:41 $    /+The MimeType attribute is an optional attribute which describes the data   within the Object (independent of its encoding). This is a string with   values defined by [MIME]. For example, if the Object contains base64 encoded   XML, the Encoding may be specified as base64 and the MimeType as text/xml.   This attribute is purely advisory; no validation of the MimeType information   is required by this specification. Applications which require normatiave   type and encoding information for signature validation should specify   Transforms with well defined resulting types and/or encodings.+/    ]    --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 15:19 10/26/2000 -0400, Donald Eastlake 3rd wrote:  >We can easily cancel this meeting.    I don't see we have any open issues to discuss, but I'm not as familiar with   the conventions of the IETF and whether the WG is expected to be present for   a general update in a WG session or the SAAG. Regardless, if folks in the WG   don't request a meeting, I'd expect you would be there I'd be happy to defer   and rely upon your presence regardless.    I'd certainly encourage folks to work on interop if they are there and have   the opportunity, and perhaps we could organize something like last time.   However, if that would be the only reason for people to attend, we could   lighten the travel by organizing a teleconference/IRC session  However,   exchanging examples on the list seems to have been working well and I don't   think that avenue is exhausted yet.      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Ok, added to:          http://www.w3.org/Signature/2001/04/05-xmldsig-interop.html    At 16:45 5/18/2001 +1000, Thomas Maslen wrote:  >Interop results for DSTC's JCSI XMLDSIG Beta 1,  >  >         http://security.dstc.com/products/xmldsig/  >  >  >  >W3C XML Signature Interoperability Requirements:  >  >  >merlin-xmldsig-sixteen.tar.gz   Keyword   JCSI  >----------------------------------------------  >Detached Signature              MUST      Y1  >  >Enveloping Signature: same  >document reference with  >fragment (URI="#Object1")       MUST      Y1  >  >Enveloped Signature: same  >document reference (URI="")  >with Enveloped Signature  >Transform.                      MUST      Y1  >  >SignatureValue generation/  >validation                      MUST      Y1  >  >Manifest DigestValue  >generation/validation           MAY       N  >  >Feature: laxly schema valid  >Signature element generation    MUST      Y1  >  >XPointers '#xpointer(/)'        SHOULD    Y1  >  >XPointers '#xpointer(id("ID"))' SHOULD    Y1  >  >XPath                           SHOULD    N  >  >the dsig XPath 'here()'  >function (can be used to  >implement enveloped signature)  SHOULD    N  >  >XSLT (note, the child XSLT  >element of Transform has been  >deprecated.)                    MAY       N  >  >RetrievalMethod (e.g., X509Data)SHOULD    N  >  >  >merlin-xmldsig-sixteen.tar.gz   Keyword   JCSI  >----------------------------------------------  >Digest SHA1                     MUST      Y1  >Encoding Base64                 MUST      Y1  >MAC HMAC-SHA1                   MUST      Y1  >Signature DSAwithSHA1           MUST      Y1  >  RSAwithSHA1                    SHOULD    Y1  >Canonicalization minimal        SHOULD    N  >  Canonical XML (20010315)       MUST      Y1  >  Canonical XML with comments    SHOULD    Y1  >Signature Transform Enveloped  >Signature                       MUST      Y1  >  >merlin-xmldsig-fifteen.tar.gz         JCSI  >----------------------------------------------  >signature-enveloped-dsa.xml           Y1  >signature-enveloping-b64-dsa.xml      Y1  >signature-enveloping-dsa.xml          Y1  >signature-enveloping-hmac-sha1-40.xml Y1  >signature-enveloping-hmac-sha1.xml    Y1  >signature-enveloping-rsa.xml          Y1  >signature-external-b64-dsa.xml        Y1  >signature-external-dsa.xml            Y1  >  >  >Thomas Maslen  >DSTC      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      The deadline for the first round of Requirements submissions has closed. [1]  The second round will close on the 18th at which point I will prepare it for  publication as a W3C NOTE and ietf-draft. Feel free to send the list any  additions/oppositions to that which is present. [2]    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/1999AprJun/0004.html  [2] http://www.w3.org/Signature/Drafts/xml-dsig-requirements-990601.html                1. Introduction       The XML 1.0 Recommendation [[33]XML] describes the syntax of a class     of data objects called XML documents. The mission of this working     group is to develop an XML compliant syntax used for representing     signatures on Web resources and portions of protocol messages     (anything referencable by a URI) and procedures for computing and     verifying such signatures. Such signatures will be able to provide     data integrity, authentication, and/or non-repudiatability       2. Design Principles and Scope        1. The specification for XML-DSig shall describe how to digitally         sign an XML document. [Charter]      2. The meaning of the signature is very simple:  The XML signature         syntax associates the cryptographic signature value with Web         resources using XML markup. The meaning of the signature may be         extensible by a set of semantics specified separately. [Charter]      3. An XML-Signature can apply to parts of XML documents. [Charter]         The solution shall enable authentication of part or totality of an         XML document.   [Brown]      4. More than one signature may exist over any resource. [Charter] The         solution shall provide for extended signature functionality such         as co-signature, endorsement, plurality of recipients, etc.         [Brown]      5. The specification will not specify methods of serialization or         canonicalization. XML content is normalized by specifying and         appropriate content C14N algorithm [[34]DOMHASH, [35]C14N];         applications are expected to normalize application specific         semantics prior to handing data to a XML-DSig application.         [Charter]           3. Requirements    Signature Data Model and Syntax        1. XML-Signature will use the RDF data model [RDF] but need not use         the RDF serialization syntax. [Charter]      2. XML-Signature referants are URIs.  [Reagle]      3. Whenever possible, any resource or algorithm identifier is a URI.         [Reagle]      4. The solution shall enable authentication of internal and external         resources by use of the Manifest. [Brown]           Format        1. An XML-Signature is XML. [Charter]      2. The solution shall provide a mechanism that eases the production         of composite documents that consist of the combination by addition         or deletion of authenticated blocks of information, while         preserving verifiability of the origin and authenticity of these         blocks of information. [Brown]           Cryptography        1. The solution shall provide indifferently for digital signature and         message authentication codes, considering symmetric and asymmetric         authentication schemes as well as dynamic negotiation of keying         material. [Brown]           Processing        1. In the event of redundant attributes within the XML Signature         syntax and relevant cryptographic blobs, XML Signature         applications prefer the XML Signature semantics. [Reagle]                               _________________________________________________________  Joseph Reagle Jr.     Policy Analyst      mailto:reagle@w3.org  XML-DSig Co-Chair   http://w3.org/People/Reagle/        

      Would anyone be interested in presenting on XML Signature? (I generally  don't forward or encourage CFPs to the list unless they are relevant to  getting information about our work product out.)      Forwarded Text ----                    C  A  L  L       F  O  R       P  A  P  E  R  S                                   The Internet Society            2001 Network and Distributed System Security Symposium                                  (NDSS'01)                                 February 7-9, 2001                      Catamaran Resort, San Diego, California                                     IMPORTANT DATES             Paper Submission due:           August 2, 2000             Author Notification:            September 27, 2000             Camera-ready final papers due:  October 31, 2000         GOAL:      This symposium will foster information exchange among researchers      and practioners of network and distributed system security      services.  The intended audience includes those who are interested      in the practical aspects of network and distributed system security,     focusing on actual system design and implementation, rather than     theory.  A major goal of the symposium is to encourage and enable      the Internet community to apply, deploy, and advance the state of     available security technology.  The proceedings of the symposium      will be published by the Internet Society.      Submissions are solicited for, but are not limited to, the following   topics:    * Secure Electronic Commerce: e.g., payment, barter, EDI,      notarization/timestamping, endorsement and licensing.    * Intellectual Property Protection: protocols, schemas,      implementations, metering, watermarking, other forms of rights      management.    * Implementation, deployment and management of network security      policies.    * Integrating Security in Internet protocols: routing, naming,      TCP/IP, multicast, network management, and the Web.    * Attack-resistant protocols and services.    * Special problems and case studies: e.g., interplay and tradeoffs      between security and efficiency, usability, reliability and cost.    * Security for collaborative applications and services: tele- and      video-conferencing, groupwork, etc.    * Fundamental services: authentication, data integrity,      confidentiality, authorization, non-repudiation, and availability.    * Supporting mechanisms and APIs: key management and certification,      revocation, audit trails and accountability.    * Public Key Infrastructure.    * Integrating security services with system and application security      facilities and protocols: e.g., message handling, file      transport/access, directories, time synchronization, database      management, boot services, mobile computing.    * Security for emerging technologies: sensor networks, specialized      testbeds, wireless/mobile (and ad hoc) networks, personal      communication systems, and large heterogeneous distributed systems.    * Intrusion Avoidance, Detection, and Response: systems, experiences      and architectures.    * Network Perimeter Controls: firewalls, packet filters, application      gateways.    * Virtual Private Networks.         BEST PAPER AWARD:     There will be a best paper award again this year. The award will     be presented at the symposium to the authors of the best overall     paper as selected by the Program Committee.         SUBMISSIONS:     The Program Committee invites both technical papers and panel     proposals. Technical papers should be at most 20 pages long. Panel     proposals should be at most two pages and should describe the     topic, identify the panel chair, explain the format of the panel,     and list three to four potential panelists. Technical papers will     appear in the proceedings. A description of each panel will appear     in the proceedings, and may - at the discretion of the panel chair     - include written position statements from the panelists.        Each submission must contain a separate title page with the type     of submission (paper or panel), the title or topic, the names of     the author(s), organizational affiliation(s), telephone and FAX     numbers, postal addresses, e-mail addresses, and must specify the     contact author in case of multi-author submissions. The names of     authors, affiliations, and other identifying information should     appear only on the separate title page. Submissions must be     received by August 2, 2000, and must be made via electronically     in either PostScript or ASCII format. If the Committee is unable     to print a PostScript submission, a hardcopy will be requested.     Therefore, PostScript submissions must arrive well before the     deadline.        Submission information can be found at     http://www.isoc.org/ndss01/cfp. Dates, final call for papers,     advance program, and registration information will be available     soon at http://www.isoc.org/ndss01.        Each submission will be acknowledged by e-mail. If acknowledgment     is not received within seven days, please contact the program     Co-chairs as indicated below. Authors and panelists will be     notified of acceptance by September 27, 2000. Instructions for     preparing camera-ready copy for the proceedings will be sent at     that time. The camera-ready copy must be received by October 31,     2000.         GENERAL CHAIR:      Stephen Welke, Trusted Computer Solutions      PROGRAM CO-CHAIRS:     Avi Rubin, AT&T Labs - Research     Paul Van Oorschot, Entrust Technologies      TUTORIAL CHAIR:     Eric Harder, National Security Agency      LOCAL ARRANGEMENTS CHAIR:     Thomas Hutton, San Diego Supercomputer Center      PUBLICATIONS CHAIR:     Mahesh Tripunitara, Purdue University      PUBLICITY CHAIR:     David Balenson, NAI Labs, Network Associates      LOGISTICS CHAIR:     Carla Rosenfeld, Internet Society      PROGRAM COMMITTEE:     Bennet Yee, University of California San Diego     Bill Cheswick, Bell Labs     Dave Kormann, AT&T Labs - Research     David Aucksmith, Intel Corportation     David P. Maher, Intertrust     David Wagner, UC Berkeley     Edward W. Felten, Princeton University     Fabian Monrose, Bell Labs     Gary McGraw, Reliable Software Technologies     James Ellis, Sun Microsystems     Kevin McCurley, IBM Almaden Research Center     Matt Bishop, UC Davis     Mudge, L0pht Heavy Industries, Inc.     Peter Gutmann, University of Auckland, New Zealand     Radia Perlman, Sun Microsystems     Sandra Murphy, Network Associates     Tom Berson, Anagram Laboratories     Virgil D. Gligor, University of Maryland     End Forwarded Text ----    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Martin,    I included thing.ANYs such that those things where we want to use extensible  content models can be easily tweaked.     <!-- These entity declarations permit the flexible parts of Signature       content model to be easily expanded -->    <!ENTITY % Object.ANY '(#PCDATA| SignatureProperties| Manifest)*'>  <!ENTITY % Method.ANY '(#PCDATA|HMACOutputLength)*'>  <!ENTITY % Key.ANY '(#PCDATA|DSAKeyValue|RSAKeyValue)*'>      The DTD including these entities (that I'm rapping into the next version) is  at:    http://policy.w3.org/WD-xmldsig-core-200003plc/xmldsig-core-schema.dtd    Thanks for your help!    At 10:53 PM 4/13/00 +0900, Martin J. Duerst wrote:   > Basically, what you do is the following. At any place you want to   > have ANY, you put something like:   >    > <!ELEMENT Object %Object.ANY; >   >    > Then *before* that, in the same file, you declare as follows:   >    > <!ENTITY % Object.ANY "EMPTY">   >    > Use EMPTY or whatever appropriate for the 'null' case.      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      I realized my reference to WG might be confusing here: while I was trying to   write signature instances and DTDs/schemas for the Signature WG, the Schema   WG had updated their DTD while using the same namespace, causing previously   working instance I had written to fail. But now things are much clearer as   expectations about the stability of a namespace are explicit [1]. In the   working draft stage, a WG should state how likely a given namespace is to   chage, and once a spec hits CR, the namespace must be stable with respect to   any affects it has on previously conforming instances and processors.    Joseph wrote before:  >A dated (or versioned, or RFC allocated) specification has a specific and   >frozen meaning. Prior to clarification of W3C's policies, I had written   >instances using schema that were valid at a given time for a given   >namespace. The WG then changed the DTD behind that namespace invalidating   >the examples I wrote that used to work! My examples should've continued to   >be valid under that namespace, and they should've created a new one.    [1] http://www.w3.org/1999/10/nsuri    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      For the face-to-face: those who represent themselves as being unfamiliar  with these resources in their comments may be asked to wear a dunce cap --  excepting Chairs. <smile>    XML-Signature Requirements           http://www.w3.org/TR/xmldsig-requirements  XML-Signature Scenarios           http://www.w3.org/Signature/Drafts/xmldsig-scenarios-990818.html  XML-Signature Data Model Design           http://www.w3.org/Signature/Drafts/xml-dsig-datamodel-990823.html  Canonical XML           http://www.w3.org/TR/xml-c14n  The Syntax Proposal Thread and Solo's New Version (a few days?)    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/1999JulSep/thread.html#1  46        _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      1. http://www.w3.org/TR/2000/REC-ATAG10-20000203/          W3C Recommendation GIF completely tiles the TRs           background (unreadable)  2. Spelling Error in documentation:          Proxy domain list: Gives a list of space separated domains where you           want to us/+e+/ or not use your proxy.    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      http://www.w3.org/Signature/2000/02/CanonicalXML-comments.html    Canonical XML-comments       Author(s):            Ed Simon, Entrust <ed.simon@entrust.com>       The [3]XML Signature WG has reviewed the [4]19 January 2000 draft of     Canonical XML. Though we have     some non-mandatory concerns about normalizing character encodings, we     feel the draft meets our requirements for doing "XML aware     canonicalization." (We will also specify a minimal [5]canonicalization     that treats the content as text only.)        For the record, this note includes a summary of our discussions      regarding two topics related to Canonical XML. The first topic      is the character encoding one just mentioned; the second deals      with the treatment of serializing XPath returns.            Normalization of character encoding ([6]section 5.1 of          Canonical XML issued 19 Jan 2000):            The XML Signature WG sees no signature or security implications            with respect to the normalization of character representation.            However, as a community of XML application developers we are            concerned that requiring implementors to do such normalization            may be introducing more complexity than is reasonable for the            stated benefit. No Working Group member has advocated the            character normalization as specified and a few members have            expressed concern about its requirements on limited processors.           Canonicalization of XML Fragments:            The XML Signature WG discussed whether our requirement to            serialize and canonicalize the results of XPath expressions            (particularly node-set results) should be met by Canonical XML.            We determined that if even if the serialization and            canonicalization of XPath results is an issue for the XML            Signature WG, it needs to be resolved by the XML Signature WG            and is not an issue for the Canonical XML WG.       In summary, we thank the Canonical XML WG for their efforts and look     forward to further implementation experience and reports -- both from     our own community and others.            _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 08:09 6/22/2001, Gregor Karlinger wrote:  >Joseph,  >I cannot see any changes in revision 1.85 of the draft document ?!    Weird, it was in version 1.84 even, but got lost in 1.85 when I introduced   Don's generalizations with respect to canonical xml. I wish I was better   about commenting the versions, or had a useful htmldiff tool. (Though this   is one of the reasons I send the editing trivialities to the list such that   I folks can check me, and it laters helps figure out what happened.) So, I   don't think I've lost any other recent edits, and the following should be   correct:    [           $Revision: 1.86 $ on $Date: 2001/06/22 13:57:25 $           http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html#sec-X509Data  ]    --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      I've posted a small analysis [1] of the options we have with respect to   reusing ds:KeyInfo. In the end, the XML Encryption WG could go the easy   route and opt for option 1/2. However, I personally think this is slightly   unfortunate and I think the dsig spec/schema should permit extensions as   shown in option 3, but I'm not quite sure how to do it given dsig's use of   ANY.    All thoughts are welcome.    http://www.w3.org/Encryption/2001/03/sigenc/    __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

        'Section 6.4.2 PKCS1' has long stated that an example will be provided? Does  anyone care to provide one, or should we delete that editorial note? (Also,  we do want to call this section 'PKCS1' right?)            The output of the RSA algorithm is an octet string. The           SignatureValue content for an RSA signature shall be the           base64 encoding of this octet string. Example: TBD     _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      The XML Signature WG has been solicited for Last Call Review on the   following specification:    Character Model for the World Wide Web 1.0  W3C Working Draft 26 January 2001  http://www.w3.org/TR/2001/WD-charmod-20010126  The Last Call period ... ends 23 February 2001.    You would have to make your comments available to the XML Signature WG by   February 19th, and barring any substantive discussion/concern on the list,   the Chairs will forward it on to the I18N Group by the 23rd.    If you are willing please let Don and me know by this Wednesday the 31st.    __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      Completing an action item from last week's xmlenc f2f:    http://www.w3.org/Encryption/2001/Minutes/0720-Redwood/minutes.html#forwarding    >After further discussion, the group agrees to include a  >statement akin to, "the presence of encryption does not imply  >anything about integrity or authenticity of the message" and  >include a reference to those sections ("see what you sign") of  >xmldsig; add a sentence in XML-dsig with this recipient issue as an  >example. Action Reagle: do the edits to xmlenc and  >xmldsig specs.      Encryption now reads:  http://www.w3.org/Encryption/2001/Drafts/xmlenc-core/Overview.html#sec-Security    >6.1 Relationship to XML Digital Signatures  ...  >Also, recipients of encrypted messages must remember that  >encryption itself does not imply anything about the integrity or  >authenticity of that data [XMLDSIG, 8.1.1 Only  >What is Signed is Secure].      DSig now reads:  http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html#sec-Secure    Second, information that is not signed but part of an  envelope containing signed information is obviously not secured.  For instance, unsigned recipient headers accompanying signed  information within an encrypted envelope does not have its authenticity or   integrity protected.    --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      http://www.w3.org/TR/2000/WD-xmldsig-core-20000918/    W3C Status of this document        This specification from the IETF/W3C XML Signature Working Group is a      second last call that ends on November 5, 2000. We ask Working Group      members and other readers to review our approach to all issues raised      by the first last call and, more substantively, consider changes      resulting from the recent Canonical XML last call upon which this      specification is dependent. Barring substantive comment (we expect      little), we will request Candidate Recommendation status as soon as      possible (following the Canonical XML request). However, we do wish to      ensure that readers are aware of following three changes:       1. We've changed the Reference Processing Model (section 4.3.3.1). to          permit the presentation and acceptance of XML node-sets between          Transforms (and resulting from some URI References) when          appropriate.            1. We accomplish this by heavily relying upon the XPath               specification but still do NOT require a conformant XPath               implementation.       2. We've revised the treatment of pre-pended algorithm object          identifier within the encoded RSA SignatureValue by the PKCS1          algorithm (section 6.4.2).       3. We've revised the X509Data element (section  4.4.4) to clarify the          treatment of certificate "bags" and CRLs within that structure.    ...    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 17:45 99/09/08 -0400, david.solo@citicorp.com wrote:   >> At 12:06 99/09/07 -0700, John Boyer wrote:   >>  >>Consensus. The reference from SignedInfo will just be a    >> URI. This can then   >>  >>  point to a manifest or package which can use Xlink/Xptr/Xpath as   >>  >>appropriate.     This means you don't have to worry about    >> Xptr in the core   >>  >>signature syntax.   >>  >Perhaps I misunderstood what that meant.  Did you just mean    >> that we could   >>  >punt the problem of having to make up a syntax for    >> exclusion?  Please   >>  >clarify.   >>    >> For the core syntax yes.   >   >I agree we need to clarify the types of references in the spec (on the  todo    >list).    I'm sorry, are you saying exlusion/XPtr is in the core syntax, or not?      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 15:32 2000-06-07 +0100, Henry S. Thompson wrote:   >There is no debate that the referent of a barename XPointer == XPath   >id() function is a nodeset consisting of a single element node (or   >none).    My initial confusion resulted in not understanding what the "analog of the  HTML fragment identifier behavior" [2] meant. John pointed out it didn't  mean what I thought it meant, and you and Daniel have confirmed that.    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000AprJun/0212.html  [2] http://www.w3.org/TR/xptr#synth-2.1.2     >And in the   >XPath data model, just like the Infoset, when you point at something,   >you implicitly point at everything you can access from it.    Could you cite the text you are referring to for the sake of completeness?     >I think for me to help further with this, I need to see the referenced   >correspondence from James and Steve -- is it in the dsig archive?    I don't think there was any correspondence from James or Steve.      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      The latest draft has been published at: (ietf-draft should follow shortly)          http://www.w3.org/TR/2000/WD-xmldsig-core-20000208/   We are trying to go to institutional last call by February 21st. This is a  representation that we are fairly satisfied and we think we've met our  requirements; the rest of the world should speak up now before we move  forward.     Before that of course, the WG needs to be satisfied. I understand Eastlake  (or others) might try to post a plug/play proposal on URI/IDREF, and Boyer  might post a proposal to move XPath results back to our own serialization.  If we can get those proposals in and discuss before the deadline, that'd be  great. If not, we can note that in our last call (or delay it a week if  absolutely necessary.)    Otherwise, this is your last chance to document dissatisfaction with the  design as specified. That "minority report" will then qualify the semantic  of "The WG is satisfied and thinks we've met our requirements." I'm not  expecting a new last minute concern at this point since we've asked this  question many times, but just to make it clear we are moving forward!    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 12:03 PM 6/16/99 -0700, Bugbee, Larry wrote:   >  1. If person A signs a portion of a document and it is    >     altered and signed by B, will you be able to later    >     know what A signed?      If their alteration causes a change in the byte value of the canonical XML,  they will invalidate A's signature. There are two options, they retain A's  content/signature and modify/sign a variant copy, and pass both on. Or they  keep A's copy, and represent the diffs using something like XSL. For  instance, if you created a document and signed it, and I wanted to tweak it  or annotate it, perhaps I could do this using a chunk of XSL or XML/XPtr  annotations which I can then sign. I'm hoping some of the application  developers in the group would have more thoughts on this.    We specify no requirements on any of this presently, though I'm open to  suggestions.     >  2. Are there plans to incorporate timestamps stronger    >     than a simple ASCII date/time?  (3rd party notaries)    My opinion is that sophisticated time stamps are trust-decision semantics  that should be layered atop the signature validity work. I'll try to reflect  this in the RD.     >  3. Does this activity plan to address the encryption of    >     selected XML content?  Should it?  Or should there   >     be an explicit statement that confidentiality is not    >     being addressed?     Good thing to state regardless, not sure how everyone feels. Presently, we  are not addressing confidentiality though Brown asserts it is easily  achievable with the elements in his proposal.  _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 14:15 99/08/18 -0500, Richard D. Brown wrote:   >Why is it more than an element?     It might be nested elements.     >Conversely, an XML fragment might comprise part of an element as well as   >spanning multiple elements (in part or in whole).    right, that is why I constrained the well-balance definition with beginning  with an element.      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 14:44 99/10/01 -0700, Barb Fox (Exchange) wrote:   >Abstracts usually include the following text:    >   >The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",   >   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this   >   document are to be interpreted as described in RFC 2119.    Right, so we are missing "mandatory", we we might as well change to  REQUIRED. I'll change this in the spec.        _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 16:42 3/13/2001 +0000, merlin wrote:  >Hi Joseph/Brian/Hans,  >  >I attach two gzipped tarchives containing some sample signatures  >based (hopefully) on the current editor's draft of the spec:  >  >   http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html  >  >Relevant namespaces are:  >  >   <!ENTITY c14n "http://www.w3.org/TR/2000/CR-xml-c14n-20001026">    Merlin, now that the C14N is a REC, would you mind regenerating using:           http://www.w3.org/TR/2001/REC-xml-c14n-20010315  (Including the RSA/DSA example for           http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html#sec-Schema   )    __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 20:07 99/09/16 -0400, Ed Simon wrote:   >Element and attribute names should be lowercase, complete   >English words, where each word is separated by a hyphen.     >(I think this is the preferred W3C way.)      Show me where. (In general, I'd like people to reference the things they  talk about as much as possible.) What I see is:    http://www.w3.org/TR/html40/struct/global.html   single words   CAPS for element names   lowercase for attribute names    http://www.w3.org/TR/REC-smil/   single words, hyphenated in a few instances   lowercase all    http://www.w3.org/TR/REC-MathML/chap3_1.html   single words/acronyms   lowercase for all     >So for example,    ><sigblock> should really be <signature-block>.    I tend to like short names, but your comment for spelling things out is not  the first. I've cc'd chairs because at a MIT meeting this week we joked that  we would save _many_ hours of discussion time across all the W3C WGs that  flip-flop on issues like this. A few people have been pushing for optional  though standardized style and editorial conventions across all W3C  specifications, as shown in [1]. I'd add this topic to the list, but  progress has been slow. I'd love to see some usability research on this  stuff actually.    [1] http://www.w3.org/Guide/Reports.html#style    ____    From: Ed Simon <ed.simon@entrust.com>  Date: Thu, 16 Sep 1999 20:07:38 -0400  Subject: RE: minor naming point (why full names are important for archivin  g)  Status:  O    Element and attribute names should be lowercase, complete  English words, where each word is separated by a hyphen.    (I think this is the preferred W3C way.)  So for example,   <sigblock> should really be <signature-block>.    The importance of making names as legible as possible was   brought home to me by some presentations I saw on those   who archive documents.  Included among the great, grand   features of XML are that ideally it is both machine-readable   and human-readable, and that it minimizes the problem of   effectively losing data just because the technology to   read that data has become lost.  Unlike me and others   who love the "let's change everything every five years"   world of high-tech, archivists are all too familiar   with the experience of having billions of bits that   cannot be comprehended because the technology to read   them has been lost.  I heard one fellow representing   the US Patents and Trademarks Office say that his   documents needed to last the lifetime of the Republic   and that as long as English was understood, the Office's   electronic patent information archives could be understood  because it was encoded in XML.    Digital signatures are invaluable for securing archives;   frankly, archiving is one of their most important uses.  I expect archivists would strongly prefer we use full  names rather than ones meaningful only to those of us  involved in standards work.    Ed        _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 16:28 7/26/2000 +0000, Ed Simon wrote:  >Ed responds:  >If we can enforce, to a reasonable degree, that XSLT <Transform>s indeed  >have  >a <stylesheet> root element, then I think the derived benefits of  >interoperability more than outweigh the cost of two or three more lines in  >the schema.  (It would certainly be nice is XSLT did provide a schema and  >I hope they do in their next Recommendation version.)    Hi Ed, just cleaning the last spider webs of my issues list as we prepare to   request advancement. As Henry never responded with respect to using schema   to limit the specification of <any> to a specific root element (transforms)   I expect to advance with the following (recommending using prose; I'm   hestitant to specify mandataory schema requirements in anything but schema)   unless you have a counter-proposal:    4.3.3.4 The Transforms Element  ...      <element name='Transform'>        <complexType content='elementOnly'>          <choice minOccurs='1' maxOccurs='unbounded'>            <any namespace='##other' processContents='lax' minOccurs='0'                 maxOccurs='unbounded'/>            <element name='XSLT' type='string'/>            <!-- should be an xsl:stylesheet element -->            ...    6.6.5 XSLT Transform           Identifier:           http://www.w3.org/TR/1999/REC-xslt-19991116    The normative specification for XSL Transformations is [XSLT]. The XSL   stylesheet or transform to be evaluated appears as the character content of   a transform parameter child element named XSLT. The root element of a XSLT   stylesheet SHOULD be <xsl:stylesheet>.    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Hi John,  >I think that this poll should be reissued with these points made clear.  In  >particular, the Poll should state that this decision must be made before  >request for CR status of C14N and DSig-- the choice that people make should  >be constrained so that it applies to both specs.    Actually, I'd like to have people choose between the two options I   presented, though they certainly should take into account what you say (and   others in the discussion), and can even change their position before   Wednesday during the discussion. If it becomes clear in others' responses   that no coherent resolution is forthcoming because of my formulation, we   could try again with a different one.    At 14:48 9/15/2000 -0700, John Boyer wrote:  >ii) For this reason, I am suggesting that we say only that absolute URIs are  >required, and support for relative URIs is RECOMMENDED, but that those who  >support them MUST do so by providing the original string.  If the W3C later  >decides to support relative URIs (and most other strings) in some way, then  >that must correspond to an issuance of C14N v1.0.1 under a different URI  >since, as I said before we cannot have C14N v1.0 change behavior without  >breaking signatures created between now and when the W3C makes this  >decision.    I want a sense of the two questions I asked. If everyone favors (2), we   could consider this proposal further. However, even then I'd have concerns as:    1. This type of conformance constraint is complex IMHO. People have   expressed a desire for canonicalization algorithms that do one thing and do   it well. I fear this additional level optionality where we say to implement   this OPTIONAL feature you MUST do this. (The xmldsig spec is starting to get   like this with respect to Recommending XPath to implement a REQUIRED feature.)  2. Part of the 'philosophical' argument I stated for (2) was that we were   being all-together URI unaware. This might be a spurious argument, however   your proposal places us closer to the scope of the Plenary decision, and   more obligated to adhere to it I think.    >iii) The question is not whether people have a problem with relative URIs in  >namespaces.  The question is whether it is inconvenient that documents  >containing most of the reasonable namespace names that people would use,  >other than actual absolute URIs, cannot be signed.  You made it clear in the  >choice for 1 but not in the arguments for 2.    Yes, people should realize that if they have a document  with a relative URI   in a namespace of the type xmlns="../foo" or even xmlns="bar" then option   (1) means there is no canonical form. However, everyone else respecting the   plenary decision has the same issue. It's a heavy cost, but the only one the   Plenary could come to agreement on to close that issue and move on.    >iv) This is not simply a question of whether c14n does this.  A consequence  >of permitting c14n to retain the original string is that dsig must do the  >same thing.  This is due to the existence of same document references,  >including enveloped signatures.    This is true. However, it furthers the statement that option (1) means this   class of comments can not be signed as already stated, "There are documents   out there that use relative URIs and need to be signed." So I don't see a   need to reformulate the poll yet.      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 02:43 6/5/2001, Dournaee, Blake wrote:  >I am a bit concerned with the use of the term "signer authentication" in the  >dsig recommendation. These two sentences from the dsig (coupled with the   >definition of "signer authentication" from the glossary) seem to contradict  >each other:  >  >"... XML Signatures provide integrity, message authentication, and/or signer  >authentication services for data of any type.."  >  >"The XML Signature is a method of associating a key with referenced data  >(octets); it does not normatively  >specify how keys are associated with persons or institutions..."    An admittedly labored, but intended, reading of this is to note the "and/or"   in the first clause. So XML Signature can contribute to signer   authentication decision but is not necessarily sufficient. I've tweaked the   definitions to make this clearer, and added links to those definitions in   the first clause:    [Resulting document:          http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html          $Revision: 1.66 $ on $Date: 2001/06/05 18:41:28 $ by $Author: reagle   $        Authentication Code (Protected Checksum)             A value generated from the application of a shared key to a             message via a cryptographic algorithm such that it has the             properties of [349]message authentication (and [350]integrity)             but not [351]signer authentication. Equivalent to protected             checksum, "A checksum that is computed for a data object by             means that protect against active attacks that would attempt to             change the checksum to make it match changes made to the data             object."  [[352]SEC]          Authentication, Message             The property, given an [353]authentication code/[354]protected             checksum, that tampering with both the data and checksum, so as             to introduce changes while seemingly preserving [355]integrity,             are still detected. "A signature should identify what is             signed, making it impracticable to falsify or alter either the             signed matter or the signature without detection."             [[356]Digital Signature Guidelines, [357]ABA].        Authentication, Signer             The property that the identity of the signer is as claimed. "A             signature should indicate who signed a document, message or             record, and should be difficult for another person to produce             without authorization." [[358]Digital Signature Guidelines,             [359]ABA] Note, signer authentication is an application             decision (e.g., does the signing key actually correspond to a             specific identity) that is supported by, but out of scope, of             this specification.        Checksum             "A value that (a) is computed by a function that is dependent             on the contents of a data object and (b) is stored or             transmitted together with the object, for the purpose of             detecting changes in the data."  [[360]SEC]        Integrity             "The property that data has not been changed, destroyed, or             lost in an unauthorized or accidental manner." [[367]SEC] A             simple [368]checksum can provide integrity from incidental             changes in the data; [369]message authentication is similar but             also protects against an active attack to alter the data             whereby a change in the checksum is introduced so as to match             the change in the data.  ]      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      The discussion draft is now available at:          http://www.w3.org/TR/1999/xmldsig-requirements-990623   it should be linked from the http://www.w3.org/TR today.    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 10:24 99.08.26 -0700, Bob Relyea wrote:   >semantics of the signature itself. The working group has continued to push   >off the semantics of the signature to the application. If this is the case,   >only the application can choose appropriate c14n algorithms -- and then can   >only interoperate with other applications that agree with its definition of   >the semantics of the signature.    "The meaning of a signature is simple:  The XML-signature syntax associates  the content of resources listed in a manifest with a key via a strong  one-way transformation. " We of course may wish to generalize this to  "associates content" -- regardless of a manifest. The semantics of the stuff  we sign is tricky, we'll have to address some of this for a c14n, manifest,  package, and reference -- and this is where we are things get tricky; so we  want to intrude into this domain minimally. We want to punt on application  semantics all-together.     >But interoperability implies that applications agree on the semantics of  the   >signature as well.    Right, so we are (as lightly as possible) touching on the semantics of  {c14n, manifest, package, and reference} so as to provide a minimal set of  interoperable trust assertion/evaluation functionality. c14n is actually  different than the other 3 in that I do believe it could be done completely  at the application level. If we bungle the definitions of manifest, package,  and reference it makes it difficult for other people to extend what we've  done in terms of data-model/assertions.    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

        Members of the WG (and particularly implementors represented in the interop   matrix), it's important that we know which direction you would like us to   take. So please respond, on the list, to the following poll by end of Monday   June 18th.    With respect to the issue of excluding ancestor context from the canonical   form of a signature[1], the WG should pursue option:    1. Specify the exclusive canonicalization as part of the non-normative (nor   required to implement) dsig-more specification [2].  2.Specify the exclusive canonicalization as part of the normative   xmldsig-core  as proposed in [3] (but with the URIs of [4]) as [REQUIRED,   RECOMMENDED, OPTIONAL]. (This option requires interoperable implementation   of this feature before xmldsig advances.)    Donald & Joseph    [1]   http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html#sec-NamespaceContext  [2] http://www.w3.org/2001/04/xmldsig-more  [3]   http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/att-0293/01-sigport.html  [4] http://www.w3.org/2000/09/xmldsig#excC14N        http://www.w3.org/2000/09/xmldsig#excC14N-WithComments    --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 09:08 5/15/2001 -0400, Donald E. Eastlake 3rd wrote:  >Great! Unless some opposition crops up soon, there is clearly a  >consensus to make this change.    I've updated the editor's copy and schema, and tweaked the natural language,   my only question is should the following text be tweaked as well:    http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html#sec-X509Data  >Note, there is no direct provision for a PKCS#7 encoded "bag" of   >certificates or CRLs. However, a set of certificates or a CRL can occur   >within an X509Data element and multiple X509Data elements can occur in a   >KeyInfo.      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 09:10 99/08/18 -0500, Richard D. Brown wrote:   >> Done. Richard if you object, say so.   >Agreed to some extent. Negotiation tends to imply some form of handshake   >(multiple exchanges) during establishement of the key. However, I think  that   >"agreement" or "exchange" would be more accurate. The method that is used  to   >establish the key is not necessarily based upon mathematics.    I now use agreement.     >Why not simply "An XML-signature must be a well-formed XML element"    There is no definition of "well-formed XML element."      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      The reason I asked was that because in the conformance table [1], I had   nodest input with SHOULD and subsetting with MUST which was sort of confusing:    >Implementations MUST support the octet stream input and SHOULD also support   >the document subset feature via node-set input.  >http://www.w3.org/TR/2000/CR-xml-c14n-20001026#DataModel    With this understanding I'll show subsetting as a mandatory feature, and   node-set input as a optional way of implementing and mark Baltimore with a Y   for both.    [1] http://www.w3.org/Signature/2000/10/10-c14n-interop.html    r/jboyer@PureEdge.com/2000.10.26/10:18:50  >...  > >One of the final editorial tweaks that Joseph asked me to make was to amend  > >the beginning of section 2.1 to make it clear that document subsetting and  > >node-set input meant the same thing.  When I say node-set input is  > >recommended (as opposed to required), I'm saying that a conformant  > >implementation should but is not required to do document subsetting as  > >described in Section 2.4 and exemplified in Section 3.7.  > >  > >Since both of you have working code for example 3.7, I am just writing to  > >ask whether this does indeed mean you created your implementation using  > >XPath node-sets.          __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      [I just realized I forgot to cc: the list. I hope that by the time the  Director and IESG have looked at this and coordinated we'll have a maturer  C14N spec and can normatively reference that specification and use it in the  generation of the non-normative examples ...)    Forwarded Text ----   Date: Thu, 01 Jun 2000 18:13:03 -0400   To: Jeffrey Schiller <jis@mit.edu>, Tim Berners-Lee <timbl@w3.org>,  mleech@nortelnetworks.com, Danny Weitzner <djw@w3.org>   From: "Joseph M. Reagle Jr." <reagle@w3.org>   Subject: Advancement of xmldsig onto Standards Track   Cc: "Donald Eastlake" <dee3@torque.pothole.com>, <lde008@dma.isg.mot.com>,  Scott Bradner <sob@harvard.edu>      The XML Signature WG asks that the XML Signature Syntax and Processing  specification be considered for advanced to Candidate REC and Proposed  Standard. We are now at a point where the design of the Signature syntax and  process is quite stable and we need to encourage further implementation to  discover those ambiguities we are not yet aware of.      In compliance with [b, +3], "Target date for Proposed/Candidate: June 15th  ; Schiller needs to send ballet by June 8th," the XML Signature WG published  a version yesterday for review [1] by the W3C and Area Directors. (The  ietf-draft version [2] has been sent, and should be available at  http://www.ietf.org/ in a day or two.) The document is accompanied by its  Last Call issues document [3], and a preliminary interoperality matrix [4].  Those issues where we expect further implementation experience to be most  helpful are documented in the STATUS of the document [a]. Also, I expect the  issue of joint-copyright needs to resolved in order to advance this document  as well. However, I hope the document will receive your full consideration  such that we can dispatch all issues barring advancement onto the standards  track at once, instead of proceeding through each serially with substantive  latency between each management review.      Thanks!      ___      [1] http://www.w3.org/TR/2000/WD-xmldsig-core-20000601/   [2]  http://www.w3.org/TR/2000/WD-xmldsig-core-20000601/draft-ietf-xmldsig-core-07  .txt   [3] http://www.w3.org/Signature/20000228-last-call-issues.html   [4] http://www.w3.org/Signature/2000/05/30-interop.html      [a] Status of this document         This specification of the IETF/W3C [26]XML Signature Working Group      follows the XML Signature Last Call and attempts to address all      [27]last call comments sent to the list and those issues discussed at      the [28]April meeting. This is the version being forward to the IESG      and W3C Director for consideration as a Proposed Draft and Candidate      Recommendation. During this phase we will hope to gain implementation      experience over the following       1. Ensure that our use of [29]schema namespaces and qualifications          provides a single schema that can be used for [30]enveloped          signatures (signature within content being signed), [31]enveloping          signatures (content is within signature being signed) and          [32]detached signatures (over data external to the signature          document).       2. Further test our employment of URIs, IDs, and XPath       3. Ensure that if the syntax constraints of section 7.1 are followed,          a [33]validating parser is not needed.       4. Clarify remaining ambiguities related to the cryptographic and          keying information       5. Presently, there are interoperable implementations of the 19991115          draft of the Canonical XML [[34]XML-C14N] specification and that          algorithm is used in the examples in this version of the          specification. However, further implementation experience will be          used to refine the 20000601 version [[35]XML-C14N-a] which will          then replace the older version as the MANDATORY canonicalization          algorithm.       6. And demonstrate interoperability over all required and recommended          features.         [b] Forwarded Text ----       Date: Tue, 09 May 2000 14:38:20 -0400    Subject: Results of 20000509 Call on xmldsig    ...        Timing             * How do we enter Candidate REC/Proposed Draft, are they necessarily           bound?              + Schiller needs to create and send a ballet to the IESG one                week prior to May 18th, next date is in two weeks. (We won't                make that).              + Target date for Proposed/Candidate: June 15th                   o Schiller needs to send ballet by June 8th.              + Eastlake/Reagle: need to get Jeff a copy by June 2nd for                review.                   o As that draft shouldn't differ too much from the version                     being published April 10th, Eastlake/Reagle will send                     that version to Jeff, and then publish the June 2nd                     version then point out the (if any) substantive changes                     in the June version by the 2nd.                   o If miss this deadline, push dates ahead two weeks.              + Schiller/IESG needs to say yes; Tim needs to say yes; then                Chairs send publication request to make the document                Propose/Candidate.              + Canonical XML                   o Continue running it through the W3C TR process till                     Candidate REC, then generate an informational RFC.      End Forwarded Text ----  End Forwarded Text ----    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      In [1] Kent asked, "The current specification also permits multiple KeyValue   elements in a KeyInfo element.  What does this mean?" Given we've been   trying to clarify other ambiguities, and with respect to the X509 SKI,   SubjectName, and IssuerSerial, should we also limit KeyValue to occurring   once and applying to the validation key, or should we keep the meaning that   it's simply a "key that may be useful in validating the signature?"    Please respond by end of Tuesday Feb 20th.        [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001JanMar/0052.html    __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 10:51 2/13/2001 -0500, Donald E. Eastlake 3rd wrote:  > >> All X509IssuerSerial, X509SKI, and X509SubjectName elements must refer  > >> to certficiates with the validation key.  However, because you can  > >> have multiple cetificates for the same key in the same X509Data  > >> element, there may be multiple such elements referring to different  > >> certificates or, of course, the same element.  > >I assume you mean "certificate" for that last word.  >Yes.  > >Also, what about something like "No ordering is implied."  >Sounds reasonable.    I'm trying to integrate this paragraph:    >All X509IssuerSerial, X509SKI, and X509SubjectName elements must refer to   >certficiates containing the validation key. However, since multiple   >cetificates for the same key are permitted in the same X509Data element,   >there may be multiple such elements referring to different certificates or,   >of course, the same certificate. No ordering of these element types is   >implied.    with this paragraph:    >Multiple declarations about a single certificate (e.g., a X509SubjectName   >and X509IssuerSerial element) MUST be grouped inside a single X509Data   >element; multiple declarations about the same key but different X509   >certificates (related to that single key) MUST be grouped within a single   >KeyInfo element but MAY occur in multiple X509Data elements.    in a way that is comprehensible, but it's not working too well. Someone else   want to suggest some text?      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      The Core WG has been trying to decide what to do with the Canonical XML spec  as they have many deliverables on their plate and presently we are the only  consumer (though I believe we are only the first, there will be many other  applications with requirements similar to our own.) I hope they will produce  another draft soon, and there is sometimes talk of them handing the spec off  to us, but nothing conlusive so far. However, I did try to update them on my  view of this WG's view of that spec. Any thoughts are appreciated.    Forwarded Text ----   Date: Thu, 06 Apr 2000 18:50:56 -0400   To: w3c-xml-core-wg@w3.org   From: "Joseph M. Reagle Jr." <reagle@w3.org>   Subject: XML Signature use of Canonical XML (Was: Minutes for XML Core WG  telcon of 2000 Apr 5)      [Note: I had an agreement with the Core's predessor (Syntax) for  cross-posting any c14n relevent information to the public list. I'm not  cc'ing this, but will make this information available in some way -- I'd  like to forward it if I could have a similar understanding with the Core WG.  Also, this is only my summary of the WG's position and likely direction, but  not a formal/endorsed statement.]      >...      The XML Signature WG's approach on the c14n issue has been mixed because of  a difference between those who planned to approach the processing of XML in  the Infoset/DOM manner (that requires node serialiazation and  canonicalization), and those that wanted to process it merely as characters  (that required some line feed and CR canonicalization at most.) Our  compromise was to require "minimal" and strongly recommend XML Canonical.      However, during last call (which ended yesterday) there's been substantive  call for removing minimal all together based on implementation experience  [1], though the security concerns associated with XML Canonical are still  raised [2]. I expressed my view that "We've been trying to play agnostic  between XML as XML, and XML as a character sequence, but I believe the spec  should follow the implementations, which seem to be adopting the XML toolkit  (XML as XML) route." [3] Consequently, the advancement of Canonical XML is  very important to us even though we still have our own difficult  consensus/balancing act between XML-as-XML and something some security folks  are comfortable with.      I'm looking forward to the next draft of the spec that resolves some of the  other comments sent during last call [4] (though I know the Core WG is very  busy). Also, the Signature WG identified in our comments  [5] that we're  going to have to figure out some way canonicalize XML fragments (i.e.  serialized returns of XPath), though I'm beginning to wonder if this would  be a useful feature to include in the Canonical XML spec itself? Gregor  Karlinger has suggested that the fragments be wrapped in a declaration and a  specific element from the Signature element type in our case, though that  could be generalized. [6]      [1]  http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JanMar/0214.html   [2]  http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JanMar/0246.html   [3]  http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JanMar/0257.html   [4]  http://lists.w3.org/Archives/Public/www-xml-canonicalization-comments/2000Mar  /   [5]  http://lists.w3.org/Archives/Public/www-xml-canonicalization-comments/2000Feb  /0004.html   [6]  http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JanMar/0156.html    End Forwarded Text ----    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Mr. Diodati,    Excellent question, however I've become involved with the translation  efforts mainly through policy and intellectual property concerns. Since this  is an editorial issue, I'm cc'ing w3c-translators@w3.org and the HTML 4.0  editors. My initial response would to do a literal translation, including  the errors. Another possibility, as you say is to, is to make note where you  made the corrections, perhaps using a different color text or some such  thing, but I am personally less comfortable with that.    At 10:59 AM 3/17/98 +0100, Michele Diodati wrote:   >Dear Mr. Reagle,   >   >my team of volunteers (http://www.liberliber.it/progetti/html40/index.htm)   >is working at Italian translation of HTML 4.0. I would like to know your   >opinion about this important problem: what do we have to do with larger   >known errors listed at   >http://www.w3.org/MarkUp/html40-updates/html40-errata.html? In other words:   >do we try to translate the errors in the original files, although the   >editors themselves have already published corresponding corrections? Or may   >we integrate the already specified corrections into our translation, of   >course clearly specifying, when the case occurs, that the original document   >is a bit different and that our translation keeps trace of W3C's published   >corrections?   >   >I have read your copyright information at   >http://www.w3.org/Consortium/Legal/IPR-FAQ.html#translate; I have also read   >the example at http://www.w3.org/Consortium/Legal/translation-example.html.   >Moreover I want to clearly specify that my question does not regard parts   >of HTML 4.0 english document that we suppose are wrong, but those known   >larger errors listed in html40-errata.html file: my idea, perhaps wrong, is   >that has no sense to translate an error, knowing that it is a known,   >listed, "official" error.   >   >Excuse me for my English and thank you in advance for your answer.   >   >Regards,   >Michele Diodati - Roma (Italy)   >http://www.liberliber.it   >    ___________________________________________________________    Joseph Reagle Jr.  W3C:     http://www.w3.org/People/Reagle/  Policy Analyst     Personal:  http://web.mit.edu/reagle/www/                     mailto:reagle@w3.org        

      Here are my comments that can be combined with others, if made, before   forwarding them on to the I18N groups.    __    http://www.w3.org/TR/2001/WD-charmod-20010126/    I'm very glad to see this specification advanced as it is a very useful   reference -- and educational tool for myself at least. One would think   representing characters is easy, though it's tricky! Consequently, my   comments are mostly editorial and relate to any confusions I experienced as   a reader and could easily be remedied. A few references are made with   respect to sections that realte to XML Signature, but these issues have been   largely addressed by the last call of the XML Signature WG's documents: Core   and Canonical XML.    >1.1 Goals and Scope  >    All W3C specifications have to conform to this document (see section  >    [57]2 Conformance). Authors of other specifications (for example, IETF  >    specifications) are strongly encouraged to take guidance from it.    As an aside, while I strongly support this goal, this sort of requirement is   atypical and maybe should sit somewhere else in part of the W3C   process/guide which is capable of enforcing it?      >3.1.2 Units of a Writing System, and Units of Aural Rendering    Please define phoneme, (as distinct from meaning), and syllabaries.      >3.1.3 Units of Visual Rendering  >[Unicode] requires that characters are stored and interchanged in logical   >order.    Please define "logical order" (or cite definition).      >3.1.5 Units of Collation  >Software developers MUST NOT merely use a one-to-one mapping as their   >string-compare function, as in sorting operations.    What are you suggesting they do? Relying upon human context to determine   order seems rather haphazard. For instance, how do you sort the words in an   English document which contains excerpts from a Spanish document containing   sequences such as "ch" and "ll" which are considered atomic collation units   in their native document, but not the document in which they are in?      >3.2 Digital Representation of Characters  >3. To enable use in computers, a suitable base datatype is identified (such   >as a byte, a 16-bit wyde or other) and a character encoding form (CEF) is   >used, which encodes the abstract integers of a CCS into sequences of the   >code units of the base datatype.    Note "wyde" typo. Much of this summary is fairly easy to understand and is   demonstrated in Appendix A. However, the distinction between CEF and CES is   not very clear and might merit an example -- if it can be done simply,   getting in to endian and BOM might confuse the case...      >3.6.1 Character Encoding Identification  >Because of the layered Web architecture (e.g. formats used over protocols),   >there may be multiple and at times conflicting information about character   >encoding. Specifications MUST define conflict-resolution mechanisms (e.g.   >priorities) for these cases, and implementers and content developers MUST   >follow them carefully.    This requirement can be relevant to dsig that there is a type attribute (of   type URI) that could identify the encoding of an identified resource being   signed. However, the signature text speaks of dsig types, not MIME types   though MIME types when represented as a URI could be included:    >http://www.w3.org/TR/2000/CR-xmldsig-core-20001031/#sec-Reference  >4.3.3 The Reference Element  >. The Type attribute facilitates the processing of referenced data. For   >example, while this specification makes no requirements over external data,   >an application may wish to signal that the referent is a Manifest.    If someone did use this to describe the MIME type, the dsig spec does not   address how to resolve conflicting information and leaves it to the   application.      >4 Early Uniform Normalization  >4.1 Motivation  >This document also specifies that normalization is to be performed early   >(by the sender) as opposed to late (by the recipient).    Note, the dsig specification RECOMMENDS but does not require the signature   be in NFC:    >http://www.w3.org/TR/2000/CR-xmldsig-core-20001031/#sec-XML-Canonicalization  >We RECOMMEND that signature applications create XML content (Signature   >elements and their descendents/content) in Normalization Form C [NFC] and   >check that any XML being consumed is in that form as well (if not,   >signatures may consequently fail to validate).        >4.3 Responsibility for Normalization  >Note: The prohibition of normalization by recipients is necessary for   >consistency, on which security depends.    DSIG is compliant with this:    >http://www.w3.org/TR/2000/CR-xmldsig-core-20001031/#sec-See  >8.1.3 "See" What is Signed  >Consequently, while we RECOMMEND all documents operated upon and generated   >by signature applications be in [NFC] (otherwise intermediate processors   >might unintentionally break the signature) encoding normalizations SHOULD   >NOT be done as part of a signature transform, or (to state it another way)   >if normalization does occur, the application SHOULD always "see" (operate   >over) the normalized form.      >8 Character Encoding in URI References  >This chapter defines how to address this issue in W3C specifications in a   >way consistent with the model defined in this document and with deployed   >practice.    DSIG is compliant with this, see:  >http://www.w3.org/TR/2000/CR-xmldsig-core-20001031/#sec-URI            __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      Please review and send correcttions/suggestions (if you were there) or  comment on the proposals (if you weren't).    http://www.w3.org/Signature/Minutes/000420-Victoria/       [1]IETF [2]W3C          [1] http://www.ietf.org/        [2] http://www.w3.org/                     [3]XML-Signature FTF 20 April 2000 [[4]ascii]          [3] file://I/Overview.html        [4]  http://www.w3.org/Signature/Minutes/000420-Victoria/Overview.html,text    Participants         * Mark Bartel, JetForm Corporation       * John Boyer, PureEdge       * Mariano P. Consens, University of Waterloo       * Donald Eastlake 3rd, Motorola       * Barb Fox, Microsoft       * Mack Hicks, Bank of America       * Gregor Karlinger, IAIK       * Brian LaMacchia, Microsoft       * Joseph Reagle, W3C       * Ed Simon , Entrust Technologies Inc.       * Raghavan "Rags" Srinivas, Sun       * David Solo, Citigroup    Session I: David Solo (tweaks by Eastlake and Reagle)      Document Updates         * IOTP documeents are expected to issue shortly as informational         RFCs including the DOM-HASH document (will be RFC 2803) which         defines a combined canonicalization and hashing.       * Last Call comments/C14N/XPath       * Syntax and Processing - Last Call ended, obviously dealing with         comments, then should do another draft for WG and reviewer         consideration      XPATH         * Draft essentially done.       * Draft coordinated with XSL WG; outstanding issue is representing         characters with a character code value less than 16 (i.e., CR &NL)         with one byte or two bytes (0D or D). Consensus was to follow the         W3C C14N draft and suppress leading zero (i.e. one byte)       * Agreement to generally not be bound by the W3C C14N serialization         (especially with reference to namespaces) although allowed as an         option. Expectation that W3C C14N may align with our         specification.       * Does it have to be a document (single root element)? Limitation is         can't handle a list of elements. Agree to replace "document" with         "element" in draft.      C14N       Management: XML Syntax WG handed off to core WG. C14N is a lower     priority item and may take a while. Question as to whether we take     over C14N/serialization draft. Namespace C14N (rewriting problems)?     Fragment wrapping? Should we have multiple drafts? For processing     signedInfo, do we expect XML processing or do we allow a "simpler"     handling. Phil Hallam-Baker claims security issues. Kent concerned     about having to implement something non-standard - parsers don't     currently provide raw character stream access necessary to deal with     "minimal C14N".       There are likely to be multiple environments, some where parsers are     prevalent, but perhaps others with more of a messaging orientation     where simplified processing is desired or where tools aren't     available. Should the specification still support both cases (and both     serializations) and allow application environments to specify?       Perhaps issue is minimal and full C14N are both mandatory. Is there an     environment in which minimal is both necessary and appropriate?       Poll: (note: Full C14N assumes a "repaired" C14N draft that meets with     our satisfaction)       * Who would like full C14N to be only method: Yes-6/No-5       * Who would like full C14N to be REQUIRED and minimal be OPTIONAL:         Yes-11/No-0 . Add language about support for minimal (or other         similar C14N algorithemss relating to security concerns (entity         references; DTD linkage; spoofing through comments with SignedInfo         tag)).       Idea from Mark Bartel that signers wanting lightweight processing     model should just always produce and (expect to) consume fully     C14N'ized XML. Widespread support for this model       David Solo to draft paragraphs.       Should we change 4.3.1 to default to Full C14N?: Yes.        Fragments       How to wrap a list of elements/attributes to create a single element     -> How to take the output of XPath and create valid XML. If the output     is not proper XML, should it be an error? No, but next processing step     may generate an error. New C14N/serialization spec will work on any     node set.        Namespace rewriting       C14N of namespaces. Renaming labels is a problem John will propose a     solution for (probably don't do any label changes). Is there such a     thing as a normalized NS?       Perhaps separate charset normalization from other C14N/serialization?        Character normalization       Proposal to remove character representation issues from the C14N spec     A second optional, unspecified transform for references to perform     charset normalization could be defined later since no charset     representation/composition normalization need be applied to     signedInfo! C14N will still do UTF8 encoding. Maybe just a URI issue     within signedInfo? No, because draft says use UTF-8 for URIs and then     escape all non-ASCII characters that result. Question about     recommending "normalized form C" for UTF-8 (always compose characters)     because its relatively easy to create, but hard to convert.  Need to     run this by the I18N group.       Recommendation: Remove general charset representation from C14N A     future transform could address UTF8 conversion to normalized form C.     C14N will still do UTF-8 conversion Recommend documents use normalized     form C (already a W3C guideline) with early normalization and W3C     character model; including SignedInfo.       John Boyer will take on editing of C14N spec and propose     recommendations for fragments and namespaces.       Reiterated document should not talk about invalid and un-verifiable     signatures. Left to the individual implementation.       Problem raised by FSML regarding what happens if I have multiple     signed documents with colliding IDs that I want to merge into a single     signed document. Answer: if you have this problem, then you should be     able to generate unique IDs. Please post examples to list where this     solution is not satisfactory and how the Signature WG can easily     remedy the problem.    Session II: Ed Simon (tweaks by Eastlake and Reagle)      Key Info: Last Call Issues presented by Barbra Box and Brian LaMacchia       KeyInfo mandatory to recognize, optional to include; KeyValue     mandatory, X.509, PGP optional. KeyInfo is a "hint" to get the right     public key for validation.       Past issues that are now non-issues:       * Key Value: Trust Managements Issue       * Key Value: Semantically Neutral       * DSA Parameters        X.509 Data Choice        1. Fix the schema to support X.509 data choice      2. Need comment to say if you are enclosing multiple pointers to the         same certificate, they should to in the same <X509Data> element.         Pointers to different certificates should be in different         <X509Data> elements. Barb Fox will fix draft text.        Retrieval Method         * Have <RetrievalMethod> specify location, method, and type info.       * We need to specify a number of retrieval methods. Barb Fox will do         this. A <RetrievalMethod> type that returna a <KeyInfo> element         was proposed and agreed to.       * Schema will allow both <X509Data> and <RetrievalMethod> elements         to be specified in a <KeyInfo> element.        Codings with KeyInfo         * Need to define encoding issues for integers, bitstrings. Brian         LaMacchia pointed out a number of <KeyInfo> attributes that need         to be added (see <link to slides>). Brian and Barb will re-draft         for May 1st.        SPKI         * Cal Ellison wants an <SPKIData> element. Consensus was to add but         let SPKI WG decide schema for that element.    Session III (13:00): Donald Eastlake (tweaks by Reagle)       Karlinger: Eastlake to fix 7.1 re XML 1.0 whitespace.       Internationalization: It is suggested that we change Transforms to     TransformList, SignatureProperties to SignaturePropertyList, etc., for     easier understanding. Participants appreciate concern but consensus at     meeting is not to change due to existing examples and code.       XPath Identifier: To simplify the embedded siganture case, create an     algorithm identifier defined to do the equivalent of an XPath     expression that elininates the signature value of the signtaure it     appears in. [Later investigation indicated that it may not be possible     to do this with a generic XPath expression but an example can still be     given.]       MimeType/Charset/Transfrom processing model. Martin Durst comments...     Consensus: drop attributes and provide as parameters to transforms     that need them. Eastlake to draft a new version of 4.3.3.1.       Conseus to Drop Quoted Prinable. It appears not to perform any     function which could not be met with entities.       Syntax for open content: Instead of ANY or #PCDATA use %Object.ANY so     content can be externally defined.       Consensus to state that if section 7.1 syntax constraints are     followed, a validating pareser is not needed.       Is Schema or DTD normative? Schema should be normative.       XSLT: Leave in XSLT Transform. Comment that if output is going to be     digested, it should be canonicalized first.      13:45 - Interoperability       Reagle: need implementations. Can do on list or have web or other     automated interface.       On the need for test vectors and interoperability cases. A complete     matrix is probably not needed for a while if multiple people on     different platforms bang on it.       People waiting for CR, but should start in the meantime (sending     examples to the list).      13:55 - Calendar         * W3C Canonical XML draft - Boyer to discuss with Reagle.       * Key Info - new text by May 1st.       * 4.3.3.1 - new text by May 1st.       * Lastest Schema - before May 12th (when Joseph goes to Amsterdam)      14:00 - Adjourn          _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 13:36 8/31/2000 +0200, Gregor Karlinger wrote:  >Why is the content model chosen for the Transform element "mixed"?    The theory was that people might want to provide elements or charactered   data (or both) since we could not anticipate the various expressions and   transforms applications might want to perform.    >All other elements which describe an Algorithm, like  >  >* SignatureMethod  >* DigestMethod  >* CanonicalizationMethod    But that these were rather straightforward.    >is "elementOnly". My way of thinking is that if I would like to  >specify parameters for an algorithm, I have do invent an Elemenent  >which I can then put into the Transform Element representing the  >algorithm.  >  >Why is it allowed to specify text as parameter content for a  >Transform, whereas it is forbidden for all other types of algorithms?    There's no compelling argument that this must be the way it is. Are you   suggestion we move all the Methods to mixed as well?      _________________________________________________________  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 17:08 00/03/26 +0300, Juha P??j?rvi wrote:   >draft. But I think that there should be a lightweight alternative for XML   >c14n because c14n is limited to complete documents, needs a DTD or a   >schema and is unnecessarily complicated for many applications.     I think it's pretty clear we are going to have to address how to serialize  (c14n) XML fragments. If we went with Gregor's proposal [1], we might not  need your intermediate level.         [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JanMar/0156.html    __    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JanMar/0256.html    ...     >To conclude: I think it would be beneficial to replace the minimal   >canonicalization with a lightweight canonicalization that had the   >following properties:   > -Can be applied on elements and whole documents   > -Does not require a DTD or schema for processing   > -Does remove the most common sources of alternation in XML documents   > -Canonicalization can be done for DOM tree and SAX events   >   >The souces of alternation that should be removed are at least the   >following:   > -Character set normalization (UTF-8, I guess)   > -White spaces (spaces, tabs and line breaks)   > -Possibly attribute order (for example convert to alphabetical order)   >   >Any comments to the canonicalization requirements, are welcome. I have not   >designed those requirements thoroughly, so it's quite possible that I   >missed something there.       _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Ok, now reflected in:          http://www.w3.org/Signature/2000/10/10-c14n-interop.html    At 21:34 12/9/2000 +0000, merlin wrote:    >Hi,  >  >It is probably valid to fill in Y1 down the table for Baltimore.  >  >We are somewhat processor agnostic, however the conformance tests  >that we provide do verify all listed requirements of the processor  >in use.  >  >Merlin  >  >r/reagle@w3.org/2000.12.08/15:14:00  > >  > >The Call for Implementaion Period for Canonical XML closed on November   > 24th.  > >An InformationalRFC as well as a new Candidate Rec (for consideration for  > >Proposed Rec) is being prepared. Changes made include those resulting from  > >comments [1,2,3], no change was made with respect to [4].  > >  > >However, in order to successfully advance it to Proposed Rec, it'd be good  > >in we could fill in some of the gaps in the interop-report [5]. (Petteri   > and  > >Merlin, can you report on the list the status of your implementations with  > >respect to these questions about the parsers treatment of encoding and  > >relative URIs?)  > >  > >[1]   > http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000OctDec/0094.html  > >[2]   > http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000OctDec/0196.html  > >[3]   > http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000OctDec/0208.html  > >[4]   > http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000OctDec/0163.html  > >[5] http://www.w3.org/Signature/2000/10/10-c14n-interop.html  > >  > >__  > >Joseph Reagle Jr.  > >W3C Policy Analyst                mailto:reagle@w3.org  > >IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/  > >      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 16:27 99/11/29 -0700, rhimes@nmcourt.fed.us wrote:   >I'd like to see it head in this direction also.  Also, it is starting to  look   >very messy to me.  I'd like to see Object, Manifest, Package, and   >SignatureProperties combined in some way, preferably as the Manifest (in   >unsigned <Signature> if present).  I'm not adverse to having multiple  digests   >(object references) in SignedInfo, though, or allowing an optional direct   >reference, though it might be cleaner to always use a manifest.  (Also,  maybe   >location could be one of the optional SignatureProperties if one only  wants to   >sign location and not content.)    In my mind, an object is the element which we define as having an open  content model. People can put whatever elements they want within an object  element (or if people wanted to use schema classes, other things could be a  subclass of an object).    Manifest, package and signature properties are all different "applications"  with different meanings that could be within an object (or a sub-type of).     >It seems to me that this means the actual tags and attributes of  <Manifest> and   >its sub-elements shouldn't automatically be hashed.  Rather, the Manifest  should   >call out the list of things to be included in the hash (or not, perhaps   >defaulting to include).  I think it would be far more lucid to have an  attribute   >in each Manifest entry that specifies (hash=?)include/exclude rather than  use   >XPath (also an attribute to specify base64-decoding of element content).  The   >actual object(s) could be embedded or targeted.  I think  SignatureProperties   >should be included in Manifest.  If there is a requirement for a  MegaManifest   >that is application-specific, we should give it another name, but Manifest   >should have core behavior for signature and authentication.    I think of a Manifest as a collection of resource/content references and I'm  not sure what SignatureProperties has to do with that. SignatureProperties  is a set of semantics related to the signature itself. (A specific place to  make an assertion about the signature.)      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Presently, the specification speaks of using SignatureProperties as a  potential way for one to introduce semantics beyond the simple signature  semantic. (When people speak of "I signed this," they often imply an  additional semantic of vouch, believe, assert, assure, authored, etc. Our  design avoids this and sticks to the meaning of the signature: message and  signer authentication.)    Use of SignatureProperty is useful, but a bit awkward. In discussions with  Taka on using XML Signature with CC/PP he formulated an example (that was  integrated with RDF fairly well) that I very much liked. To place the idea  into a closer application domain:    <checkbook>    <check Id="check101">      <account>xyz</account>      <name>reagle</reagle>      <amount currency="USD">50</amount>      <authorized by="#Signature101"/>    </check>    <Signature Id="Signature101" xmlns="http://www.w3...">      ...      <Reference URI="check101"/>      ...    </Signature>  </checkbook>    Clearly, the signature still keeps its simple meaning. It's the application  that defined and verifies what "authorized by" means, as it should be. The  only difference between this and SignatureProperty is the placement of the  syntax (in the application data instead of in the Signature).    The short of this though, is that since I that I think we should encourage  people to use the approach captured in the example above, I'd like to  include a few sentences and an example similar to the above such that we  aren't unduly encouraging people to use SignatureProperty.    BTW: I'm not speaking to the standardization of the syntax and semantics of  things like assuredby. For the time being, I think applications will do it  on their own. It'd be good to standardize on, but presently, whatever is  done can be used directly in the application XML or the SignatureProperty as  appropriate. (The desire for standardizing signature semantics is orthogonal  to the design of the facility, which we've been focusing on.)    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 23:58 7/15/2001, Tom Gindin wrote:  >     This may not be perfectly stated, but its intent is not that obscure.  >A better way of putting it might be: "While we specify two SignatureMethod  >algorithms, one mandatory and one optional to implement, user specified  >algorithms may be used as SignatureMethod algorithms instead."    http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html  $Revision: 1.94 $ on $Date: 2001/07/16 17:28:08 $  /+While we identify two SignatureMethod algorithms, one mandatory and one   optional to implement, user specified algorithms may be used as well.+/    --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 14:11 4/17/2001 -0700, Brian LaMacchia wrote:  >1) Why did you choose to use URLs that were not of the form  >"http://www.w3.org/2000/09/xmldsig#<something>", where the something is  >sha256, sha284, etc.  Ideally these should probably be NIST-defined  >identifiers, and failing that I would have expected them to follow the  >XMLDSIG naming scheme.    Good question. The simple bit is since they aren't defined by the dsig   namespace (and the resource you get back when you resolve that URI) they   shouldn't be in that namespace by W3C policy. Once we reach REC (hopefully   very soon) our namespace and its meaning is frozen (and we don't want to   delay/recycle specifying/debugging/waiting-for-implementation on these   algorithms).    This document could also/alternatively be published as a W3C Note using   different namespace such as:          http://www.w3.org/2001/05/xmldsig-extension#  (and again, the W3C would require that this namespace resolve to something,   most probably the W3C Note, but that's easy on the W3C side). I'm curious   what people think about using *.arpa domain (from the ietf-draft [1]) that   doesn't resolve for these informational/non-normative identifiers.    [1] ftp://ftp.ietf.org/internet-drafts/draft-eastlake-uri-fqdn-param-00.txt      As an aside, and directly to Don's draft, if folks want to go the *.arpa   route, I find using the host to identify the type of algorithm as an   additional complexity in namespace parsing/recognition.      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      Excellent!    At 19:05 2000-05-22 +0900, TAMURA Kent wrote:   >Petteri and I tested interoperability between each   >implementation.  Petteri's implementation has succeeded in   >verifying a signature produced by my implementation on last   >Friday.   >   >We found some non-explicit points in the XML-Signaure spec.   >  - A trailing newline of canonicalized SignedInfo element   >    (Maruyama-san pointed out in this mailing list.)   >  - Endian for big integer values such as P, Q, G, Y, Modulus,   >    and Exponent   >    (It seems that the spec. mentions only 'I2OSP for (r, s)')     Noted we'll try to disambiguate in the next draft.      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      I had a meeting with TimBL and others yesterday to get clarity on a couple  of W3C policies and requirements over specifications, one of which was  namespace policy. This tends to be a rather heated/religious issue, but at  least I have something that I and others reference -- or even take issue  with. <smile> You'll note one of the characteristics of this policy in the  W3C context is the W3C's commitment to maintaining our URIs, which I think  is a good thing.    Regardless, the namespace policy requires  "http://www.w3.org/1999/$something" and I expect I can get approval for a  namespace shorter than the one I originally proposed along the lines of             http://www.w3.org/1999/10/sig    or even            http://www.w3.org/1999/sig    if we don't expect to issue different versions that need to co-exist and  have normative changes in their meaning within the space of a year. One  could even mix a version number in there, but I'm hesitant to propose that.    This discussion also has some ramifications on the URNs that we are  presently using, which I will address in the next message.     Forwarded Text ----   Date: Tue, 26 Oct 1999 15:43:13 -0500   From: Dan Connolly <connolly@w3.org>   To: chairs@w3.org   Subject: Re: Namespace URIs and other institutionalized names      Dan Connolly wrote:   [...]      > It might be nice if we had a policy/mechanism that allowed us   > to delegate this decision, or a policy/mechanism that   > allowed all namespace identifiers to be chosen in a similar   > fashion, but we (currently) don't.      As a result of some internal discussions, TimBL has written down   some of the policy that has been emerging in his mind. You are   hereby notified of the policy in:      URIs for W3C namespaces   Tim Berners-Lee, W3C Director   $Id: nsuri.html,v 1.10 1999/10/26 20:10:04 timbl Exp $    http://www.w3.org/1999/10/nsuri      Feel free to cite it in public forums, and feel free to discuss,   e.g. the philosophical aspects of URIs and persistence in the   uri@w3.org forum, which is archived at:   http://lists.w3.org/Archives/Public/uri/      (hmm... the RDF IG is possibly another relevant forum, due   to the digital library and other metadata issues.)      --    Dan Connolly, W3C   http://www.w3.org/People/Connolly/   tel:+1-512-310-2971 (office, mobile)   mailto:connolly.pager@w3.org (put your tel# in the Subject:)     End Forwarded Text ----    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 16:12 6/13/2001, Donald E. Eastlake 3rd wrote:  >My words above were not a proposal but an opinion. However, to provide  >a specific proposal, I have produced some HTML which I will post  >separately. I don't see why what could be considered just an important  >tweak to canonicalization can't just be added to the signature spec as  >a response to Last Call comments.    I'm not understanding. You can't tweak the meaning of one specification from   another. We can't say [1] "http://www.w3.org/TR/2001/REC-xml-c14n-20010315"   now means something different. [1] means what it means, how would people   looking at that spec know that other specs somehow changed it's meaning?    We can create a new URI and spec such as [2]   "http://www.w3.org/TR/2001/REC-xml-exc-c14n-20010723", but if it's a   mandatory requirement, we'll have to let it precede xmldsig, and that'll   hold us up.    We can create a new URI under the xmldsig namespace such as   xmlns="http://www.w3.org/2000/09/xmldsig#excC14N" . It's kind of editorially   awkward to profile Canonical XML in this way, but it makes sense at least.   My original concern is that this would necessiate a new namespace. But since   this addition doesn't break any existing instances or processes, I think we   can deal with it just by recycling at Candidate REC, ensuring interop and   continuing to use the same namespace.    >If you just want to trim down the verbiage, that's fine. Perhaps  >the above should have been as follows, especially with the addition  >of material in the CanonicalizationMethod section about why you  >should only use safe canonicalizations of SignedInfo:  >  >        "3. Transform operations are not provided for SignedInfo so  >         protection of it from context must be indicated by a  >         CannonicalizationMethod algorithm. ...    This still isn't an option an application has, it's saying, "If we had   transforms over SignedInfo, then you could use Transforms. But we didn't, so   you could use a different canonicalization." The latter statement is what is   stated by option 2.      >Well, there may be character based canonicalizations and its  >reasonable to say that they take a UTF-8 octet string as input.    Ok, so I'll leave that bullet in. But the text has stated, "should be   provided with the octets that represent the well-formed SignedInfo element,   from the first character" which doesn't requries those characters to be in   UTF-8. Are you adovcating we should move it to the octets represented by the   UTF-8 encoding of those characters even if the XML document is encoded   differently?    [I also continue to not like character base c14n, but we still need to be   clear.]    >OK, sounds like a good idea.  >  > >3. (Editorial: Not sure adding "Although technically outside" to the  > >(previously) last paragraph adds anything but verbosity. We can lowercase  > >the RECOMMEND if you want.)  >  >I don't really care... I suppose it should be lower case.    Ok.      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 21:22 7/14/00 -0700, Kevin Regan wrote:   >Shouldn't the DTD be something like:   >   ><!ELEMENT X509Data ((X509IssuerSerial | X509SKI | X509SubjectName)+ |   >                    X509Certificate | X509CRL)>    I will move to this barring comment from Barb/Bal (authors of that section).    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 15:34 6/19/2001, Joseph M. Reagle Jr. wrote:  >I'm still hoping to hear from a few more implementors on the list ASAP, but   >a few things form the discussion so far have tweaked my options in the   >following way:    Typos: that's, "a few things *from* the discussion so far have tweaked my   *opinions* in the following way".        --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      Response from the XML Core WG:    Forwarded Text ----  >Date: Wed, 30 May 2001 11:21:25 -0500  >From: Dan Connolly <connolly@w3.org>  >Organization: World Wide Web Consortium (http://www.w3.org/)  >To: "Joseph M. Reagle Jr." <reagle@w3.org>  >CC: xml-editor@w3.org  >Subject: Re: Erratum in section 1.1 of Canonical XML  >  >"Joseph M. Reagle Jr." wrote:  > >  > > [DanC recommended I also send this question to xml-editor for a answer to  > > the question, though CG may still need to take some action.]  > >  > > A question was recently raised with respect to Canonical XML   > specification's  > > use of "DTD" to refer to both "document type declaration" and "document   > type  > > definition".  > >          http://www.w3.org/TR/2001/REC-xml-c14n-20010315  >  >The XML Core WG considered this question of interpretation  >of XML 1.0, and we decided (30May2001) that the use of  >"document type declaration (DTD)" in the c14n spec is not  >consistent with the XML 1.0 spec:  >  >   [Definition: The XML document type declaration contains or  >   points to markup declarations that provide a grammar for a  >   class of documents. This grammar is known as a document  >   type definition, or DTD. ... ]  >         -- http://www.w3.org/TR/2000/REC-xml-20001006  >  >"document type declaration" is a syntactic term; "DTD"  >is not defined to mean exactly the same thing, but rather  >to the grammar expressed in a document type declaration.  >  >As the scope of Canonical XML  >is the very details of processing characters and bytes  >of an XML document, we recommed you don't use "DTD"  >where you mean to refer to a specific piece of XML syntax;  >rather, use one of the syntactic terms from the XML  >spec such as "document type declaration."  >  >e.g. change  >  >- The XML declaration and document type declaration (DTD) are removed  >  >to  >  >+ The XML declaration and document type declaration are removed  >  >and change  >  >- Note that the XPath data model does not create comment nodes  >- for comments appearing within the document type declaration (DTD).  >  >to  >- Note that the XPath data model does not create comment nodes  >- for comments appearing within the document type declaration.  >  >(Hmm... I don't see, in the XML Canonicalization spec,  >any uses of DTD to refer to "document type definition.")  >  >  >Please let us know whether this clarification  >is satisfactory.  >  >  >The XML Core WG does not find any error in the XML 1.0  >spec related to this question of interpretation.  >  >  >--  >Dan Connolly, W3C http://www.w3.org/People/Connolly/  End Forwarded Text ----    --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 15:48 3/30/2001 -0500, Glenn Adams wrote:  >Under Section 6.2 appears "recent advances in crypography". I believe this  >should read "recent advances in cryptanalysis".    Ok.      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 21:54 11/6/2000 -0800, hal@finney.org wrote:  >Some spelling errors I spotted:  >  >signaute in 6.4.2  >canonicalizationalgorithms in 6.5  >sytnax in 7.2    Noted and fixed!    >It would probably be a good idea to go over the draft with a good spell  >checker.  Be nice if you could find one that ignores every word that  >starts with "x". ;-)    I've done it a few times, but it is a harrowing process given all the   terminology and XML, and I expect/hope we're getting pretty low on typos   given all the eyeballs running over the spec.    >A few other points: in the example in 4.4.4 there are three </X509Data>  >tags but only two <X509Data>s.    Ok.    >In 6.4.2 there is a description of how bignums are stored, but this  >information is needed earlier, in 6.4.1 in order to store the P,Q,G,  >etc. values for DSA keys.    Yikes. I presume (one of the authors of this section might want to correct   me) that there are supposed to be 3 complete well formed X509 child elements   of KeyInfo (and that there is no nesting), so:        <KeyInfo>        <X509Data> <!-- two pointers to certificate-A -->          <X509IssuerSerial>            <X509IssuerName>CN=TAMURA Kent, OU=TRL, O=IBM,              L=Yamato-shi, ST=Kanagawa, C=JP</X509IssuerName>            <X509SerialNumber>12345678</X509SerialNumber>          </X509IssuerSerial>          <X509SKI>31d97bd7</X509SKI>        </X509Data>        <X509Data><!-- single pointer to certificate-B -->          <X509SubjectName>Subject of Certificate B</X509SubjectName>        </X509Data>        <X509Data> <!-- certificate chain -->          <!--Signer cert, issuer CN=arbolCA,OU=FVT,O=IBM,C=US, serial 4-->          <X509Certificate>MIICXTCCA..</X509Certificate>          <!-- Intermediate cert subject CN=arbolCA,OU=FVTO=IBM,C=US               issuer,CN=tootiseCA,OU=FVT,O=Bridgepoint,C=US -->          <X509Certificate>MIICPzCCA...</X509Certificate>          <!-- Root cert subject CN=tootiseCA,OU=FVT,O=Bridgepoint,C=US -->          <X509Certificate>MIICSTCCA...</X509Certificate>        </X509Data>      </KeyInfo>    >Also, this text suggests making "an even number of bytes".  Two problems,  >first it is not really an "even" number in the sense of being divisible by  >2, but rather an "integral" or "whole" number.  Second, the word "byte"  >could be better replaced by "octet".  If you search the doc you find  >a few other places where this substitution should be made (everywhere  >except in reference to the byte order mark (BOM)).    Ok, we've been trying to use octet consistently (8 bits) since "byte" is   sometimes used to represent n-bit words... The instances where I see we   still used bytes (and are now changed include):    >4.3.3.1  The URI Attribute  >1. Each disallowed character is converted to [UTF-8] as one or more   >/+octets+/.    >2. Any octets corresponding to a disallowed character are escaped with the   >URI escaping mechanism (that is, converted to %HH, where HH is the   >hexadecimal notation of the octet value).    >6.4.2 PKCS1  >... The integer value is first converted to a "big endian" bitstring. The   >bitstring is then padded with leading zero bits so that the total number of   >bits == 0 mod 8 (so that there are /+whole+/ number of /+octets+/) If the   >bitstring contains entire leading /+octets+/ that are zero, these are   >removed (so the high-order /+octet+/ is always non-zero).        __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      As always, additions, comments, corrections are welcome:    http://www.w3.org/Signature/Minutes/991014-tele.html                                             99-October-14    Chairs: Donald Eastlake and Joseph Reagle    Note Taker: Joseph Reagle [[4]ascii]      Participants         * Donald Eastlake 3rd, IBM       * Joseph Reagle, W3C       * Mark Bartel, JetForm       * John Boyer, UWI       * David Solo, Citigroup       * Peter Norman, FactPoint       * Ed Simon , Entrust Technologies Inc.       * Barbara Fox, Microsoft             Taxonomy of Decisions for Syntactical Stuff           * Reagle Sent a proposal to the list.       * Eastlake will send thoughts on parameters and algorithms.       * ACTION Reagle: create document that covers syntactical, default,         and algorithm/parameter conventions such that (1) we come to         agreement and (2) the document has consistency.             Types           * Eastlake: Do we have input/output types as well?       * Boyer: people need to be careful in their specifications for         transformations over XML to retain the <?xml ... > and doctype         declarations. If they do something that loses that information,         they shot themselves in the foot.       * Solo: it may be useful for some transformations, but for all of         Boyer's XML transformations, the XML should carry that         information. Eastlake seems opposed to mucking up his fragments         with XML declarations. Boyer states you are still carrying it but         it in the attribute.       * Solo: a way to think about it: transform is applied to bytestream,         might need some other control information.       * Solo proposes: permit syntax to specify input, but note that for         all of our specified XML transformations type should be in the         XML.       * ACTION Reagle: bounce this issue off of XML people. Do XSLT mind         if we transform well-formed XML into XML without declarations?       * Reagle: what happens if the signature syntax says text/xml, but         the signature was based on the content type described by the HTTP         headers. Which is normative?       * Eastlake: the type specified in the signature (if present) is         dominant.             DTDs           * Discussion resulting from "Section 6.0 -- The DTD appears         incorrect. ANY can only occur once and not with any of the current         defined items. Should ANY be inside of the *? "       * Result: XML Signatures will not be validated signatures. Did to         write an XML schema.             Location         Do we allow fragmentID's in location, or require them to sit in     transformations.      1. Only URI in <location> without fragmentID, otherwise      2. use transformations to refer to a local IDREF, or parts of other         documents.             Review of Outstanding Action Items           * Example in section 2.0 should be a DSS example as this is the         mandatory example. I assume that at some point this will be come a         verifiable example as well. WG Agrees.. ACTION Solo: will change         example, and we will hopefully have a verifiable example at some         point.       * Do we include or exclude the object in the signature. continue         with excluding such that the signature passes for an object or an         external resource. ACTION Solo: reflect in his edit.       * Section 6.0 -- The DTD appears incorrect. ANY can only occur once         and not with any of the current defined items. Should ANY be         inside of the *?       * Solo: This section is presently heavily underspecified. Add a         comment that it requires significant additional work.         ACTION Solo: will add ANSI reference if he can find it.       * [DEL: All IETF drafts now require a patent statement a the top of         the draft. Such a statement should be added to the document. :DEL]       * [DEL: ACTION Reagle: Add link in W3C status to patent statements         now on Web site. We'll add the IETF disclosure to the IETF version         when generated. :DEL]       * [DEL: Section 3.0 - Insert reference to Base64. ACTION Bartel:         includes the reference. :DEL]       * [DEL: ACTION Reagle Fix. ACTION Reagle: move from c14n to         canonicalization. In the XML canonicalization. Text we can keep         for the time being. Bartel would like Alg spelled out too. No         agreement -- but no opposition either really. :DEL]       * [DEL: ACTION Solo: clarify section 8. :DEL]       * [DEL: Action REAGLE: Move most comments to open issues sectio         :DEL]       * [DEL: ACTION Boyer: will write up a proposal for 7.6 using         "Recommended" term. :DEL]                       New Resulting Action Items           * ACTION Reagle: create document that covers syntactical, default,         and algorithm/parameter convensions such that (1) we come to         agreement and (2) the document has consistency.       * ACTION Reagle: take David's edit and format it for publication.       * ACTION Simon: begining thinking about the "normative" example such         that we can test resulting signature values generated from         different applications.    References       1. http://www.ietf.org/     2. http://www.w3.org/     3. http://www.w3.org/Signature/Overview.html     4. http://www.w3.org/Signature/Minutes/991014-tele,text        _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      http://www.w3.org/Signature/Minutes/000302-tele      2000-March-02    Chairs: Donald Eastlake and Joseph Reagle    Note Taker: Joseph Reagle     Participants         * Donald Eastlake 3rd, Motorola       * Joseph Reagle, W3C       * Ed Simon , Entrust Technologies Inc.       * Mark Bartel, JetForm Corporation       * John M. Boyer, PureEdge       * Mariano Consens, University of Waterloo      Status of documents < 5 minutes         * Requirements - in RFC editors que.       * Syntax and Processing - in Last Call in W3C, waiting for announce         from Schiller.      Charter Revision 8 minutes         * Update milestones (though still aggressive).       * Active period should end in July, then WG cycles to low         maintenance phase.      Main syntax document        Old Last Call Issues 10 minutes         * Transform: Maybe consider to change the type of attribute         'Charset' to 'uri'.         Eastlake: Supposed to be on IANA Charset types, keep at Charset.       * Is minimal C14N sufficiently specified?         Eastlake: Connolly asked question about line feeds and we         responded use the XML line feed conventions. Yes, thinks it's         adequate.       * If minimal canonicalization or Canonical XML has been chosen it is         clear what forms the input of the signature method, because both         methods are using UTF-8 as character encoding. But what if no         canonicalization is used?         Eastlake: If you don't specify any form of canonical XML, then the         byte order is application specified. Bartel agrees.        New Last Call Issues 10 minutes         * Being queued in the [5]Last Call Comments page.       * Simon's namespace proposal: something to think about further.          [5] http://www.w3.org/Signature/20000228-last-call-issues.html      Senarios / Interop Test Cases 10 minutes         * Reagle: I hope to generate a version of the FAQ/Scenarios with the         some good examples in there, with generated cryptographic values         within the week.       * Boyer: will work on some of the sections.       * Simon: can generate cryptographic values.      Meetings        IETF in Adelaide 8 minutes         * Two requests to talk. IBM: tools; Juha P??j?rvi: SPKI       * Eatslake: Proposes April 10 as the FTF to deal with Last Call         comments.          _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Last week I attended a meeting of EESSI [1] regarding: "Electronic Signature   Standardisation: The International dimension". The purpose of this meeting   was general introductions/coordination among various organizations, but the   immediate technical question before EESSI is the provision of a suite of   specifications (standardized at ETSI/CEN/IETF) that satisfy the EU   Directive's definition of "qualified electronic signature". Much of these   constituent specifications are obviously based on pre-existing standards;   the Signature Format specification is ETSI ES 201 733 [2].    Given the interest in XML and XML Signature, ETSI is interested in   harmonizing this work with XML. Consequently, I gave a brief introduction of   XML Signature.  My hope is that XML Signature could be used as part of a   qualified electronic signature. Fortunately, this question doesn't affect   XML Signature deliverables; it's part of one of many "bigger picture"   questions that aren't in the scope of this WG but for which many of the WG   participants are interested. If you are interested in this issue, I   recommend following the work of the ETSI WG. Also, Rigo Wenning, a W3C staff   member who is following this work, is willing to address any questions you   have.    [1]   http://www.ict.etsi.fr/eessi/Open-Seminar-Autumn2000/Presentations/Barcelona-Presentations.htm  [2] Linked from http://www.etsi.org/sec/el-sign.htm    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 23:00 7/5/2001, Dournaee, Blake wrote:  >I'm guessing that all of this was hashed out some time ago and I probably  >came a little late for this discussion. Any thoughts or pointers to previous  >discussion on this would be most helpful.    These are good questions actually and in the past this was part of our   discussions/debate regarding the transforms [1] in 1999 and something John   called "Document Closure." From that argument I don't think we ever   extracted a ringingly crisp and clear consensus, but fortunately in the   ensuing year of work on the spec I think we've ended up with a clear   position none-the-less: "When transforms are applied the signer is not   signing the native (original) document but the resulting (transformed)   document. (See Only What is Signed is Secure (section 8.1).)"[2]    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/1999OctDec/0372.html  [2]   http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html#sec-Transforms    I believe originally folks had three understandings of how transforms worked:  1. One is signing the resulting document.  2. One is signing a relationship between the source document, the   transforms, and the resulting set of possible documents -- akin to John's   document closure.  3. One is signing the original document even given arbitrary transforms.    Option 1 is supported by the spec; option 2 is a different way of thinking   of the same thing but with some inferences an application might make (at its   own peril) about the relationship between the source and original document:   if the transforms are "safe" the application *might* make some inferences   about their relationship -- but that's outside the scope of this spec and it   can be dangerous. Option 3 can be a common mistake but is wrong.    To illustrate these options via a few examples:    A. SOURCE ENCODED  <Reference URI="source.base64">...           <Transform Algorithm="&dsig;base64">    1. One is signing the decoding of the base64 encoded source. (Correct!)  2. One is signing a class of documents that result from applying a base64   decode to the source file. (One-to-one mapping, and the result set only   includes one document and is similar to option 1).  3. One is signing the base64 document. (Wrong)      B. SOURCE ENCODED  <Reference URI="source.xml">...           <Transform Algorithm="&dsig;base64">    1. One is signing the encoding of the xml document. (Correct!)  2. One is signing a class of documents that result from applying a base64   encode to the xml file. (One-to-one mapping, and the result set only   includes one document and is similar to option 1).  3. One is signing the source.xml . (Wrong, and dangerous because since the   application/user is obligated to see what it signs, it's seeing the base64   version. Folks make this same mistake [3] with encryption, thinking that if   one signs encrypted data, one is signing the source data and they also   confuse the issue by lumping in implicit signature semantics. The correct   response is you only are signing the plain form when you use a decryption   transform to make it the final result![4])    [3] http://lists.w3.org/Archives/Public/xml-encryption/2001Jul/0010.html  [4] http://www.w3.org/TR/xmlenc-decrypt      C. SOURCE TRANSFORMED WITH XPATH  <Reference URI="source.xml">...              <Transform   Algorithm="http://www.w3.org/TR/1999/REC-xpath-19991116">                <XPath xmlns:dsig="&dsig;">                     -select-everything-but-user-entry-data-fields-               </XPath>    1. One is signing the transformed xml document. (Correct! Changes to the   user entry elements that are no longer in the resulting document aren't   signed obviously.)  2. One is signing the resulting document and its relationship (via   transforms) to the source document. So, if the transforms are well   specified, standardized, and understood while the application signed (and   should "see") the resulting document, it might also continue to "see" the   original document in the context of that relationship. So for instance,   consider a multi-party work flow in which a document is canonicalized every   time some processing and signature validation occurs. However, the   processors don't want to pass on the canonical form because it is ugly for   their purposes. Since the relationship between the original document and its   resulting canonical form is well understood, they might validate the   signature over the canonical form, but continue to process the original.   They may wish to do the same thing with the form example above.  3. One is signing the source.xml . (Wrong, again.)    --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 23:00 10/20/2000 +0000, Mark Bartel wrote:  >in section 8.1.2, there are several uses of phrases such as  >"automated mechanism or person"... but in the first sentence it says "that  >which is represented to the user..." without providing for the non-user  >interaction case.  Shouldn't we be consistent?    We also speak of a user. So we now use "user" consistently and state, "a   user (an automated mechanism or person) ..."    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 18:20 7/31/2000 +1000, Thomas Maslen wrote:   >One last vestige (I think) of the no-longer-optional  CanonicalizationMethod    >that I didn't notice last time around...  in the editors' copy at   >   >http://www.w3.org/Signature/Drafts/WD-xmldsig-core-latest/   >   >section "3.2.2 Signature Validation", item 3 says "(optionally  canonicalized)".   >Should it be just "(canonicalized)" now?    Noted and fixed!     >Also, step 1 of section 3.2.1 is exactly the same as step 1 of section  3.2.2.   >I understand why it's in 3.2.2, and I'm willing to believe that it may also   >be necessary in 3.2.1 to stave off some attack, but it looks for all the  world    >like a cut-and-paste error -- perhaps it needs some text in parentheses  that    >boils down to "yes, we really do mean this, and here's why"?  (And, if  this is    >necessary, should it be hoisted above "For each Reference in SignedInfo:"  ?).     That's been mentioned before and I your recommendation is a good one:    Canonicalize the SignedInfo element based on the CanonicalizationMethod in  SignedInfo (so as to ensure the application Sees What is Signed, which is  the canonical form).    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 09:29 99/12/09 -0500, Donald E. Eastlake 3rd wrote:   ><Signature>   >(SignedInfo)   >(SignatureValue)   >(KeyInfo)?   >(Manifest)?   ></Signature>    I mulled this over this weekend, and in terms of making improvements but not  substantively changing what we have, as a WG member I like  the following:    1. Changing ObjectReference to Reference since in cleaning up the spec we  are trying to distinguish between a resource and an Object as a specifical  XML element. (References can point to either).  2. Making Manifest a grouping of References (and only references) that is  found inside of SignedInfo. Having a set of References outside called a  Manifest, and those inside a SignedInfo is sort of odd, and with this change  it provides a bit of syntactical sugar within SignedInfo that helps draw the  line between the cyrptographic signature application and the  reference/manifest application (both of which are part of SignedInfo core).  3. Defining Object as something that sits in Signature (as it does  presently) to hold other non-core data, which might be another Manifest or  SignedProperties. (If people absoultely want Manifest or SignatureProperty  to be at the same level as Object outside of SignedInfo (but in Signature) I  can accept that, but I really like using Object as the "non-core" bucket.)    I realize this prevents us from the generality (for instance, of being able  to sign an Object directly) but I'd defer on that generality for two reasons:    1. I want to be very clear where core signature data and non-core data go.  Placing real data in SignedInfo might confuse things with respect to c14n  and "chasing of links" issues. Placing SignatureProperties in SignedInfo  might get people thinking in termsof authenticad/non-authenticated  attributes and think that by placing it in SignedInfo they are changing the  semantics/behvaiour of what we specify.  2. given our schedule, we need to go to last call soon.      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 19:28 3/26/2001 -0800, Brian LaMacchia wrote:  >CryptoBinary and base64Binary are not exactly equivalent -- there are  >further restrictions on a CryptoBinary because it is a representation of  >a single bignum.    Good point! Good enough then, thank you Brian and Noah.      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

        Which element types does this apply to, only the RFC2253 X509IssuerSerial   and X509SubjectName, or KeyName as well (which can be anything *including* a   DNAME). I assume MgmtData and PGPKeyID are left as a string without further   specification.      At 15:27 6/12/2001, Donald E. Eastlake 3rd wrote:    >Since no one has responded to my message below, I assume that we have  >adopted Gregor's proposal and that, except as may be provided in RFC  >2253, whitespace is significant.  >  >Donald  >  >From:  "Donald E. Eastlake 3rd" <dee3@torque.pothole.com>  >Message-Id:  <200105310255.WAA0000031182@torque.pothole.com>  >To:  w3c-ietf-xmldsig@w3.org  >Date:  Wed, 30 May 2001 22:55:30 -0400  >  > >It seems to me that we need to come to some sort of conclusion on  > >this... Maybe people think we did and I missed it, in which case I  > >hope they will set me straight.  > >  > >The following proposal by Gregor for encoding STRINGS in DNames does  > >not seem to have been refuted, but do we need to say more about  > >leading and trailing whitespace on the DName as a whole?  > >  > >Thanks,  > >Donald  > >  > >From:  "Gregor Karlinger" <gregor.karlinger@iaik.at>  > >To:  "Tom Gindin" <tgindin@us.ibm.com>, "Merlin Hughs"   > <merlin@baltimore.ie>,  > >            <duerst@w3.org>  > >Cc:  <w3c-ietf-xmldsig@w3.org>  > >Date:  Wed, 16 May 2001 15:13:14 +0200  > >Message-ID:  <LBEPJAONIMDADHFHAEAOMELJCFAA.gregor.karlinger@iaik.at>  > >In-reply-to:   > <OF8536EC68.279166CB-ON85256A4D.005E2175@somers.hqregion.ibm.com>  > >Subject:  DName encoding (was:KeyName white space)  > >  > >All,  > >  > >I have cited the most important statements (from my point of view)  > >regarding DName encoding below. I would like to make the following  > >proposal for a guidline that should appear in XML-Signature on how  > >to encode a strings in a DName in XML-Signature relevant structures  > >(IssuerName, SubjectName):  > >  > >o Consider the string as consisting of unicode characters.  > >  > >o Escape occurences of the following special characters by prefixing  > >  it with the "\" character:  > >  > >    - a "#" character occurring at the beginning of the string  > >    - one of the characters ",", "+", """, "\", "<", ">" or ";"  > >  > >o Escape all occurences of ASCII control characters (Unicode range  > >  \x00 - \x20) by replacing them with "\x" folloed by a two digit  > >  hex number showing its Unicode number.  > >  > >Since a XML document logically consists of characters, not bytes  > >(Thanks Martin for reminding me ;-) the resulting unicode string is  > >finally encoded according to the character encoding used for producing  > >the physical representation of the XML document (But this is not in  > >scope of the guidline that should be taken into the XML-Signature  > >specification ...)  > >  > >Liebe Gruesse/Regards,  > >---------------------------------------------------------------  > >DI Gregor Karlinger  > >mailto:gregor.karlinger@iaik.at  > >http://www.iaik.at  > >Phone +43 316 873 5541  > >Institute for Applied Information Processing and Communications  > >Austria  > >---------------------------------------------------------------  > >  > >  > >### Tom Gindin ###  > >  > >[...]  > >>      The situation is actually even more confusing than that.  The rules  > >> seem to be, for HT, LF, FF and VT, something like the following:  > >[...]  > >  > >### Merlin Hughs ###  > >  > >[...]  > >> The escaping is useful because:  > >>  > >>            <DName>CN=foo  > >>            </DName>  > >>  > >> According to RFC 2253, this states that the common name is  > >> foo<LF><TAB>. However, if you trim() the text value then you  > >> would get common name foo. Requiring escaping of ASCII controls  > >> would result in CN=foo\0A\09 (if that is what is meant) which  > >> is unambiguous and can be safely indented, whitespace formatted  > >> and trim()ed. It would also eliminate a few other potential  > >> ambiguities:  > >[...]  > >> is significant. If we require that all significant ASCII  > >> controls be escaped, then trimming and formatting involving  > >> newlines and tabs will be safe, and meaningful whitespace in  > >> dnames will be explicit.  > >  > >### Martin Duerst ###  > >  > >An XML document consists of characters, not bytes. And in  > >content, each character can be escaped by a numeric character  > >reference. Therefore, you can have a document only encoded  > >in us-ascii, but will lots of &#dddd; (or &#xhhhh;); this  > >will transport any character in Unicode, and a browser  > >will display it correctly (assuming it has the right font).  > >  > >> > There's another issue that seems relevant. RFC 2253 states  > >> > that strings must be converted to UTF-8 and then the escaping  > >> > rules must be applied. Do we honour this, or should we UTF-8  > >> > decode the RFC2253 string before embedding it in the text node.  > >> >  > >> > Essentially, should the final example in RFC 2253 be encoded  > >> > in XML as:  > >> >  > >> > UTF-8 encode and require ASCII escaping of high-bit-set chars:  > >> >   SN=Lu\C4\8Di\C4\87  > >  > >This would be okay.  > >  > >[...]  > >> > De-UTF-8 and embed the Unicode original:  > >> >   SN=Lu?i? (where ? is the original character)  > >> >  > >> > The last seems like the best option to me.  > >  > >I agree. But it has to be spelled out clearly, and tested.  > >  > >############  > >      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      Comments for the record:    http://www.w3.org/TR/2000/WD-xmldsig-core-20000228/    1. The spec still speaks of IDREF in a few places (last paragraph of 2.0 and  definitions). There are no more IDREFs, spec should only speak of URI="#foo".    2. Need to ensure use of declarations like           <!ELEMENT KeyValue  (#PCDATA|DSAKeyValue|RSAKeyValue)*>  make sense as an equivalent of "ANY" for any element type (not just those  found within the local DTD.    3. The content models of the schema declarations need to be improved. For  instance, there  should be a <any/> somewhere in:      <element name='DigestMethod'>       <type content='elementOnly'>         <attribute name='Algorithm' type='uri' minOccurs='1' maxOccurs='1'/>       </type>     </element>    (I couldn't get these to work with an "<any/>" before Last Call. There is a  new schema draft out [1] and I plan coordinating with the schema group to  improve the DTD and schema.)      [1] http://www.w3.org/TR/2000/WD-xmlschema-1-20000225/    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 04:17 PM 7/13/99 -0500, Dan Connolly wrote:   >It's a real pain that between RFC1630 and RFC2396, the   >term "URI" got changed from including the #fragmentID   >to not including it, but there you are.    Ahh... now I partly understand the root of the inconsistencies I've seen.     >The HTML 2.0 spec uses the term "anchor address"   >to mean an absolute URI with an optional fragment identifier.   >You can use that, or define the term "web address"   >analagously.    I'd rather not invent a term, and people find "web *" to imply it is a  network accessible resource ...     >You might be trying to use the term "XML locator" to   >mean just that:   >   >   >XML-Signature referents are identified with   >        XML locators (URIs or fragments)   >   >But note that it (currently) doesn't;   >it proposes a sort of extension to URIs using the |   >to signal some new semantics. Did you mean to   >include this new | feature?   >   >http://www.w3.org/TR/1998/WD-xlink-19980303#addressing     This is a worthwhile reread. However, as an XML application that is XML link  savy, I'd have to say we mean locator, I've stuck that in.. However, based  on the FTF meeting, I've added the following because people are fairly  frightened of the ambiguities presently.    !The WG may specify security requirements that constrain the operation of   !these dependencies to ensure consistent and secure signature generation   !and operation. [Oslo}    >Anyway... I suggest you strike "Whenever possible" from    Good idea.     >and replace   >Ability to specify algorithms independently and to   >reference the algorithms linked to standard algorithm   >specifications (e.g. OIDs)   >   >with a note saying that if you want to use a signature   >algorithm in conjuction with XML-signature, you've got   >to define a URI for it. Hmm... seems we're lacking   >a spec for oid: URIs. Easy enough to fix... just   >write a little spec like the uuid: URI scheme.    At the FTF, people were of the mind they wanted to avoid OIDs per-se and I  agree, but I -- at least -- am a bit fuzzy as to the point of casting an OID  as a URN which is a URI. Perhaps necessary, but not quite sure what it  solved.      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 14:23 00/03/01 -0500, Ed Simon wrote:   >  "xmlns="http://www.w3.org/xml/security/keyinfo#"   >   for the the KeyInfo element    I'm not sure what this buys us (besides more namespaces). The dsig namespace  unambiguously identifies it. For instance:    <Encryption xmlns="http://ietf.org/RFCXXX">      <EncryptionMethod Algorithm="http://pgp.com/pgp"/>     <EncryptionValue>j6lwx3rvEPO0vKtMup4NbeVu8nk=</EncryptionValue>      <KeyInfo xmlns="http://www.w3.org/2000/02/xmldsig#">         <KeyValue>MIIBtzCCASw</KeyValue>     </KeyInfo>  </Encryption>    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 07:33 PM 7/20/99 -0500, Richard D. Brown wrote:   >> This also touches on the issue of being able to sign   >> the original content (the PDF file) instead of the encoded   >> and attached version of the original content.   >> Richard: how did you propose to do this?   >   >If you refer to the proposal I did to Richard Himes, it consists of   >packaging the encoded content of the resource and the detached signature in   >a single XML document. The encoded content is encapsulated in an XML  element   >that displays the encoding scheme as well as the 'Web locator' associated   >with the resource, whose content is being encapsulated. This proposal   >assumed that the application would decode and 'cache' the packaged  resources   >(or at least emulate such behaviors) before verification of the Resource   >elements contained in the signature Manifest. Notice that this proposal has   >been made in the context of a specific application and did not try to   >address the problem in general.    So the XML Package includes the encoding algorithm and source locator, as  well as the encoded form, which encapsulated the PDF file. Now what does the  actual signature manifest locator point to: the package or the source? If  the source then it might not know to look in the package; if the package, it  should sign the package. Part of the issue here is to what degree does the  URI speak of the location and/or encoding?     -------  _XML Package (ID=package)          : encoding algorithim          : resource locator          ____          _Encoding form                  _______                  _PDF File (ID=source)    I think my preferred solution would be a statement about a statement: (I  sign (I am the package/encoded form of (I am a contractual statement))) ... ?    Well, this will become much clearer once I have a data model in hand. (The  encoded form is merely the value of the property "encoded as" of the actual  resource, the signature is a property of the reified form of that  statement... Obviously I need to think it through further.)  _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      Martin (and the I18N WG/IG),    Thanks again for your comments. The disposition of your comments that  includes more explicit references to appropriate emails/minutes are at:          http://www.w3.org/Signature/20000228-last-call-issues#I18N  To respond to your email more directly: We've updated our draft to address  many of your comments:           http://www.w3.org/TR/2000/WD-xmldsig-core-20000510/  This draft reflects most of our responses to all the comments sent during  last call. Those issues not yet marked done, in combination with the  editorial to-do's (as stated in that STATUS of the spec) will be addressed  within the next few weeks (prior to going to CR).    As you can see, I hope we addressed most of your comments satisfactorily. I  believe many of the transform questions were resolved on the list when they  were raised. A few of the remaining transform and C14N issues have not be  explicitly resolved yet as I expect they will be more aptly covered in the  C14N specification, but I believe John Boyer hopes to publish a proposal  (and tweaked transform section ) that captures the changes and reflects the  advice you asked us to give implementors/users (or explain why it's not  necessary) within a few weeks.    I also feel obligated to point out that the one I18N request that was not  agreed to pertained to changing an element type name:            Choice of Element names: There is a 'Transforms' element           and a 'Transform' element. This is difficult to distinguing even           for English speakers. For people used to languages without           singular/plural distinctions, it will create even more confusion.           We ask you to change 'Transforms' to something like           'TransformList'.              Victoria#Internationalization:"It is suggested that we change           Transforms to TransformList, SignatureProperties to           SignaturePropertyList, etc., for easier understanding.           Participants appreciate concern but consensus at meeting           is not to change due to existing examples and code.     _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 14:31 7/30/2001, Joseph M. Reagle Jr. wrote:  >ACTION Reagle: write proposal akin to:    I've implemented [1] the proposal by creating an additional function _utilized that returns true for a given namespace node in an element (that is in the subset) if:   1. It's in the unsuppressedPrefixList   2. The element node.prefix is equal to the nsnode prefix.   3. Any attribute prefix is equal to the nsnode prefix.  Then I add another conditional to the decision to render to see if it's been utilized. This is on the same order of magnitude as inclusive (an extra function call with 3 conditionals and a loop through the attributes), but doesn't require any look ahead in the document. It also keeps namespace declarations closer to where they're used.    [1] http://dev.w3.org/cvsweb/2001/xmlsec-python/c14n.py?rev=1.10&content-type=text/x-cvsweb-markup    The following examples are evaluated with    '(//. | //@* | //namespace::*)[ancestor-or-self::e7]'  over a variant of example 3.    <!DOCTYPE doc [<!ATTLIST e9 attr CDATA "default">]>  <doc xmlns:foo="http://www.bar.org">     <e1   />     <e2   ></e2>     <e3    name = "elem3"   id="elem3"    />     <e4    name="elem4"   id="elem4"    ></e4>     <e5 a:attr="out" b:attr="sorted" attr2="all" attr="I'm"         xmlns:b="http://www.ietf.org"          xmlns:a="http://www.w3.org"         xmlns="http://example.org"/>     <e6 xmlns="" xmlns:a="http://www.w3.org">         <e7 xmlns="http://www.ietf.org">             <e8 xmlns="" xmlns:a="http://www.w3.org" a:foo="bar">                 <e9 xmlns="" xmlns:a="http://www.ietf.org"/>             </e8>         </e7>     </e6>  </doc>    The inclusive canonical form is (note e7 exhibits xmlns:foo, and e9 exhibits xmlns:a):    <e7 xmlns="http://www.ietf.org" xmlns:a="http://www.w3.org" xmlns:foo="http://ww  w.bar.org">             <e8 xmlns="" a:foo="bar">                 <e9 xmlns:a="http://www.ietf.org" attr="default"></e9>             </e8>         </e7>    The exclusive canonical form is (no xmlns:foo):    <e7 xmlns="http://www.ietf.org">             <e8 xmlns="" xmlns:a="http://www.w3.org" a:foo="bar">                 <e9 attr="default"></e9>             </e8>         </e7>    If I remove the attribute a:foo, and instead qualify element e8:               <a:e8 xmlns="" xmlns:a="http://www.w3.org">    The exclusive canonical form is:    <e7 xmlns="http://www.ietf.org">             <a:e8 xmlns:a="http://www.w3.org">                 <e9 xmlns="" attr="default"></e9>             </a:e8>         </e7>    --   Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      http://www.w3.org/TR/NOTE-xptr-req    A: Completeness requirements     ..      1. XPointers must identify XML information objects, rather than         necessarily their expressions in the raw XML syntax of a given         file.         For example, an XPointer can identify an element but not a tag,         and (potentially) an attribute; but not the equal-sign or         quotations that expressed it.    http://www.w3.org/TR/NOTE-xptr-infoset-liaison    B: Robustness requirements        1. The same structure must be generated regardless of whether the         parser was WF or validating.                   _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      The following is my visio version and edited DLG representation [1] of a  single instance/example of a data model. ([2] has some explanatory  comments.) It isn't redundant, but could easily be used to show multiple  signature over a single manifest or package, etc. It also looks really  complex on first glance, but it addresses innumerable rat holes quite well I  think. Also, remember a useful way to read these things are:    "Subject (has/is) Predicate Object" or  "Resource is related to Value via Property"    like:  Singature is Over Manifest. or  External is related to hashvalue via computes    Hopefully I'll post the resulting syntax of this example tomorrow which  should make it much more concrete for those that didn't argue in front on a  white board for 3 hours! <grin>    For background on the nature of the assertions/relationship of HTTP GET:  "external" and "show(M,C,I)" see [3]. For background (which might be  confusing at this point, because of the nomenclature that has evolved) on  the numerous assertions involved in a package, see [4].           [1] http://www.w3.org/Signature/Drafts/xmldsig-datamodel-19990819.gif  [2]  http://www.w3.org/Signature/Drafts/xmldsig-datamodel-comments-19990819.gif  [3] http://www.w3.org/Architecture/state.html  [4] http://www.w3.org/Signature/Drafts/xml-dsig-design-resources-990723.html      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      The XML Signature (xmldsig) Working Group will be having a FTF meeting San  Jose, January 21 [1].    [1] http://www.w3.org/Signature/Minutes/SanJose/Logistics.html    The goal of this meeting is to resolve all known open issues and produce a  specification that can be advanced to institutional last call within the  IETF and W3C. An institutional Last Call is basically a statement from the  WG that we think we've met the charter and requirements  -- and the rest of  the world should correct us if we are wrong before we advance the document  further.    Consequently, if there is an issue that you don't think has been raised or  satisfactorily resolved, speak now so we can discuss it next week.     CONFIRMED ATTENDEES    The following people have told the chairs they plan to attend. If you plan  to go but you are not listed or would like to present (a demo or prototype)  but have not told the chairs, please do so now.    John Boyer, UWI  Donald Eastlake, Motorola  Barbara Fox, Microsoft  Peter Lipp,  IAIK TU Graz  Brian LaMacchia, Microsoft  Joseph Reagle, W3C  Jim Schaad,  Microsoft  Ed Simon, Entrust   David Smiley, Sagasoftware  David Solo,  Citigroup  Raghavan (Rags ) Srinivas, Sun  Petteri Stenius, Remtec  Greg Whitehead, Signio    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      That's a good idea, so I tried that, but that doesn't change the fragment  problem from what I can see. It would fix the relative URLs to other files,  but it really isn't my intent for those documents to be read from the  namespace URL. (I could fix them in other ways too). Though, maybe we should  give that more thought. Because then if people want to use  xsi:schemaLocation, should the schema location be given as    http://www.w3.org/TR/2000/WD-xmldsig-core-20000510/xmldsig-core-schema.xsd  or          http://www.w3.org/2000/02/xmldsig#/xmldsig-core-schema.xsd ?    I think I prefer the first because that will never change, though there  might be slight tweaks in the thing found at the latter (and it's kind of  weird.)    So for the time being, I'll stick with an apache redirect from the namespace  to the actual spec. (Unfortunately, most browsers will mess it up when it  comes to finding the actual part of the spec that relates to that specific  namespace, like:          http://www.w3.org/2000/02/xmldsig#sha1 )    At 12:28 PM 5/31/00 +1000, Thomas Maslen wrote:   >> However, most browsers behave inconsistently with respect to fragment   >> identifiers in redirects.   >   >Ouch.   >   >For whatever it's worth, I added    >   ><base HREF="http://www.w3.org/TR/2000/WD-xmldsig-core-20000510/">   >   >to the document, and then used something equivalent to your original  symlink   >approach.   >   >With this setup, the browser did the right thing with a fragment ID, and  the   >relative URLs in the document also worked happily.   >   >Disclaimer:  I only tried this with one browser on one platform, so it's a    >long way from being conclusive, and for all I know the <BASE> may break   >something else.   >   >Thomas Maslen   >maslen@pobox.com   >    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Two notes on action items. John has sent me the latest scenarios draft,  which I've posted at [1]. (Thanks John!) I've been having a good  conversation with Ralph Swick on the data model, at first seemingly very  complex, and now getting simpler with some elegance/coolness resulting. But  I still don't have anything I can share with the group yet. Maybe by  tomorrow I'll have a GIF of  DLGs, maybe even some schema definition  language, but perhaps not. Took me much longer to catch up on trivia,  adminstrivia, and manegeria <smile> after being away for a week. Sorry!    [1] http://www.w3.org/Signature/Drafts/xmldsig-scenarios-990818.html    Forwarded Text ----   From: "John Boyer" <jboyer@uwi.com>   To: "Joseph M. Reagle Jr." <reagle@w3.org>   Subject: Scenarios upgrade      Hi Joseph,      Attached is a new scenarios document with more information in it.  Please   post this for consideration by the WG before tomorrow's call.     End Forwarded Text ----    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 11:45 99/11/25 +0100, Prince, Adam wrote:   >The issue I foresee and am trying to identify how it should be solved is:  if    >I know that future generations of a document will be created and wish to  sign    >a reference to the future (as yet uncreated) generations how can I have    >application independent support for this?.      Adam,     The W3C has issued the Resource Description Framework (RDF) [1] for this  very purpose. There are numerous application specific schema's and semantics  using XML syntax. RDF defines a data model and XML syntax for describing a  portion of interoperable application semantics that will be common to many  data applications. The semantics RDF focusses on are the relationships  between resources.     >The clearest example of this I can think of is a digitally signed  employment    >contract that states the employee must comply with the current employee    >handbook that is always maintained at    >..../intranet/HR/current-employee-handbook.htm.  Since this is a legal    >contract some form of non-repudiation may be required.    The RDF syntax ' rdf:about="http://mypage.com"' is an assertion about a  resource (and not necessarily it's content at any moment.)    Consequently you could have an XML/RDF application like the following, and  sign that:    <?xml version="1.0"?>  <rdf:RDF    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"    xmlns:s="http://scala.se/schema/employee-policies">    <rdf:Description  about="scala.se/intranet/HR/current-employee-handbook.htm">      <s:Must><s:Read>All</s:Read></s:Must>    </rdf:Description>  </rdf:RDF>    [1] http://www.w3.org/TR/REC-rdf-syntax/      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 14:19 99/10/28 -0700, John Boyer wrote:   >What do you mean "There it was still:"   >   >As I recall, it was an element (which I liked), it got changed to an   >attribute (which I didn't like), I recommended that it stay an element and   >put the URL as an HREF for the Location element, I heard nothing, and it is   >still an attribute according to the Oct 22 draft on our website.   >   >Are you looking at a newer draft and if so, can I have one?    Woops, yes you are correct, it actually appears as       <ObjectReference Location="http://www.ietf.org">   in [1].    The reasons for the change still hold from my earlier email (trying to be  syntactically consistent), it just got reflected in the draft earlier.  However, one could ask shouldn't DigestMethod also be an attribute, and I  can't find a compelling reason why it shouldn't be... Unfortunately, I'm a  little lost as to where we are on some of these threads, but I (personally)  think of the semantics as follows. (I always ask myself what assertions are  being made.)    The (object) pointed to by ObjectReference has a location of  http://www.ietf.org  The (object) pointed to by ObjectReference has a DigestValue (object)          DigestValue (object) has an algorithm of urn:nist-gov:sha1          DigestValue (object) has an encoding of Base64          DigestValue (object) has a literal value of a23bcd43    (See [2] for my take on what our current data model is.)    This could directly translate to the following syntax -- among others,  depending on your conventions.        <ObjectReference Location="http://www.ietf.org">         <DigestValue Algorithm="urn:nist-gov:sha1"                   Encoding="urn:ietf-org:base64">a23bcd43</DigestValue>       </ObjectReference>     [1] http://www.w3.org/TR/1999/WD-xmldsig-core-19991022.html  [2] http://www.w3.org/Signature/Drafts/xmldsig-datamodel-19991025.gif      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      I believe the issue is that there will be no public URL.    At 05:23 9/7/2000 -0400, Lincoln Stein wrote:  >I am delighted for you to translate the FAQ.  When you do that, send  >me the URL and I will make a link to the Japanese version.  I already  >do this for the Russian translation.  >  >Best,  >  >Lincoln  >  >muramatsu writes:  >  > Thank you for your kind recommendation.  >  > I look forward to hearing from Mr. Lincoln Stein.  >  >  >  > ----- Original Message -----  >  > From: Joseph M. Reagle Jr. <reagle@w3.org>  >  > To: muramatsu <yuriko@isbu.ho.nec.co.jp>  >  > Cc: <lstein@cshl.org>; <site-policy@w3.org>; <w3c-translators@w3.org>  >  > Sent: Tuesday, September 05, 2000 10:24 PM  >  > Subject: Re: redistribution terms  >  >  >  >  >  > > The W3C "hosts" the WWW Security FAQ and now that you raise the issue I  >  > > wonder about its copyright status. However, I presume Lincoln holds the  >  > > copyright and agrees that it be distributed under the W3C license, and  >  > > consequently translatable if the conditions are met.  >  > >  >  > > I'd recommend that if you follow the conditions [1] then you may   > translate  >  > > it provided that you provide a copy to Lincoln, perhaps he can find it a  >  > > public home. If Lincoln agrees to this (he's cc:d), I see no problem.  >  > >  >  > > [1] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#translate  >  > >  >  > > At 08:58 9/4/2000 +0900, muramatsu wrote:  >  > > >Dear Mr. Reagle:  >  > > >  >  > > >Thank you for your quick response.  >  > > >It's "The World Wide Web Security FAQ" at  >  > > >http://www.w3.org/Security/faq/.  >  > > >  >  > > >I appreciate your kind help.  >  > > >  >  > > >Best regards,  >  > > >Yuriko Muramatsu  >  > > >yuriko@isbu.ho.nec.co.jp  >  > > >  >  > > >----- Original Message -----  >  > > >  >  > > > > May I ask which document? Then I can consult the authors as well.  >  > > > >  >  > > > > At 18:14 9/1/2000 +0900, muramatsu wrote:  >  > > > > >Hello,  >  > > > > >  >  > > > > >I would like to translate one of the W3C documents, but  >  > > > > >have no place to put the work in the public Internet.  >  > > > > >Does this mean I will fail to comply your redistribution terms?  >  > > > > >I could meet all of the other requirements, and plan to  >  > > > > >directly send it to interested people or upload it to our  >  > > > > >intranet (unfortunately it's not publicly available).  >  > > > > >  >  > > > > >Best regards,  >  > > > > >Yuriko Muramatsu  >  > > > > _________________________________________________________  >  > > > > Joseph Reagle Jr.  >  > > > > W3C Policy Analyst                mailto:reagle@w3.org  >  > > > > IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/  >  > > > >  >  > > >  >  > >  >  > >  >  > > _________________________________________________________  >  > > Joseph Reagle Jr.  >  > > W3C Policy Analyst                mailto:reagle@w3.org  >  > > IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/  >  > >  >  > >  >  >--  >========================================================================  >Lincoln D. Stein                           Cold Spring Harbor Laboratory  >lstein@cshl.org                                   Cold Spring Harbor, NY  >========================================================================      _________________________________________________________  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 04:56 PM 6/8/00 -0400, Ken Goldman wrote:   >I've been looking at the same problem (a collection of signed   >documents within another signed document).  Below is my attempt at   >an example.    Thanks for the well stated proposal [1] Ken. If I can summarize your points  and give my initial thoughts (others should pitch in too), let me know if I  misunderstood.    1. It is possible that signed IDs may collide (and cannot be changed) "when  combining two signed documents into a third." We've stated that the  requirement is part of the XML1.0 specification (and a necessary one). A  solution to this problem has not be addressed by a proposal that this WG has  consensus on. (And some feel (including me) it would not be approriate.)  Consequently, applications need to be careful.    2. Regardless of the above, the application might not be careful. You  present an example in which an application might interpret the validity of  some content based on the proximity of the syntax of the content to the  syntax of the Signature. This WG had two approaches to binding content to a  Signature: (1) binding via proximity (or the nesting of the XML) or (2) via  References. We've obviously went the Reference route and stated that  applications need be careful. I think your cogent example merits a sentence  or two in Security considerations at least.    3. You propose more than a few sentences <smile>. Presently, the  specification permits arbitrary URI specification with RECOMMENDED XPath  support and OPTIONAL XPtr support (other than the recognition of the Bare  Name syntax which is REQUIRED). Your proposal is to remove the requirement  for Bare Name support and REQUIRE a specific expression for identifying  document IDs; one that limits all ID based references. I have concerns on  this because of the following:    A. Specifying constraints of the URI="" attribute value is a new axis of  compliance (instead of a minimum support, it excludes potential expressions)  and one that is difficult to enforce. How would we formally specify this?  Can you define a schema pattern facet [2] that would do this?  B. Would such a pattern preclude other useful expressions?  C. Your screw case may be a desirable scenario to some applications that are  implemented properly; I think that's the case for the signing nesting  Signatures and their SignatureProperties.  D. It still doesn't solve the fact that collisions may occur, but  indemnifies the risk for sloppy applications.    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000AprJun/0237.html  [2]  http://www.w3.org/TR/2000/WD-xmlschema-2-20000407/datatypes.html#element-patt  ern    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Presently, our algorithm identifiers are:    http://www.w3.org/2000/02/xmldsig#dsa  http://www.w3.org/2000/02/xmldsig#rsa-sha1    Should we move to http://www.w3.org/2000/02/xmldsig#dsa-sha1 for consistence?    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 17:20 99/11/08 -0700, rhimes@nmcourt.fed.us wrote:   >Aren't we causing the problem that is "not ours to solve" by freezing these   >values that will likely change?    We didn't freeze them, they are frozen by definition: if someone uses a URL,  that is an assertion that             A: the content dereferenced at URL and transformed yields the           following DigestValue.    How do you make an assertion sans location semantics, such that:            B: some object when found and transformed yields the           following DigestValue  ?    I think this is a valid question. We have a requirement to identify objects  via URIs. The URI need not be a URL. (In fact, I think the DigestValue is a  good URI). We could relax that requirement and remove "Location" from the  signature and only provide it as a resolution hint; or we permit a level of  indirection pre/post signature creation. Pre: ObjectReference uses some  mechanism such as a directory, URN, manifest etc. that provides resolution.  Post: you allow a "redirect" or "cache" statement to be associated with the  signature that states "the URI found in ObjectReference resolves to X"     >>Z.a ObjectReference with Identifier/Location "http://2" yields content''   >>Z.b content==content''   >   >I think this would be appropriate in some contexts where we need the  detailed   >audit trail of location changes, and it would be a nice option.  It may be  a bad   >example, but (an example I just e-mailed, sorry for the dup) suppose I  manage a   >site with signed RDF statements about the documents on my site and I  "dumbly"   >used URLs to refer to them.  Gigacorp buys my company and changes the  domain to   >www.gigacorp.com.  I'd prefer to just correct the references than to add   >thousands of RDF statements correcting each reference.  Also, in my court  filing   >example where I am moving a document (base 64 PDF) from a delivery  envelope to a   >native PDF, I don't want the clutter (the standard needs to be less  intrusive   >IMO.)    If the fact that those statements were found at www.gigacorp.com was not  part of the semantics you wanted to be bound by (and I agree with Phillip  that some people do want to assert this) I'd recommend using an IDREF as the  URI of the resource that is digested, and the IDREF points to an object in  the signature which includes "hints" for finding and resolving content.       _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      http://www.w3.org/Signature/Minutes/991209-tele.html                         [1]IETF [2]W3C   [3]XML Signature WG          [1] http://www.ietf.org/        [2] http://www.w3.org/        [3] http://www.w3.org/Signature/Overview.html      99-December-09    Chairs: Donald Eastlake and Joseph Reagle    Note Taker: Joseph Reagle [[4]ascii]          [4] http://www.w3.org/Signature/Minutes/991209-tele,text    Participants         * Donald Eastlake 3rd, IBM       * Joseph Reagle, W3C       * Mark Bartel, JetForm       * Ed Simon , Entrust Technologies Inc.       * John Boyer, UWI       * Peter Lipp,       * Todd Vincent, GSU       * David Solo, Citigroup       * Richard Himes, US District Court of New Mexico      Review of Outstanding Action Items         * ...        Status of documents < 5 minutes       Requirements: pending IESG advancement to Informational RFC.       Post a Core version this week to WG page, then hopefully another one     that addresses any SignedInfo syntactical changes as a pseudo     proposal.        Signature Syntax & Processing draft questions:         * Transforms and Node Sets            + conversation resulting from Kent and Boyer on "the output of              the this transform is a new XML document" -> the output of              the XPath transform is a node set, string, boolean, or              number. Boyer will send text to replace present text.            + if you want text, then you must call the function 'string()'            + XMLSig needs to define an order of attributes (and              namespaces). Boyer will send text on how xmlns are ordered.       * John is asking for a [5]validate attribute.            + Solo: need a very mechanistic and non-variant way to do deal              with the signature over actual content referenced in the              core: sign one or more things, if it comes back as valid,              they all come back. References in the core signature that              allow objects to change and come back as valid is an absurd              premise. The core references' content can't change.            + [Reagle gets caught in conversation and doesn't take good              notes.]            + No concensus to introduce validate attribute.       * [6]Eastlake's Syntax Proposal            + Call discusses Don's proposal though most haven't had a              chance to look at it closely. Generally people are              comfortable with grouping ObjectReferences in a Manifest              other things (like Object and SignedProperties) need more              discussion.            + Reagle: Discuss proposal on list. After a weeks conversation,              Don should try to represent his proposal as a variant spec.              By 12/21 have a sense of what changes if any WG is              comfortable with. Once we've made those decisions public a              draft. In January begin producing functionality FAQ (How do I              sign the KeyInfo, how do I create a location indepedent              signature) using stable syntax as a way to mediate WG last              call. And use stable syntax to write examples for rough              interop testing.          [5]  http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/1999OctDec/0438.html        [6]  http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/1999OctDec/0444.html        Face to Face meeting arrangements < 10 minutes         * Meeting is in SanJose on the 21st, further logistics should         follow.          _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 10:48 99/10/28 -0400, Winchel 'Todd' Vincent, III wrote:   >1. Who is the intended audience?  If the audience is this group or even   >regulars in the W3C and IETF, then some of the terms may be elementary and  a   >lot could be easily deleted.  If the audience is wider (for instance, I am   >thinking specifically of the Legal XML group with which I am working), then   >many of the terms may be new and unobvious.    Audience is implementors.     >2. What would you like to see added or deleted?  (Or simply a general   >statement that the list is way too long, too long, or OK.)    Add like to see words that frequently collide. repudation, non-repudation,  authentication, attribute, property, value, resource, canonicalization.     >Authentication   >C14N   >Canonicalization Algorithm   >Confidentiality   >Content (resource manifestation)    collide: element content, content resulting from dereferencing a URI.     >Digest Algorithm   >Digest Value    Digest.     >Identifier   >Identifier, Fragment    ID.     >Manifest   >Message Integrity   >Non-Repudiation   >Package   >Resource   >Resource, Signed   >Resource, Web   >Resources [RDF]   >Signature   >Signature, Detached   >Signature, Direct   >Signature, Embedded   >Signature, Indirect   >Signature, Unenveloped Direct   >Signature, Unenveloped Indirect   >Signatures, Multiple   >Unenveloped Embedded Content   >URI   >URL   >URN   >Validate    Signature validate, trust validate.     >XML Signature Semantics   >XML Signature Syntax       _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      After further conversation regarding section 6.1, I think the following is  the best representation of the WG intent (basically, the document is  unchanged):    1. The document will continue to state, "This specification defines a set of  algorithms, their URIs, and requirements for implementation. Requirements  are specified over implementation, not over requirements for signature use."  We'll continue to rely upon the text in 8.4 [1] to warn Signature users of  the potential hazards of other algorithms, "Even more care may be warranted  with application defined algorithms."  2. There's no proposal nor agreement to change the definitions or dataytpes  of SignatureValue, SignatureProperty, or KeyInfo.  3. To answer the thread on hash algorithms as signature algorithms, the  natural language definition of Signature requires a key to be associated  with the content, consequently a simple hash SignatureMethod is an incorrect  reading of the specification. Enforcement of this requirement falls to the  users of the Signature applications (like all the issues in section 8 [2]).    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000AprJun/0268.html  [2] http://www.w3.org/TR/2000/WD-xmldsig-core-20000601/#sec-Security    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 09:09 8/2/2001, Joseph M. Reagle Jr. wrote:  >At 20:44 8/1/2001, Dournaee, Blake wrote:  >>This would allow me to change the URI without altering the validity of the  >>signature.  >  >If it's being used in the Canonical XML context, remove the '//@*' from:  >         (//. | //@* | //namespace::*)    As an aside what I suggest doesn't actually work in the Python   implementation and I welcome any thoughts.    In the Python implementation even the Xpath subset is still a DOM set:   there's no namespace axis property and it considers ns declarations as   attributes. A consequence of this is is that our implementation is   non-compliant when it comes to canonicalizing certain xpath expressions over   namespaces and attributes.    The typical expression is all elements, attributes, and namespaces          '(//. | //@* | //namespace::*)    If we tweaked our code to try to address the problem of not rendering   attributes and namespaces when not in the subset we still have problems   because of the DOM nodes from the subset.    If we omit attributes:          '(//. | //namespace::*)  we lose attributes *and* namespaces. If we omit namespaces          '(//. | //@*)  nothing happens.    The  XPath subsets from implementations I've looked at behave like DOM (as   described in the two examples above) instead of XPath, and I don't think we   can get much help from DOM 1 or 2:    >http://www.w3.org/TR/DOM-Level-2-Core/core.html#Namespaces-Considerations  >As far as the DOM is concerned, special attributes used for  >declaring XML namespaces are still exposed and can be manipulated just  >like any other attribute. However, nodes are permanently bound to  >namespace URIs as they get created.    I'm not sure if there are any XPath implementations that actually return an   XPath subset with namespaces in a namespace axis, not as attributes. Is that   what other folks are using?        --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 17:45 1/14/2001 -0800, Brian LaMacchia wrote:  >Because I want to strongly discourage this! If someone is going to have  >something from MyPGPNS, what's the benefit/meaning of having this  >included  >in our namespace qualified PGP element?  >  >[bal] Because if I build a lightweight parser the knows I only care  >about <SPKIData> stuff, I can skip over everything between <PGPData> and  ></PGPData>.  That is, when I place the new element MyPGPNS:foo under the  ><PGPData> ... </PGPData> element I'm declaring a small piece of  >metadata, namely that MyPGPNS:foo is of the same class of data as other  >things in PGPData.    The nice thing about schema is that it allows you to declare this   relationship explicitly. In this instance, you are proposing that we use the   <ds:PGPData> as an element that is acting as an additional "typing"   mechanism; in this case it does not require the presence of the schema, but   this semantic must also be expressed in natural lanugage in the spec and   specially coded for.    >This is meaningless to parsers and schema validators.  >  >[bal] Why do you say this?  It can be parsed, it can be schema  >validated, and when I get the nod structure back from the parser and  >start analyzing for semantic content, I can semantically qualify the  >extension elements.    I mean their relationship is not automatably meaningful. Your proposal has   to be handcode for (but it permits light parsers) my proposal lets this work   be done by schema, but requires schema.    >How would they define their own schema such that children  >are going to get used from their namespace in our context (and away from  >their own parent)?  >  >[bal] The same way you do this for any other extensible schema element?  >Why is this any different?    I believe ANY only permits "global elements" to be incorporated in, so if   there is some schema out there that permits:  <root>     <global>       <local>    those local elements can't be incorporated in via ANY.    >--  >  ><ds:PGPData>  >    <ds:PGPKeyID>foo</ds:PGPKeyID>  >    <mypgp:GreatElement>bat</mypgp:GreatElement>  ></ds:PGPData>  >  >Is confusing. What's the relationship between PGPData's and  >GreatExtension? GreatExtension had a parent, but now it's just been plucked   >from it's schema and stuck in PGPData, maybe in its schema, it was never   >intended to be used alone like this (because of the definition of its   >parent), but now it is! You've advocated the need for this for extension   >capabilities in the short term because schema isn't a REC yet, and I've   >budged. However, any other KeyStructure standards that are written   >expecting to be used like this I would object to.  >  >[bal] OK, so how do I extend KeyInfo then?  What you seem to be implying  >is that the W3C Schema religion does not allow extensible data  >structures at all!  That can't possibly be true, can it?  It Schema  >really so brain damanged that extensibility mechanisms must be put into  >string values?    I'm advocating that it be extended by creating a new type, that is a class   of our own. (Actually, as we agreed to before, I'm not opposed to the above,   I'm just not keen on it, what I'm opposed to is below...)    >Plus, if the above instance ended up being a useful structure, others  >can't extend it themselves as a class. It's a mule (donkey+horse) and unable  >to go further.  >  >[bal] I don't understand this.  Are you saying, "well, they can't  >redefine the schema for ds:PGPData so they're stuck."  But that schema  >allows an <any...> so they can plug in there?    If someone wants to take the construct above and create a new class out of   that, they can't really since it's a "mule."    >--  ><ds:PGPData>  >    <mypgp:PGPData>  >      <mypgp:BetterPGPKeyID>foo</mypgp:BetterPGPKeyID>  >      <mypgp:GreatElement>foo</mypgp:GreatElement>  >    </mypgp:PGPData>  ></ds:PGPData>  >  >Has the unique characteristic of being ambiguous (relationship between  >the two PGPData's) and when disambiguated (requires human) redundant! It  >should be under KeyInfo.  >  >[bal] Why is this ambiguous?  You've defined two different tag types;  >there's no implied relationship between ds:PGPData and mypgp:PGPData  >because they're namespace qualified.    You're asserting that there is an implied "meta data typing" relationship.   I'd rather this relationship be explicit and expressed in schema.    >--  >  ><mypgp:PGPData>  >    <mypgp:PGPKeyID>foo</mypgp:PGPKeyID>  >    <mypgp:GreatElement>foo</mypgp:GreatElement>  ></mypgp:PGPData>  >  >with the schema declaration:  >  ><complexType name="PGPData">  >   <complexContent>  >    <extension base="ds:PGPData">  >     <sequence>  >      <element name="GreatExtension" type="string"/>  >     </sequence>  >    </extension>  >   </complexContent>  ></complexType>  >  >Is clean! A parser knowns that any instance of mypgp:PGPData is just  >like  ds:PGPData but with a new element!  >  >[bal] I'm not familiar with <extension...>, so how does that define  >where the new element goes in the already-defined PGPData?    It doesn't, it goes under KeyInfo. The application looks at the mypgp   namespace, see's a schema, sees this is an extension of PGPData (for which   it already knows how to deal with) plus a string. The schema or other data   associated with the namespace might tell it how to deal with that string.    >defined here in the extension?  And won't I end up having to transport  >the new schema everywhere I transport the new KeyInfo blob?    It's at a URI, so it does require an association between a namespace and a   targetSchema.    >And if I do this, any V1 code that isn't schema-aware will not be able to do  >anything with this element at all.    True.    >[bal] In summary, it sounds like what you want is a spec that requires  >schema-aware XML parsers in order to handle any extensions to the base  >data types defined in XMLDSIG.  I am not at all convinced that is a good  >thing for lightweight devices.  If it becomes impossible to use XMLDSIG  >in private-label operations without bundling in a whole bunch of schema  >stuff I fear we will drive off a whole boatload of potential customers.    This is correct, and I'm happy to go with the consensus now that the issue   is clearly identified! <smile>      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        >This describes a simple HTTP header syntax (or HTML META tag) to    >define the copyright status of a document in a machine-readable way,    >and provide a link to a reference document which would define    >the status explicitly.    This is an interesting approach. I've been thinking about IPR protection  for a couple of years now. Previously it was with respect to SMPTE headers,  which caused big problems because of the question of what fields and  information to include (proposals for specifying usage rights can become  quite unwieldy). This was a problem, because we did not have convenient  ability to point elsewhere (as we do on the Web), hence what we packed into  the header could become quite a religious issue. However, on the Web we are  a bit more fortunate, _and_ the PICS standard that you can find off of  (http://www.w3.org) seems to be the perfect method for specifying the type  of information you propose.        >The purpose of this proposed header is twofold.    >1. To make it easier to design agents that may create compilations    >of existing work automatically, or to search for only copyright-free    >material.      PICS has this goal directly in mind.    >2. To make it clear to consumers (via a popup, for instance)    >that certain material is copyright when they perform actions such    >as printing or saving a page.    This type of functionality is already included with respect to  "appropriateness" in IE.          >Briefly, one includes a header or META tag such as    >Copy-Control: v 1.0 p 1 s 1 q 2 u http://some.org/copy.html    >or    ><META HTTP-EQUIV="Copy-Control" CONTENT="v 1.0 p 2 s 2 q 2">    >where the values for p(rint), s(ave), q(uote) are given    >0 = forbidden, 1 = conditional, 2 = allowed.    To map something similar to PICS, consider the case in which Mark Twain  wrote the material at http://www.twain.com/story.html . He also has a page  describing the copyright statement in fuller detail at  http://www.twain.com/IP-notice.html . He is going to use the system you  specify with respect to "Print", "Save", and "Quote", where the specified  values represent 0 - disallowed, 1 - conditionally allowed, 2 -  unconditionally allowed:    (PICS-1.1 "http://www.wipo.org/v1.5"    by "Mark Twain"    labels on "1994.11.05T08:15-0500"           for "http://www.twain.com/story.html"           full "http://www.twain.com/IP-notice.html"           ratings (print 1 save 1 quote 2))    Some of the benefits of using PICS:    1. Multiple distribution methods (embedded within the document, transported  by the server, or from a label bureaus). This improves the management of  the copyright information. (i.e. Organizations can control the use and  access to their IPR from their server. Organizations can create "audit"  spiders.)  2. Generic labeling (implicitly rates every URL for which the specified URL  is the prefix of) This improves the management of the copyright  information, since I don't have to label every document in a directory if  they have a similar status.  3. Capabilities for digital signatures are provided.  4. It is being widely leverage in Web development.        ___________________________________________________________  Joseph Reagle Jr.  Personal: http://rpcp.mit.edu/~reagle/home.html  Policy Analyst     World Wide Web Consortium:    http://www.w3.org        

      I will tell Arnaud that we will commit to reviewing this document by the  stated deadline; we can spend a little time at the FTF next weekend to  finalize and comments we would have.          http://www.w3.org/TR/1999/WD-xml-c14n-19991115       Forwarded Text ----   Date: Wed, 12 Jan 2000 14:03:42 -0800   From: Arnaud Le Hors <lehors@us.ibm.com>   Organization: IBM   To: Donald Eastlake <dee3@torque.pothole.com>, Joseph Reagle  <reagle@w3.org>,           Misha Wolf <misha.wolf@reuters.com>   CC: Dan Connolly <connolly@w3.org>, Paul Grosso <pgrosso@arbortext.com>,           Daniel Veillard <Daniel.Veillard@w3.org>, w3c-archive@w3.org   Subject: Canonical XML Last Call   Status:         Donald, Joseph, and Misha,      The XML Core WG is planning to go to Last Call for the Canonical XML WD   next week. Both of your groups have been identified as critical   reviewers for this document. Can your respective Working Group commit to   reviewing it by February 22, 2000?      Thanks.      Arnaud  Le Hors, Paul Grosso   Chairs, XML Core WG     End Forwarded Text ----    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 10:40 4/10/2001 +0100, merlin wrote:  >SHA-1. I don't believe that we should use these same URIs  >to identify the actual public key encoding.    Ok, have a look at the editors' copy now:           http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html#sec-KeyValue      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 10:04 10/19/2000 +0200, Gregor Karlinger wrote:  >thanks for adding IAIK to the interop matrix.    Ok, I've updated it based on your comments.    >I am not sure what "Feature: laxly valid enforcement of Signature element  >schema definition." means    I expect this to be the least rigorously enforced requirement in   implementations, but from the specifications point of view, this is how we   make the schema normative:    http://www.w3.org/TR/2000/WD-xmldsig-core-20001012/#sec-Signature  4.1 The Signature element  The Signature element is the root element of an XML Signature. Signature   elements MUST be laxly schema valid [XML-schema] with respect to the   following schema definition.    http://www.w3.org/TR/2000/WD-xmlschema-1-20000922/#cvc-elt-lax  Validation Contribution: Element Valid (Lax)  An element information item is laxly schema-valid if either  1.1     The item is strictly schema-valid as defined by Element Valid   (Strict) (?3.3)  or  1.2.1   The [local name] and [namespace URI] does not resolve to an element   declaration, as defined by QName resolution (Instance) (?3);  1.2.2   All the element information item [children] and [attributes] of the   item are laxly schema-valid, as defined by this constraint or Attribute   Valid (Lax) (?3.2), respectively.        __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Since XML and RDF are explicitly designed to do data and resource  description, we do not specify much of our own. Instead we expect others to  design such applications in XML/RDF, over/with which our signatures will  orthogonally operate. However, we do provide the following element:      5.2 The SignatureProperties Element       Additional information items concerning the generation of the     signature(s) can be placed in a SignatureProperty element (i.e.,     date/time stamp or the serial number of cryptographic hardware used in     signature generation.)    http://www.w3.org/TR/2000/WD-xmldsig-core-20000208/#sec-SignatureProperties    Signature validating applications have no obligation to understand the  content within this element, they are only REQUIRED to process core  validation [1] with respect to the simple semantic  "XML Signatures provide  integrity, message authentication, and/or signer authentication services for  data of any type, whether located within the XML that includes the signature  or elsewhere." That's it.    [1] http://www.w3.org/TR/2000/WD-xmldsig-core-20000208/#def-ValidationCore    However, this element provides one (of many) places one could place an  assertion about a signature, such as a timestamp, hardware profile, or  semantic extension. For instance, one could assert within a  SignatureProperty that the containing signature means "authored by." Again,  while the signing application should be very careful about what it signs (it  should understand what is in the SignatureProperty) a receiving application  has no obligation to understand that semantic (though its parent trust  engine may wish to).    This isn't very well explained in the present spec, though I think the text  above does capture the sentiment expressed by the WG.    Consequently I propose adding similar text (unless someone thinks I got it  wrong, which is a very real possibility.)      At 07:36 00/02/13 -0700, John Messing wrote:   >I am a chair of the Signatures Workgroup of legal XML, but this note is   >simply submitted as my personal comment pending a decision by our group on   >whether to submit a group position.   >   >I believe it might be helpful to add an optional element for "other   >signature data" to the standard. At the last RSA Data Security Conference,   >several vendors independently and in one cases jointly, introduced the   >concept of a policy manager (not always called by that name), which is a   >mechanism for adding information to a document to be signed about the   >authority of the signer to commit an enterprise or other legal or natural   >person to a transaction. Such information does not appear in the ordinary   >X-509 certificate extensions and is delegated to a policy manager, in my   >understanding, in order to supplement the X-509 certificate extensions   >information without having to go to a second round of authority certs. By   >having a convenient placeholder in the standard, this information will   >conveniently have a tag associated with it, if the applications software   >employs such a mechanism.   >   >As I am not on your group's mailing list, I respectfully request you to  post   >this in the appropriate place. Thank you.   >   >John Messing   >Law-on-Line, Inc.   >1661 N. Swan Rd., Suite 312   >Tucson, AZ 85712   >(520)327-7750   >jmessing@law-on-line.com   >    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 10:35 9/21/2000 +0200, Gregor Karlinger wrote:  >Hi Mark,  >  >The description of the first choice Joseph has given starts with:  >  > >1. To state that the canonical form of a document containing a relative URI  > >in a namespace is undefined, and consequently such a document can not be  > >signed. [...]  >  >My way of thinking is that an algorithm performing Canonical XML must return  >an error if it dedects relative URIs in the input. Maybe I am wrong, Joseph?    Excerpting from a member only version of the XML Plenary report:    >Q6:What does the DOM spec return for the namespaceURI attribute?  >A6: Unspecified; out of scope for this version of DOM.  >Q7:what's the value of the XPath namespace-uri() function with <aDoc> as   >the current node?  >A7: Unspecified. The 16 November 1999 XPath specification progressed to   >Recommendation with the understanding that multiple interoperable   >implementations implemented it as specified, or would soon implement it as   >specified. As it turns out, we have no evidence that multiple interoperable   >implementations implement the namespace-uri() function as specified.    Again, I'm not exactly sure what unspecified means (saying an error is   thrown is more specific than permitting applications to do as they wish as   Mark points out) but the end result is less interoperability for the   canonical spec, and regardless of the nuances of this issue, that's what I   think the big goal should be.          __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Peter,    RFC 2396, URI Generic Syntax, Berners-Lee, et. al.  http://www.ietf.org/rfc/rfc2396.txt    4.1. Fragment Identifier       When a URI reference is used to perform a retrieval action on the     identified resource, the optional fragment identifier, separated from     the URI by a crosshatch ("#") character, consists of additional     reference information to be interpreted by the user agent after the     retrieval action has been successfully completed.  As such, it is not     part of a URI, but is often used in conjunction with a URI.          fragment      = *uric       The semantics of a fragment identifier is a property of the data     resulting from a retrieval action, regardless of the type of URI used     in the reference.  Therefore, the format and interpretation of     fragment identifiers is dependent on the media type [RFC2046] of the     retrieval result.  The character restrictions described in Section 2     for URI also apply to the fragment in a URI-reference.  Individual     media types may define additional restrictions or structure within     the fragment for specifying different types of "partial views" that     can be identified within that media type.       A fragment identifier is only meaningful when a URI reference is     intended for retrieval and the result of that retrieval is       _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      If you have strongly held thoughts on any of these issues, let me know (cc  the list).    1. Presently, the C14N of XML includes expanded general entities which  produces a standalone document. Obviously parameter entities aren't a  problem, but PIs might be. Do you care about PIs?  2. Should the canonical form include an XML declaration with version number?  3. If C14N fails because of the unavailability of an external entity, do  XML Signature applications want to know?    *. Next week the Syntax WG will discuss Don and Hiroshi's n1 vs. hash prefix  issue.  *. Dan Connolly committed to adding a requirement to the XML Schema  Requirements Document from us and the I18N (internationalization) IG that a  datatype have a normalized/C14N form.    [1]      Date: Thu, 17 Jun 1999 09:47:13 -0700  From: Tim Bray <tbray@textuality.com>  Subject: C14n issue N2 - Processing Instructions  Status:       Suppose we have PIs in the external DTD subset.  The document can  still be standalone="yes", so in principle we can't put these in the  canonical form unless *require* processors to read the external subset.  So I see the following realistic options.  Let's hear opinions and    nail this down next Wednesday.    N2-a. Lose PIs from the canonical form entirely  N2-b. Lose PIs that happen to be in external entities  N2-c. Lose PIs that happen to be in the DTD, internal or external  N2-d. Include all PIs, requiring canonicalizers to read all external        parts of the DTD.    Note that both options b and c require information that is not   currently provided by the infoset, so we have some liaison work to do.  I must say that the more I think about this, both selection criteria  (it happens to be in the document entity vs. it happens to be in the DTD)  seem unsatisfactory to me.    N2-a and N2-D weren't brought up in the meeting, but the more I think about   them, the more I prefer either of them to either of -b and -c.  I have  an action item to ask the Infoset group about enhancing the PI information,  but I'll hold on that in case this group suddenly develops wild enthusiasm  either for N2-a or N2-d, which would make it unnecessary. -Tim      [2]      Date: Thu, 17 Jun 1999 09:47:13 -0700  From: Tim Bray <tbray@textuality.com>  Subject: C14n issue N4 - XML declaration?  Status:  O    Should the canonical form include the XML declaration?  Subsidiary  question: if so, which of the encoding and standalone declarations  should it include?    Let's hear opinions and nail this down next Wednesday.    Minor pro:   XML docs with XML declarations are more robustly interchanged  Minor con:   A couple of dozen extra bytes    Serious issue: if we include the XML declaration, that makes the  version of XML part of the canonical form. The corollory is that  should there ever be an XML 1.1 or 2.0, no XML 1.1/2.0 document  can ever be canonically equivalent to any XML 1.0 document.  Is  this a good or bad thing?       Note: if we leave the XML Decl out, and specify that this C14n  spec applies *only* to XML 1.0 documents, we can postpone the  decision about whether XML1 and XML2 docs can ever be canonically  equivalent to the time we write the XML2 c14n spec.  Sounds good  to me. -Tim      [3]      Date: Thu, 17 Jun 1999 09:47:13 -0700  From: Tim Bray <tbray@textuality.com>  Subject: C14n issue N3 - c14n processor  Status:       Should we introduce the notion of a canonicalization processor in the   C14n WD, and define an interface to it, maybe only a return value?  One advantage is that since canonicalization can fail due to inaccessability  of external entities, it might be nice to have a deterministic way to  find out when this happens.  On the contra side, every new thing  added to the spec increases complexity and the chance of introducing  errors, and makes conformant interoperability harder to achieve.    Let's hear opinions on this and try to nail it down next wednesday. -Tim    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      Bridge is now Open:    At 00:51 99/11/18 -0500, dee3@us.ibm.com wrote:   >Conference Call starts at noon eastern US time (EDT) 18 November. 1999.   >   >The call in numbers are 1-888-398-7616 and 1-212-547-0486.   >The password for call is 98305.  I am listed as the call leader.   >THIS IS A NEW PASSWORD AND INTERNATIONAL NUMBER.   >   >Agenda:   >     Agenda changes/additions.   >     Clean up from IETF meeting: slides/minutes < 5 minutes   >     Signature Syntax & Processing draft questions:   >     Schemas &/or DTDs < 10 minutes.   >     Other questions/items from latest posted draft < 15 minutes   >       Securing Location/Transforms - < 15 minutes   >       Levels of indirection, Manifests, References, ...   >     Con calls versus Thanksgiving/Christmas < 5 minutes   >     Face to Face meeting arrangements? < 5 minutes   >   >    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 07:58 7/12/2001, merlin wrote:  >The encoding (and, incidentally, your algorithm URI) belongs in &more;    If I understand you, I don't agree with this. This specification should   define its own identifier. Why would it exist in &more;?    Regardless, I'm of where it's specified, I believe the list needs to be   specfied in one of the following ways:          <Transform Algorithm="&exc-c14n">foo,bar</Transform>  Unless we decide it's encoded as part of the identifier:           <Transform Algorithm="&exc-c14n?unsupressed=foo,bar">    --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 20:12 7/20/00 +1000, Thomas Maslen wrote:   >In similar vein, CanonicalizationMethod is treated as optional in a few   >other places:     Thanks! I've fixed it in my editors' copy and should be represented in the  next version.        _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Based on interest by the Core WG to hand the Canonical  XML work item to the  XML Signature WG [1] and on reciprocated interest to receive it [2] (as it  is critical to our spec advancement and driven by our requirements) the XML  Signature WG will publish next version of a Canonical XML specification. I  believe from a technical and resource point of view, this is a good thing.  The open question relates to process. Need this be stricken from the Core  charter and placed as an explicit deliverable of the Signature WG? As the  Signature WG will still want Core review, and this issue is clearly within  Signature scope [3] (even if not an explicit deliverable) I would like to  propose that the Signature WG become the consensus fora for the  specification; part of that fora is feedback from the Core WG. Furthermore:    0. A change in Core's charter should be discussed by the XML Coordination  Group. A change in the Signature WG charter will be put on the agenda of an  upcoming coordination meeting between the W3C and IETF.  1. As the Signature WG is not part of the formal W3C XML Activity, it will  not need a seat on the XML Coordination Group, and as all interim drafts  will be public it need not comply with the plenary requirement of publishing  to plenary prior to the public.  2. The Signature WG need not produce an IETF standards version of this  specification (nor its pre-existing requirements document).   3. The Signature WG will be responsible for the next Last Call (the  specification already went through one) including comments from the Core WG  that will act as the liaison to the formal XML Activity.    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000AprJun/0070.html  [2] http://www.w3.org/Signature/Minutes/000420-Victoria/#C14N  [3] http://www.w3.org/Signature/charter-20000105.html#_Scope      2. Creating an extensible canonicalization framework. In addition,         specify application requirements over canonicalization. All         XML-DSig applications must be able to sign -- at least -- the         binary byte stream. The group may also require applications to         support XML syntax or Unicode canonicalization if those mechanisms         are widely understood and necessary. This group will coordinate         its requirements with activities delivering XML, RDF, or DOM         canonicalization mechanisms.          _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 11:28 7/11/2001, Donald Eastlake wrote:  >Regardless of how things come out with what we recommend  >for base64, I suggest the addition of some material in  >3.2 Core Validation as show in the attachment.    Don,    Instead of repeatedly spreading it out, it's not text as the top of the   validation section:    http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html#sec-CoreValidation  revision: 1.103  >3.2 Core Validation  >...  >Comparison of values in reference and signature validation  >are over the numeric or decoded octet sequence of the value.  >Different implementations may produce different encoded digest and  >signature values when processing the same resources because of  >variances in their encoding, such as accidental white space.    However, what do you mean by numeric *or* decoded octet?    --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      Tom,    I think your statements are exactly right, and I'm barking up the wrong tree  in speaking of collisions. However, I'm trying to address the point raised  by Masahiro and Martin:       Assume that a document contains XML with element names with     accented characters. Assume that this document is correctly     normalized. Assume that the signature includes NFC as a transform.     Now the following attack is possible: An intruder replaces the     normalized document by a document with some of the element     names unnormalized. The signature still works. However, an     XML/DOM processor or an XPath expression may (and in practice     will) work differently, because the unnormalized element is     assumed to be different from the normalized one....     and combine this with a DOM program that extracts the first     <amount> and pays somebody that much. After the change by     the intruder, the amount actually paid is $1000 instead of $10.     http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JanMar/0254.html    and      **** E.g. in Section 8, at a convenient location (e.g. 8.1), add          something like: Using character normalization (Normalization          Form C of UTR #15) as a transform or as part of a transform          can remove differences that are treated as relevant by most          if not all XML processors. Character normalization should          therefore be done at the origin of a document, and only          checked, but never be done during signature processing.     http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000AprJun/0314.html    Perhaps this is a problem is best addressed by the inverse of the  pre-existing rule of  "see what you sign" because:    1. I think I18N's concern is about an XML (DOM) processor operating over the  pre-canonicalized XML document after the Signature processor has declared  the signature over its canonilized form as valid. (For instance finding the  first instance of some element where character normalization may change what  is thought of the 'first element' but the Signature still validated.)  2. I don't think this concern is unfounded as we've (somewhat/sometimes)  expressed an expectation that processors won't operate over the  canonicalized form of the XML document. The C14N'ized XML is merely a  normalizing step prior to digesting. For instance, what if we had chosen to  design a canonicalization algorithm that did not output XML but a binary  format? Clearly, the XML processor is going to operate over the original XML  content and I18N's security concern is a valid one.  3. However, our expectations of C14N have changed in that we are using it  for document subsettting as will XML Query probably and the earlier  expectation was not the most secure.  4. Consequently we need to:  A. Ensure that DOM sees only what is Signed. This is our expectation with  XPath/XSLT and this should be no different. (We're getting close to "Boyer's  transform closure" issue where he wants to operate over the original XML  document though ensure that the transforms resulting in the final form  didn't introduce potential weakensses ((like character normalization).  B. State that the C14N transform is like any other transform and  canoniciization algorithms which yield binary results can be dangerous  because the result is not "seen".  C. Ensure that our own Signature Validator sees what was signed when it  validates the Signature. Consequently, I believe the Canonicalization of  3.2.2.1 needs to happen BEFORE Reference Validation of 3.2.1.1 .    Consequently, I've tweaked 3.2.1 Reference Validation    For each Reference in SignedInfo:   /+ 1. Canonicalize the SignedInfo element based on the  CanonicalizationMethod in SignedInfo. +/    AND section 8.1.3 "See" What is Signed (Do we still need the last paragraph?)    | Note: This new recommendation is actually a combination/inverse   | of the earlier recommendations and is still under discussion.    Just as a person or automatable mechanism should only sign what it "sees,"  persons and automated mechanisms that trust the validity of a transformed  document on the basis of a valid signature SHOULD operate over the data that  was transformed (including canonicalization) and signed, not the original  pre-transformed data. Some applications might operate over the original data  but SHOULD be extremely careful about potential weaknesses introduced  between the original and transformed data. This is a trust decision about  the character and meaning of the transforms that an application needs to  make with caution. Consider a canonicalization algorithm that normalizes  character case (lower to upper) or character composition ('e and accent' to  'accented-e'). An adversary could introduce changes that are normalized and  consequently inconsequential to signature validity but material to a DOM  processor. For instance, by changing the case of a character one might  influence the result of an XPath selection. A serious risk is introduced if  that change is normalized for signature validation but the processor  operates over the original data and returns a different result than intended.    Consequently, while we RECOMMEND all documents operated upon and generated  by signature applications be in [NFC] (otherwise intermediate processors  might unintentionally break the signature) encoding normalizations SHOULD  NOT be done as part of a signature transform.          At 19:03 2000-07-07 -0400, tgindin@us.ibm.com wrote:   >     I think we have a failure to communicate here.  I am making two   >claims.  First, the primary protection against digest collision attacks is   >the search time (and, for birthday attacks, storage) required to find   >digest collisions, not any limit on the number of documents with a given   >digest, so the third sentence of the proposed text is true but irrelevant.   >Second, even granting that it were relevant, the argument against   >normalizing the character set is also IMO wrong.  Let us suppose that the   >intended forgery is to insert the word "not" between "will" and "be" in a   >specific sentence.  Furthermore, let us suppose that a characteristic   >normalization transform maps the Latin-1 character for 1/2 (U00BD), the   >ASCII string 1/2, and the composed sequence 1 U2044 2 all to the same value   >on the grounds that they all represent the fraction one-half, and let us   >suppose that there are exactly 100 occurrences of the Latin-1 character in   >the document, but none of the others.  If the transform is applied before   >digesting, substituting one of the other two forms for 1/2 for the original   >has no effect on the digest, because the  transform maps all three to the   >same character sequence, so the forged document has only one possible   >digest.  If it isn't, each such substitution yields a different digest and   >the total number of digests available for the same document appearance is   >3**100, which is more than 1/3 of the total number of possible digest   >values.  Search time should still protect us, but the chances of finding a   >valid forgery are now restricted ONLY by search time.   >     In short, normalizing prior to digesting AVOIDS allowing   >inconsequential changes to change the digest.  If I have misunderstood the   >point of the section cited, I'm sure someone will correct me.   >   >          Tom Gindin   >   >   >"Joseph M. Reagle Jr." <reagle@w3.org> on 07/07/2000 05:58:35 PM   >   >To:   Tom Gindin/Watson/IBM@IBMUS   >cc:   "Martin J. Duerst" <duerst@w3.org>, w3c-ietf-xmldsig@w3.org, "John   >      Boyer" <jboyer@PureEdge.com>   >Subject:  Re: Followup on I18N Last Call comments and disposition   >   >   >   >At 10:52 2000-06-29 -0400, tgindin@us.ibm.com wrote:   > >Well, it probably isn't even correct to call this a  "Birthday Attack,"   >I'm   > >hoping someone else jumps in and tweaks the text, but I think the gist of   > >what you are after is there.   > >   > >[Tom Gindin] The wording of section 8.1.3 is somewhat unfortunate   >already.   > >While it is true that transforms appear to increase the number of   >documents   > >which map to the same digest, that number is already literally   > >astronomical.  For SHA-1, for example, the number of documents of length   >N   > >octets in UTF-8 which map to a given digest is 256**(N-20) or   > >2**(8*(N-20)).  Larger hash algorithms may increase the number 20   >somewhat,   > >but a 200 octet message restricted to printable ASCII would still exceed   > >2**1000.  Not normalizing before digesting is what allows inconsequential   > >changes to affect the digest.   >   >I've tweaked the text slightly in the forthcoming draft, if anyone want to   >suggest alternative text in future versions, please propose it:   >   >8.1.3 Transforms Can Aid Collision Attacks   >In addition to the semantic concerns of transforms removing or including   >data from a source document prior to signing, there is potential for   >syntactical collision attacks. For instance, consider a signature which   >includes a transform that changes the character normalization of the source   >document to Normalized Form C [NFC]. This transform increases the number of   >documents that when transformed and digested yield the same hash value.   >Consequently, an attacker could include a subsantive syntactical and   >semantic change to the document by varying other inconsequential   >syntactical   >values that are normalized prior to digesting such that the tampered   >signature document is considered valid. Consequently, while we RECOMMEND   >all   >documents operated upon and generated by signature applications be in [NFC]   >(otherwise intermediate processors might unintentionally break the   >signature) encoding normalizations SHOULD NOT be done as part of a   >signature   >transform.   >   >    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      http://www.w3.org/Signature/Minutes/000907-tele.html       2000-September-7     Chairs: Donald Eastlake and Joseph Reagle     Note Taker: Joseph Reagle    Participants          * Donald Eastlake, Motorola        * Joseph Reagle, W3C        * John M. Boyer, PureEdge        * *Merlin Hughes, Baltimore        * Ed Simon , Entrust Technologies Inc.        * Mark Bartel, JetForm       Status of documents < 5 minutes          * Next draft of Canonicalization ([5]WD-xml-c14n-20000907) is being          published today, includes a link to its [6]Last Call Issues           [5] http://www.w3.org/TR/2000/WD-xml-c14n-20000613         [6] http://www.w3.org/Signature/2000/09/06-c14n-last-call-issues.html       Canonicalization < 15 minutes          * Boyer: would like implementors to confirm if his examples operate          in the new spec the way implemenations do.        * Namespaces: Kent asked about rational for namespace reduction,          Boyer responded on list and in [7]Last Call Issues.        * Whitespace: addressed in [8]Last Call Issues. Presently, this can          invite a ton of trouble that people aren't keen to get into right          now.        * DOMHASH: some discussion, not a lot of interest presently. DOMHASH          should work with present canonicalizations.           [7] http://www.w3.org/Signature/2000/09/06-c14n-last-call-issues.html         [8] http://www.w3.org/Signature/2000/09/06-c14n-last-call-issues.html       Content Model          * Moved Transforms content model to ElementOnly.       RSA and OIDS          * Merlin posted a [9]summary of options.        * Bartel prefer 2.        * ACTION: Reagle, email poll of which option people want.        * ACTION: Reagle, get Brian/Barb to tweak text once resolved..           [9]   http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0398.html       RetrievalMethod Type          * No one opposed to making Type optional subsequent to [10]Reagle's          argument: since its not associated with mandatory behaviour, why          make it mandatory when it can also constrain people in ways that          don't benefit anyone.          [10]   http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0434.html       Other          * Eastlake wants to tweak KeyInfo example of 4.4.4. ACTION Eastlake:          send to Reagle this afternoon.        * Boyer: Include in STATUS: Implementors should take special note of          the here() function, it's not the same as the XPointer for which a          few questions have been raised and the XLink WG is looking at but          haven't responded to yet.        * Simon: We're trying to organize an XML Encryption meeting, looking          at the end of October (week of October 30th).        * Boyer (and others): later in week would be better for those adults          who have children (and those adults who still enjoy Halloween          themselves :) .)        _________________________________________________________  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      -- Forwarded Text    From: "Chris Smithies" <Chris_Smithies@penop.com>  Message-ID: <85256794.0067D80F.00@penop.com>  Date: Fri, 18 Jun 1999 19:58:42 +0100  Subject: PenOp: IPR disclosure    I  wish  to  provide complete disclosure.   To the best of my knowledge, my  organization  owns  many intellectual property claims regarding the signing  of electronic data, including XML documents.  These many and complex claims  are  embodied  in issued patents and pending applications spread around the  world.   They  generally cover the electronic presentation and recording of  symbols  of  informed  consent,  the  secure  capture  of identification or  signature-type  data  (biometric, infometric and otherwise), the binding of  such  identification or signature data to electronic documents, the binding  of other related data (such as audit trail and records of informed consent)  to documents and the verification of the data bound to the documents.    My  organization owns issued US Patents 5,544,255, 5,647,017 and 5,858,955,  issued Australian Patent 688,589 and issued New Zealand Patent 292439.      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      [I'm raising this issue while it's fresh in my mind and to put it on the  issues list of the WG once it is formed.]    I was talking to Philipp Hoschka (W3C Architecture Domain Lead) about some  of the coordination issues with XML and we spent a small amount of time  talking about filters, selectors, and XPointer when I said signed-XML was  probably going to punt on the issue of using "filters" to say which elements  and sub-blocks are signed. Or, only go as far as requiring that if an  element block wants to be signed, it should have an ID attribute specified  that can be referenced in a locator in the manifest. Philipp responded by  stating that if you permit URIs, then you permit XPointer. [1] Were we going  so far as to say only URIs, or only certain types of URIs. (He also  mentioned that XSL selectors and XPtr should converge.)    This seems odd to me in the following way. signed-XML will be a XML 1.0  application, but need it be an XPtr application, do they mean the same  thing? Imagine one implementor who supports XPtr and uses them in his  manifest, and another who doesn't. The semantics are not shared and in a way  that is dangerous to interoperability.  I'm comfortable with the idea of a  signed-XML application failing on the fact that it doesn't recognize a HTTP  scheme (e.g., locator="foobar:ASF*&@#$~~"). But less comfortable on failing  because of fragment identifiers.    Presently, Richard Brown's signed-XML draft states that:          Locator: Locator value that contains either a URI [RFC 2396], a             fragment identifier, or both. Notice that making use of a             fragment identifier for a document content other than XML is             out of the scope of this draft proposal and may lead to             inconsistent results.    This certainly seems true. But I think we should be more specific. Also,  this might even be true in XML if XPtr is used, because the semantics of the  content after the "#" (i.e., "http://*#stuff") is defined by the MIME type.  Does the registered MIME type specify XPtr?    [1] http://www.w3.org/TR/WD-xptr  ___________________________________________________________  Joseph Reagle Jr.  http://www.w3.org/People/Reagle/  Policy Analyst     mailto:reagle@w3.org        

      At 15:38 7/10/00 -0700, Kevin Regan wrote:   >I've been attempting to implement the latest XML Signature and C14N   >specifications.  However, I have a few questions.    I'm sure John will be able to answer more authoratively, but an easy answer  and question:     >It seems that when computing the canonicalized form of an Element   >representing a sub-tree of an XML document, the namespace declarations of   >all the parents of the given element (all the way to the Document root   >element) are included in that element as well as all of that Element's   >children (unless overridden at some point).    Yes.       An element E has namespace nodes that represent its namespace     declarations, any namespace declarations made by its ancestor that     have not been overridden in E's declaration, the default namespace if     it is non-empty, and the declaration of the prefix xml.      http://www.w3.org/TR/2000/WD-xml-c14n-20000710    This is done such that you can move a signature and ensure its namespace  context is taken with it.     >  What I'm not exactly clear on   >is if this applies to the actual Signature element for the signature being   >created.    I don't quite follow...     >I don't think that it does (I don't believe that you need to   >look at the parent elements of the Signature element to determine their   >namespace declarations)?  Is this correct?  If not, wouldn't it mean that   >the insertion point for the Signature element must be known in advance so   >that these declarations can be obtained?  Are there any differences for   >detached, enveloped, or enveloping signatures?    What do you mean known in advance?       _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      If the prefix is overloaded, how would you determine which namespace to use?    <?xml version="1.0" encoding="UTF-8"?>  <ns1:foo xmlns:ns1='oneThing'>     <ns1:bar xmlns:ns1='theOther'>       <ns1:baz>Frobnostication</ns1:baz>     </ns1:bar>  </ns1:foo>    Using the closest might not be approriate given what's being ported ... I   suspect to go this Include/Exclude route, you need to give the   (prefix,namespace) pair.      At 14:46 6/18/2001, Donald E. Eastlake 3rd wrote:  >Do you have any suggestions here? Would an IncludeNS element content  >of exclusive canonicalization algorithm elements which had an  >attribute whose values was a list fo prefixs (NMTOKENS) that would be  >considered used, even though their prefix did not appear to be used,  >do the trick?  So you might have  >   <Transform Algorithm="http://www.w3.org/2000/09/xmldsig#excludeC14N">  >     <IncludeNS Prefixes="foo bar etc"/>  >   </Transform>        --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 18:08 10/6/2000 +0100, merlin wrote:  >If it is important, I've attached two "pretty" sigs that should  >verify. Some might, however, regard one liners as pretty.    <smile>    OK, they are now linked from [1]. Gregor, just to be sure, do these examples   validate too?    [1] http://www.w3.org/Signature/Drafts/WD-xmldsig-core-latest/    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Does Amaya support client side refreshes?          http://www.cs.purdue.edu/homes/bxd/lamap.html    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      http://www.w3.org/Signature/Minutes/990930-tele.html                         [1]IETF [2]W3C   [3]XML Signature WG                                             99-September-30    Chairs: Donald Eastlake and Joseph Reagle    Note Taker: Joseph Reagle [[4]ascii]      Participants         * Donald Eastlake 3rd, IBM       * Joseph Reagle, W3C       * Mark Bartel, JetForms       * John Boyer, UWI       * David Solo, Citigroup, <david.solo@citicorp.com>       * Barb Fox, Microsoft, [5]bfox@Exchange.Microsoft.com       * Ed Simon , Entrust Technologies Inc.       * [regrets] Todd Vincent, GSU           Minutes       Review of Outstanding Action Items       * ACTION Fox: do we need to add a nonce? Barb still has it on her         queue, experts are travelling.       * ACTION Brown: send requirements and syntax comments to list. Sent         requirement comments. Still needs to send syntax comments.       * ACTION Reagle: Check with everything capitalized, bounce off         Ralph.       * [DEL: ACTION Reagle: tweak final time and move forward. Will do         ASAP. :DEL]       * [DEL: ACTION Eastlake: will reword and send to list. Done. :DEL]             Requirements         [6]xmldsig-requirements-991001.html [candidate InformationalRFC.]       * WG agrees to move it as an ietf-draft and W3C TR, then last call         and InfoRFC.             Syntax           * Section 3: Use it as content, try to be consistent throughout.       * Section 4.3: Why is location optional? Should we make the default         a reference to the root element minues the signature stuff?         Reagle: this makes it impossible for other applications to         understand the signature outside of that context. Go with default         and put comment of beware of data model.       * Section 4.3.1: Make value a content of element.       * Section 4.3.2: use attribute to find those which might be         signature attributes. CDATA, should URI or productions permitted         by the MIME/TYPE spec. ACTION Eastlake: propose something. Action         Reagle: Make into content.       * Section 4.3.3: add a start to end of bnf, XSLT element. What         happens if there is an XSLT in the document, and then the signer         puts an XSLT on the document in the manifest. Consistent with the         idea that we are not chasing references.       * Section5: do we have types in the reference or in the object? Does         the reference point to dsig:object:xml/text or to the type of the         target.            + reflect type="signatureattributes" from Don's proposal.            + Need to define these clearly.       * Section 7: Reagle will reflect what Mark sent. Solo: we need to         define how things of multiple numeric qualities are carried in our         context. (Need to do more than just provide a reference, but give         a little more specifity.) Don nominates Richard's, ACTION: Bartel         will send something by Monday.  Need to define mandatory,         recommended. ACTION: Reagle will check the RFC.       * Reagle, will re-insert exclusions and edit such that         XSLT/XPath/XPtr is deployed in the spec consistently.       * Eastlake: do a serach for "identity" replace with "minimal."       * Editors/Authors will have a call on Tuesday (1005) and 3PM EST.             Closure on Closure           * Didn't have any time, but see last [7]weeks minutes and email         discussion.             Resulting Action Items.           * ACTION Reagle: finish edits to RD and send on its way.       * ACTION Bartel: send AlgID by Monday       * ACTION Eastlake: propose something on URI and MIME types. WG:         disucuss..       * ACTION Reagle: check [8]RFC2119 to see if it defines mandatory,         recommended, should.       * ACTION Reagle: reflect these minutes in document and post by end         of Friday.                * ACTION Fox: do we need to add a nonce? Barb still has it on her         queue, experts are travelling.       * ACTION Brown: send requirements and syntax comments to list. Sent         requirement comments. Still needs to send syntax comments.       * ACTION Reagle: Check with everything capitalized, bounce off         Ralph.    References       1. http://www.ietf.org/     2. http://www.w3.org/     3. http://www.w3.org/Signature/Overview.html     4. http://www.w3.org/Signature/Minutes/990930-tele,text     5. mailto:bfox@Exchange.Microsoft.com     6. http://www.w3.org/Signature/Drafts/WD-xmldsig-requirements-991001.html     7. http://www.w3.org/Signature/Minutes/990923-tele.html     8. http://info.internet.isi.edu/in-notes/rfc/files/rfc2119.txt        _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 13:30 99/08/17 -0700, John Boyer wrote:   >[Comments to an email from  Don, that hasn't yet made it to the list.]   >   >At 13:21 99/08/17 -0400, dee3@us.ibm.com wrote:   > >2.2:  Suggest changing "The manifest includes..." to "The manifest must   > >support..." so as to permit other types of manifest.   >   >Manifests that don't use URIs? If so, what would be the example?  >   ><John> For example, having the signature directly sign the data by   >enveloping the data inside of the manifest. </John>    Ok, I've included to Don's suggest text. The resulting document is at [1]  and will be officially published tomorrow. Then I'll update the ietf-draft  and push this out to W3C chairs and XML plenary and start twisting arms to  get commitments for review once we have a draft we are fairly comfortable  with.    [1] http://www.w3.org/1999/08/xmldsig-requirements-990820.html      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 17:59 2000-05-09 -0500, Gunther Schadow wrote:   >As the world reinvents everything using XML, might it not be time to do   >the same with certificates?  I think the world of certificates could    >use a big shake-up.    Other people share a similar opinion. Other than the general interest from  and conversations in other WGs, Juha Paajarvi has presented [1] a SPKI cert  structure [2] and Satoshi Hada presented on a ASN>1/XML Translator [3].  However, certificate structures are something that are specifically ruled  out of scope for this WG.            ... The working group will not address the following issues:           XML schemas for certificates.           http://www.w3.org/Signature/charter-20000105.html#_Scope    I encourage proposals to the degree that we can ensure the Signature design  can work with such structures, and I hope there will be synergies between  our designs, but if there is enough interest (which I hope) it should  instantiate another WG.    [1]  http://www.w3.org/Signature/Minutes/000327-Adelaide/slides-paajarvi-xml-spki-  cert-00.html  [2]  http://search.ietf.org/internet-drafts/draft-paajarvi-xml-spki-cert-00.txt  [3] http://www.w3.org/Signature/Minutes/000327-Adelaide/XSS.htm        _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 09:29 00/03/24 -0800, Biron,Paul V wrote:   >The Schema WG believes that there are no major issues with the dsig last   >call WD [1].  However, the draft schema specification(s) has undergone   >considerable change since the 1999-12-17 draft [3] on which the schema   >fragments in Section 4 "Core Signature Syntax" are based.  The Schema WG   >therefore requests that the XML Sig WG rewrite all schema(s) used in   >defining dsig in terms of the schema specification current when schemas   >reaches CR.    Paul (and the schema IG),    Thanks again for your comments. The disposition of your comments that  includes more explicit references to appropriate emails/minutes are at:          http://www.w3.org/Signature/20000228-last-call-issues.html#schema    To respond to your email more directly: We've updated our draft to comply  with the syntax of the Schema Last Call. The latest draft can be found at:          http://www.w3.org/TR/2000/WD-xmldsig-core-20000510/  This draft reflects most of our responses to all the comments sent during  last call. Those issues not yet marked done, in combination with the  editorial to-do's (as stated in that STATUS of the spec) will be addressed  within the next few weeks (prior to going to CR).     >Additionally, there are several cases in which more judicious use could be   >made of Schema Datatypes.  For instance, Section 4.2 "The SignatureValue   >Element" contains the actual signature octet sequence, base64 encoded--it  is   >declared as a string, it should be a binary with the encoding facet equal  to   >base64;      Ok, we've done this:       <simpleType name='CryptoBinary' base='binary'>         <encoding value='base64'/>     </simpleType>       >Section 4.5 "The Object Element" has a MimeType attribute, declared   >as a string that could be declared as a subtype of string, with a pattern   >facet that matched all legal mime type variations.     There has not yet been a demand for this degree of constraint on that value.  If someone on the xmldsig list WG volunteers to specify that facet and  advocates it, the list can then decide if they wish to include it. (I  planned on giving it a go at some point but haven't yet.)     >Lastly, the dsig WD should make clear whether the schema and DTD included  in   >Section 9 are normative or informative.    In response to this point, the WG has decided that the schema is normative,  though the most recent spec does not make that clear enough, but we will in  the next version.     >The Schema WG also suggests that the XML Sig WG consider using a mechanism   >similar to that proposed in [4] for assigning schema datatypes to   >element/attribute declarations in the dsig DTD.   >[4] http://www.w3.org/TR/dt4dtd    I think that is an interesting approach. However, there hasn't been any call  for this sort of feature from others on the list. My own thoughts are:  1. The document is only a NOTE (not normative).  2. It relies upon non-registered URNs [1] (not something I'm keen on)  3. One could update that spec to a normative document that used URIs if the  schema specifications made the data types first class resources. (However,  that isn't up to us, but to you! <smile>)  4. And finally, while it would make the DTDs more expressive, I don't think  it would further the typing capabilities of a 'out of the box' DTD  processor; and as we are describing the syntax with schema in parallel, it  would probably be of limited utility for us to add this as a work item.    [1] http://www.faqs.org/rfcs/rfc2611.html    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      I've updated the XML Signature schema [1] to the last call schema spec [2]. [1] doesn't contain many changes other than converting the syntax, when the authors send their revisions in prior to May 1, I'll include those as well and the push them into the body of the text.    There's now a alpha version of an online schema validator. [3] The Signature schema validates to the Schema schema [4], and the Signature example [5] validates to the Signature Schema [6].    BTW: It also validates to the DTD except for the external content from the timestamp namespace which DTDs don't handle well. I suppose next week I should see if Martin's proposal of %Object.ANY facilitates the creation of a derivitive DTD that application designers will have to make when they use DTDs and mixed namespaces...  __    [1] http://policy.w3.org/WD-xmldsig-core-200003plc/xmldsig-core-schema.xsd    [2] http://www.w3.org/TR/2000/WD-xmlschema-1-20000407/    [3] http://cgi.w3.org/cgi-bin/xmlschema-check    [4] http://cgi.w3.org/cgi-bin/xmlschema-check?docAddr=http%3A%2F%2Fpolicy.w3.org%2FWD-xmldsig-core-200003plc%2Fxmldsig-core-schema.xsd&keepGoing=on    [5] http://policy.w3.org/WD-xmldsig-core-200003plc/signature-example.xml    [6] http://cgi.w3.org/cgi-bin/xmlschema-check?docAddr=http%3A%2F%2Fpolicy.w3.org%2FWD-xmldsig-core-200003plc%2Fsignature-example.xml+http%3A%2F%2Fpolicy.w3.org%2FWD-xmldsig-core-200003plc%2Fxmldsig-core-schema.xsd&keepGoing=on    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      I'm updating the references, some are being tweaked forward or added, and  two are being deleted as they are not referenced in the specification  (though they were in the requirements from which the spec inherited the  reference section.)    __    DELETED:    WebData Web Architecture: Describing and Exchanging Data.  W3C Note. T.  Berners-Lee, D. Connolly, R. Swick. June 1999.       DOMHASH  RFC 2803. Digest Values for DOM (DOMHASH). H.  Maruyama, K. Tamura,  N. Uramoto. April 2000.    __    TWEAKED FORWARD or ADDED    LDAP-DNRFC2253. Lightweight Directory Access Protocol (v3): UTF-8 String  Representation of Distinguished Names. M. Wahl, S. Kille, T. Howes. December  1997.    UnicodeThe Unicode Consortium. The Unicode Standard.  http://www.unicode.org/unicode/standard/standard.html    URI-LiteralRFC 2732. Format for Literal IPv6 Addresses in URL's. R. Hinden,  B. Carpenter, L. Masinter. December 1999.    XML-Signature-RDRFC 2807. XML Signature Requirements. J. Reagle, April  2000.http://www.w3.org/TR/1999/WD-xmldsig-requirements-19991014  XPath    XML Path Language (XPath)Version 1.0. Recommendation. J. Clark, S. DeRose.  October 1999.http://www.w3.org/TR/1999/REC-xpath-19991116  XPointer    XML Pointer Language (XPointer). Candidate Recommendation. S. DeRose, R.  Daniel, E. Maler.  http://www.w3.org/TR/2000/CR-xptr-20000607      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Forwarding these on from the FTF meetings.    Forwarded Text ----   From: Petteri Stenius <Petteri.Stenius@done360.com>   To: "'Joseph M. Reagle Jr.'" <reagle@w3.org>   Subject: RE: Interop Issues   Date: Mon, 14 Aug 2000 01:21:18 +0300   Status: RO         These are the issues I recall.      Issues not clearly defined by the spec:   - XSLT transform context: element or document   - serialization of "xml:" -prefixed attributes      Usability issue:   - whitespace handling         _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      This is just to re-state that our 90% target date for the meeting is January  21st. (At the IETF we discussed the 14th so as to coincide with RSA, but  then it was noted the RSA conference ends on Thursday and if we had it on  Friday the 21st people need not spend a weekend away from home.)    Sun has offered facilities in the area of San Jose and we will post  finalized details this week.    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Forwarded Text ----     Dear Colleagues,      A new Internet Draft for XML media types has been released.     Please discuss about it at the ietf-xml-mime mailing list.     You can join this mailing list and read its arcive at:      http://www.imc.org/ietf-xml-mime/      Sincerely yours,      MURATA Makoto (FAMILY Given)      -----------------------------------------------------------------   Simon St. Laurent, Dan Kohn, and I create a new I-D for XML media   types.  It is available at:      http://www.ietf.org/internet-drafts/draft-murata-xml-03.txt      Major differences from previous versions are as below:      1. Fragment identifiers for text/xml and application/xml are       escaped XPointers (section 6).  This addition was requested       by the XML Core WG of W3C.      2. The base URI may be embedded in text/xml, application/xml,      text/xml-external-parsed-entity, or      application/xml-external-parsed-entity (section 7).  Again,       this addition was requested by the XML Core WG of W3C.      3. utf-16le and utf-16be are mentioned (sections 5 and 9).  Since       RFC 2781 (UTF-16, an encoding of ISO 10646) introduce these       two charsets, they have to be mentioned.      4. appendix comparing alternatives to '|xml' suffix added.        The suffix is changed from "-xml" to "|xml".  As of now,       no media types ending with "-xml" are registered yet.      5. The security section is expanded on the basis of       David Megginson's presentation to XTech 2000.      6. Lots of minor editing.      We are looking forward to your feedbacks.      MURATA Makoto     End Forwarded Text ----    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        http://www.w3.org/TR/2000/WD-xmldsig-core-20000104/  http://www.ietf.org/internet-drafts/draft-ietf-xmldsig-core-03.txt      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        1. looks good!  2. (still don't like the bullets in the first four boxes, looks akward).  3. We might as well have a depth-1 consistency, apply the base style sheet  a. http://www.w3.org/Status  b. http://www.w3.org/Consortium/Contact  c. http://www.w3.org/Talks/  d. http://www.w3.org/Consortium/Prospectus/Joining  e. http://www.w3.org/Consortium/Recruitment/    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      http://www.w3.org/TR/xmldsig-requirements    This is not a typical specification Last Call, but a requirements document  Last Call. Where the specification Last Call requires commitment for review,  this Last Call solicits/prompts those commitments. Since this WG is not  formally part of any CG, procedurally it is unclear which CG I should  coordinate with in order to procure review commitments; substantively, the  XML-CG is an obvious choice. Over the next few weeks I will be attempting to  procure commitments for review from members of the following groups  identified in the Requirements Document.        1. The XML Signature specification should meet the requirements of         the following applications:           1. Internet Open Trading Protocol v1.0 [IOTP]           2. Financial Services Mark Up Language v2.0 [Charter]           3. At least one forms application [XFA, XFDL]      2. To ensure that all requirements within this document are         adequately addressed, the XML Signature specification must be         reviewed by a designated member of the following communities:           1. XML Syntax Working Group: canonicalization dependencies.              [Charter]           2. XML Linking Working Group: signature referants. [Charter]           3. XML Schema Working Group: signature schema design. [Charter]           4. Metadata Coordination Group: data model design. [Charter]           5. W3C Internationalization Interest Group:  [AC Review]           6. XML Package Working Group: signed content in/over packages.           7. XML Fragement Working Group: signing portions of XML content.               XML-Signature Requirements   W3C Working Draft 1999-August-20   Joseph Reagle Jr. <reagle@w3.org>   Last Call Ends 1 October 1999     http://www.w3.org/TR/xmldsig-requirements    W3C Status of this Document       This is a Last Call XML Signature Requirements public Working     Draft. This report is not expected to be advanced to Recommendation.     Instead, this Last Call designation is (1) a representation of WG     consensus, (2) an invitation for comments that will affect the future     course of the technical specification, and (3) an opportunity to     identify and obtain commitments regarding WG dependencies. This     document will be referred to at least the W3C XML Plenary Interest     Group and W3C Chairs Working Group. Last Call period ends when     dependencies between WGs have been acknowledged and the Signature     Chairs have procured commitments of review. This is expected to take     six weeks from the date of publication.          This document attempts to capture the Working Group's consensus though     it contains points which are still uncertain or not well     specified. Issues which are still being actively discussed during the     publication of this document are of class="discuss" and rendered in     navy by style sheet compliant applications.          Please send comments to the editor <reagle@w3.org> and cc: the     list <w3c-ietf-xmldsig@w3.org>. Publication as a Working Draft     does not imply endorsement by the W3C membership. This is a draft     document and may be updated, replaced or obsoleted by other documents     at any time. It is inappropriate to cite W3C Drafts as other than     "work in progress". A list of current W3C working drafts can be found     at http://www.w3.org/TR       _________________________________________________________________       Abstract       This document lists the design principles, scope, and requirements for     the XML Digital Signature specification. It includes requirements as     they relate to the signature syntax, data model, format, cryptographic     processing, and external requirements and coordination.         _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      [to be clear, this proposal resulting from the analysis of:           http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0521.html  ]  __             go with Choice #1 as it is specified above, i.e. REQUIRE           implementers to A) not use Type 1 processors, B) generate           errors if Type 2 processor used and non-absolute namespace           URI found, or C) use a Type 3 processor.           [2,c]    please express your acceptance of this proposal or opposition (and reason   why) by Wednesday October 27th.    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 07:58 99/10/14 -0700, John Boyer wrote:   ><Location></Location>   ><Transformations>   ><Transformation Algorith="urn:dsig:xpointer">SomeID</Transformation>   ></Transformations>   >   >or with   >   ><Type>text/xml</Type>   ><Location>#SomeID</Location>    Well, we need to define the behaviour if people do both regardless:          1. Choke: malformed signature.          2. Process Location first, then transformations.      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      Generally our lists require you to be subscribed in order to send, but given  the fair amount of email from other WGs during last call, I pulled the  filter. However, but given the last calls are about done and the amount of  spam, I've reinstituted the filters.      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      This email is to confirm that you are a member of the IETF/W3C XML-DSig WG  email list hosted by the W3C. The list includes the whole of Workshop List  [1], five people who since auto-subscribed, and one person I manually added  because of a difficulty with auto-subscription. This list is configured such  that only those that are on the (dist) list can post. However, we have a  facility for permitting accepts from those not on the dist. Presently, this  includes various IETF managerial and administrative accounts, but if you  frequently post from more than one alias, we can add that address. The list  archive can be found at [2]. We rarely have bugs with the interaction of all  of this and spam filters, but if you believe you've encountered one, let me  know!    [1] http://www.w3.org/DSig/signed-XML99/ml.html  [2] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/    Help regarding use of the list follows.  __    From: w3c-ietf-xmldsig-request@w3.org  Date: Wed, 26 May 1999 10:38:34 -0400 (EDT)  Subject: Re: help    ******* About the W3C Mailing Lists *******    There are many mailing lists provided by the W3C for discussion  and development on the World Wide Web. A full list of them  is available at:       http://www.w3.org/Mail/Lists.html    NOTE that this list is not the place for any of the following:       How do I configure [insert-favorite-software-here]?     I'm new to the web -- what is it?     I tried to ask [insert-company-here] customer support, but          [I didn't get any response / they told me to RTFM]     What does RTFM mean?    Answers to the above are often found in the WWW FAQ maintained  by Thomas Boutell.  The FAQ is available from several sites.  Use the mirror closest to you:        Sunsite, eastern United States (North America):         http://sunsite.unc.edu/boutell/faq/     Internex Online, Montreal, eastern Canada (North America):          http://www.io.org/faq/www/index.html     New Software Technologies Service, Austria (Europe):          http://nswt.tuwien.ac.at:8000/htdocs/boutell/     Glocom, Japan (Asia):          http://www1.glocom.ac.jp/mirror/www.boutell.com/faq/index.htm    The FAQ also lists the names of all the USENET newsgroups that are  available regarding the WWW (most under the comp.infosystems.www.*  hierarchy).    ******* Administrative Requests *******    The -request mail address should be used for all list administrative  requests.  It accepts the following commands (in the Subject of an  e-mail message):        subscribe         -- Subscribe to the list.  If you want to subscribe                           under a different address, use a Reply-To: address                           header in the message.        unsubscribe       -- Unsubscribe from the list.        help              -- Get information about the mailing list.        archive help      -- Get information about the list archive(s).    In the event of an address change, it would probably be wisest to first  send an unsubscribe for the old address (this can be done from the new  address), and then a new subscribe from the new address (the order is  important).    Most (un)subscription requests are processed automatically without human  intervention.  Do not send multiple (un)subscription or info requests in  one mail.  Only one will be processed per mail.    NOTE: The -request server usually does quite a good job in discriminating        between (un)subscribe requests and messages intended for the        maintainer.  If you'd like to make sure a human reads your message,        make it look like a reply (i.e. the first word in the Subject: field        should be "Re:", without the quotes of course); the -request server        does not react to replies.    ******* Archive Server *******    Every submission sent to this list is archived.  Archives of public  lists are available at URL:        http://lists.w3.org/Archives/Public/    If you want to access this archive by e-mail, you have to send mail  to the -request address with the word "archive" as the first word of  your Subject:.  To get you started, try sending a mail to the -request  address with the following:        Subject: archive help    Rev. 18/Jul/97  -JK      =================================================================    _________________________________________________________  Joseph Reagle Jr.     Policy Anylyst      mailto:reagle@w3.org  XML-DSig Co-Chair   http://w3.org/People/Reagle/        

      Folks,    I've completed my action item from Oslo [1] regarding contributor,  copyright, and attribution policies. Please have a look at it and pay  special attention to the section on copyright:    Copyright       The products of the Working Group are vested jointly in the W3C &     The Internet Society and is designated with the following notice:            Copyright  ? 1999 The Internet Society & W3C (MIT,       INRIA, Keio), All Rights Reserved. W3C liability,       trademark, document use and software licensing rules       apply.            Working group members who are not willing to contribute under these     terms must refrain from doing so and notify the Chairs as to the     reason why.       [1] http://www.w3.org/Signature/Minutes/990713-oslo.html  [2] http://www.w3.org/Signature/Contributor.html      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      I'm working to publish a new Candidate REC next week, and then if we haven't   introduced too many more bugs, we can advance the document in May. We may or   may not be able to resolve the xmldsig#md5 and XSLT!=string issue by next   week, but I don't think they are critical path for an update to the spec   (they are straightforward choices regardless.)    Some things to note is that will be using the latest version of schema [2]   (hopefully I haven't introduced any bugs into the definitions and the one   example), and we now have a section on CryptoBinary [3] for which the bignum   text applies to (generalized to all CryptoBinary).    John, there's still some text in there that reads:    >Note: The function definition for here() is intended to be consistent with   >its definition in XPointer. However, some minor differences are presently   >being discussed between the Working Groups.    Can this be deleted now?    [1] http://www.w3.org/Signature/20000228-last-call-issues#CandidateREC  [2] http://www.w3.org/TR/2001/PR-xmlschema-1-20010316/  [3]   http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html#sec-CryptoBinary    __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      Hello Omoti,    Thank you for the translation and links. As required by the IPR FAQ, I'm   forwarding this on to the translators list. <smile> Otherwise (to my eyes)   it satisfies all the requirements, so feel free to publish it.    [1] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#translate      At 22:29 1/22/2001 +0900, Omoti wrote:  >Hello Sir :)  >  >I am Omoti at Japan.  >  >I have finished my version of Japanese translation for  >  >Intellectual Property FAQ  >http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html  >  >  >Please give me the permission to publish this translation  >on my site.  >  >  >I really thank those guys who helped my work.  >  >The URL for my translation is  >  >http://www.net24.ne.jp/~omoti/w3c/consortium/legal/ipr-faq-20000620_ja.html  >  >Let me know any problems about this translation.  >  >  >For your information,there are at least three Japanese  >translation for Intellectual Property FAQ on the Net.  >  >e.g  >http://www.tsc.co.jp/~asada/html/html4rec_f/IPR-FAQj.html  >http://www.asahi-net.or.jp/~bd9y-ktu/html4rec_f/IPR-FAQj-20000620.html  >http://www.net24.ne.jp/~omoti/w3c/consortium/legal/ipr-faq-20000620_ja.html  >  >  >I have read Intellectual Property FAQ.  >Now I need to read  >IPR Notice and Disclaimers  >and  >Document Notice.  >  >Document Notice already has several Japanese translations  >so it won't take long time.  >  >I am not sure about IPR Notice and Disclaimers.  >  >  >Regards.  >  >Omoti  >http://www.net24.ne.jp/~omoti/  >omoti@n24.net      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 16:11 99/10/05 -0700, Barb Fox (Exchange) wrote:   >In IETF drafts, the open technical issues are usually a separate section at   >the end which you already have.     Understood. However given these comments qualify text rather than merely  identifying holes, I obviously prefer them to be in-line and in context.  This is a very common convention amongst W3C WD's (see [1,2] for recent  examples.) While rarer, it is not impossible to find within ietf-drafts  [3,4].     >Reading the "editorial comments" in the   >current draft, however, we find statements like "...However, these   >applications abuse the notion of the open Web model..." not appropriate to   >an IETF draft since they are clearly not technical.      I do not believe this. I am trying to annotate sections that deserve  particular technical attention so as to (1) identify issues such that the WG  can come to clarity on what the actual issue is prior to finding an answer,  (2) identify unstable text for external reviewers and (3) draw early  attention to those areas that I think will prompt the Director's attention  at one point or another: better early than late. Also, these comments serve  a useful purpose in forging consensus in that people are more willing to  agree to a proposal if their concerns are captured. Otherwise, people become  stubborn and "vote" no-go instead of a go-with-caveat that can then be  tested by time, implementation, and external review.    If you feel this particular text (or any other) is not quite technical  enough it is serving its purpose: I probably have not written it well. I am  not speaking of open/closed content models for element nesting [6] but of  the model in the context of Tim's Web model [7]. I think what I am trying to  capture is something similar to the "design regret" associated with XML1.0  IDREF in that IDREF only provides for inside-the-document linking.  Consequently, my concern is that if we have a data model that permits  parsers to pull out the relations between signatures and their referants,  this type of feature if defined as syntactical optional will remain  syntactically valid, but will break the data model parsers. Now I'm not  exactly sure where everyone stood on this, so I added the text based on [8]     >Finally, the formatting you're using for both (boxed) will not be carried   >into the IETF draft. We're sure you know that where they are placed now is   >within the body of the sections and would appear as normal descriptive  text.    Understood. However, I did not believe it to be misleading in the text  version of the text document [5]. After examining the way ietf-draft  conventions, I believe capitalizing the "notes" will be even more effective.  I will do this in the next version.      [1] Paged Media Properties for CSS3     http://www.w3.org/TR/1999/WD-css3-page-19990928  [2] XML Schema Part 2: Datatypes    http://www.w3.org/TR/1999/WD-xmlschema-2-19990924/  [3] Japanese Character Encoding Scheme for Internet Messages    http://info.internet.isi.edu/in-drafts/files/draft-yamamoto-charset-iso-2022-  jp-02.txt      IMPLEMENTATION NOTE: Even if a message composer does not provide any      input method for graphic character sets which is not used in  [4] Classical IP and ARP over ATM    http://www.csc.gatech.edu/~pinar/rfcs/draft-ietf-ion-classic2-00.txt     Note:  ... The IP over ATM Working     Group expects ATM Forum NSAPA numbers (Structure 1) to predominate     over E.164 numbers (Structure 2) as ATM endpoint identifiers ...  [5] http://www.w3.org/Signature/Drafts/xmldsig-core-991001.html,text  [6] http://www.w3.org/TR/1998/NOTE-XML-data/#OpenClosed  [7] The Web Model     http://www.w3.org/DesignIssues/Model.html  [8] bullet 2 of Syntax Discussion    http://www.w3.org/Signature/Minutes/990930-tele.html    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      I'll just quickly point out that I think the place for substantive technical  discussion of this would be the list Peter recently started [1]. However, I  think it's good for people on this list to be at least aware of these  proposals. In particular, in the legal/policy context regulators may be  considering limiting the legal standing of signatures specifically to  implementations that use contemporary X509 structures. (Consequently,  precluding legal standing to implementations using other structures and  syntax). In speaking with folks on this topic, we've talked about the likely  hood of this scenario, and hopefully it is unlikely and policy makers will  focus on information requirements and not syntax. But it is something to  keep an eye on and speaks to a political reason (at least) for the expedient  development of XML equivalent structures (but again, not in this WG's scope  <smile>).    [1] http://jcewww.iaik.at/mailarchive/xmlcert/msg00001.html    At 10:10 2000-05-17 +0200, Juan Carlos Cruellas wrote:   >Dear all,   >   >Following the indications of Joseph Reagle, I send this   >message to the list to tell you that it is available in the   >URL indicated below a document where new XML types   >for signature properties are specified.   >The work has been carried out as a task of an    >ISIS European project, ESTIO (Electronic Signature Test suite   >for Interoperability). This project aims to specify and develop   >a test tool to assess products that generate and validate    >digital signatures and qualified certificates that should    >accomodate to what is established in the European Directive.   >Several relevant documents to this goal have been taken into   >account and a set of conformance requirements for these    >products have been specified. These requirements include the   >presence of certain data structures added to basic structure of    >the digital signature itself (in ASN.1 terminology these   >structures are called "signature attributes" -quite different   >usage of the word "attributes" in XML).   >ESTIO partners are aware of the growing importance of XML, and   >for this reason, the work has been done of trying to specify    >in XML syntax some types that could contain equivalent   >information to that being accomodated in ASN.1 structures    >defined in documents like ETSI ES 201 733, RFC 2634 etc.   >   >The document can be accessed at the following URL :   >   >http://www.ac.upc.es/homes/cruellas/res/XML_DIGSIG_UPC_001.doc   >   >Should you have any comments on this document, please send me   >them to my e-mail address.   >   >Thank you very much for your interest in advance.   >   >Regards   >   >   >Juan Carlos Cruellas.   >    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        I made an error in the duration of the second Signature Last Call, so I've   checked with the various WGs who reviewed it in the past, and no one has a   problem with us moving the date back. (I believe we aren't going to get many   (if any) comments regardless, as this was just to make sure everyone was   happy with the resolution of issues, and we had the time given we had to   move Canonical up first.)    So hopefully, I'll speak with the Director about advancing Canonical to   Candidate REC next week, then the Signature Last Call will end on October   20th and we'll do the same there. This version is the same namespace,   includes some minor editorial tweaks discussed the past week, and includes a   schema instance using the latest schema spec.    http://www.w3.org/TR/2000/WD-xmldsig-core-20001012/    W3C Status of this document        This specification from the IETF/W3C XML Signature Working Group is a      update to the second last with an abbreviated W3C last call termination      date of October 20th (5 weeks in total). This update includes minor      editorial changes, reference to the latest Canonical XML, as well as      an adoption of the latest Schema specification. We ask Working Group      members and other readers to review our approach to all issues raised      by the first last call and, more substantively, consider changes      resulting from the recent Canonical XML last call upon which this      specification is dependent. Barring substantive comment (we expect      little), we will request Candidate Recommendation status as soon as      (following the Canonical XML request). However, we do wish to      ensure that readers are aware of following three substantive changes      in the second last call:       1. We've changed the Reference Processing Model (section 4.3.3.1). to          permit the presentation and acceptance of XML node-sets between          Transforms (and resulting from some URI References) when          appropriate.            1. We accomplish this by heavily relying upon the XPath               specification but still do NOT require a conformant XPath               implementation.       2. We've revised the treatment of pre-pended algorithm object          identifier within the encoded RSA SignatureValue by the PKCS1          algorithm (section 6.4.2).       3. We've revised the X509Data element (section  4.4.4) to clarify the          treatment of certificate "bags" and CRLs within that structure.        Please send comments to the editors and cc: the list      <w3c-ietf-xmldsig@w3.org>. Publication as a Working Draft does not      imply endorsement by the W3C membership or IESG. It is inappropriate      to cite W3C Drafts as other than "work in progress." A list of current      W3C working drafts can be found at http://www.w3.org/TR/. Current IETF      drafts can be found at http://www.ietf.org/1id-abstracts.html.    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 14:49 99/10/28 -0700, Jim Schaad (Exchange) wrote:   >The use of Location="" to refer to the entire document appears to me to be   >potentially troublesome in work flow applications.  When one starts   >including or moving forward signed documents, add other items (including   >other signatures) and so forth.  Using Location="" to refer to the   >containing document has now rather drastically changed its meaning and its   >not clear that the same set of items can be found again except potentially   >by explicit inclusion (rather than exclusion).     I can understand this concern and if I sympathized with it, I would  recommend we not permit "" instead of trying to redefine something defined  by the URI spec. (Even not permitting it is a sort of abuse.) However, this  problem is not unique to us, a URI is an identifier for a resource,  sometimes the content of a URI changes. (Your issue applies regardless if  its a "Same-document reference" [2] or URI reference). The URI Location=""  is still a completely non-ambigous URI: "Axiom2: It doesn't matter to whom  or where you specify that URI, it will have the same meaning."    [1] http://www.w3.org/DesignIssues/Axioms.html  [2] http://www.ietf.org/rfc/rfc2396.txt (section 4.2)    If you use Location="" followed by some transforms that John has described  that only "selects" those things you care about, people add other  signatures, your Location="" still will mean the same thing. Again, this is  the same if the location points to a fully specified URI reference.     >I assume that when this statement is made that the omission of the Location   >element is absent that it is equivalent to <Location HREF="">.    We've stated that the ommission of <Location HREF=""> means it is known by  the application context. I assume we would to capture this same semantic if  we end up with it as an attribute of ObjectReference.     >Object of the Signature.  These are the message that I am most worried  about   >size for, and would therefore like to be able to omit the Location  reference   >and still have it well understood what the location of the object is  suppose   >to be.     <ObjectReference Location="5">  ...  <Object ID="5">    I count 18 characters needed for this reference using this syntax (where  location is an attribute, not its own element.)     >It seems to me that we potentially need a couple of different types of   >"labels" that are distinct within the location.  Specifically would be  "this   >is a URI of one type" and "You (the application) know what this is really   >suppose to be, find it for me" are two that spring to mind.  Potentially  the   >root of the document could be represented as <Location DOC/>.    I'm very hesitant of this approach, sound like we are trying to build our  own URI or XLink or some such thing.    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      Igor,    Thank you for you clarification that to the best of your knowledge Lucent  does not have patents related to this activity. The form of solicitation is  ambiguous, while we ask for people to choose one of two options, logically  speaking both apply to you: Lucent does not have IPR to the best of your  knowledge on this domain, but even so, you've disclosed your IPR policies.  So instead of:     > 6) Intellectual Property Rights (please choose one)   >    [ ] We do not have intellectual property rights   >        relating to the XML-DSig Activity   >    [X] We have disclosed our IPR following the procedure at   >        http://www.w3.org/Consortium/Process/#ipr    It should be:    6) Intellectual Property Rights (please choose one)      [ ] We do not have intellectual property rights          relating to the XML-DSig Activity      [X] We do have intellectual property rights           relating to the XML-DSig Activity and we have made the           appropriate disclosure as documented in:          http://www.w3.org/Consortium/Process/#ipr    I believe the W3C also needs to further qualify what it means by IPR in its  process document, in that we are not necessarily interested in disclosures  of related BUT independent copyrights on documentation or software -- of  which there will be a ton -- only things that will affect the working group,  such as a trademark and patent.  _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

        Forwarded Text ----  >Date: Tue, 17 Apr 2001 19:25:16 -0400  >To: elizabeth.lennon@nist.gov  >From: "Joseph M. Reagle Jr." <reagle@w3.org>  >Subject: Broken Links  >Cc: www-archive@w3.org  >  >The fact that you broke links [1] to your specifications [2] means that   >there are now copies of the dsig spec that normatively reference ...   >nothing. Plus, I'm having difficulties finding these specs again for the   >next version. I've already wasted 15 minutes looking for FIPS PUB 186-1.   >Where did it go, did it get moved in the "redesign" (like [3]) or has it   >been deprecated (don't see it in [4]) and how do I find out without having   >to send an email?  >  >[1] http://www.w3.org/Provider/Style/URI  >We just reorganized out website to make it better.  >Do you really feel that the old URIs cannot be kept running? If so, you   >chose them very badly. Think of your new ones so that you will be able to   >keep then running after the next redesign.  >[2] http://csrc.nist.gov/fips/fips1861.pdf  >[3] http://csrc.nist.gov/fips/fip180-1.pdf  >[4] http://www.itl.nist.gov/fipspubs/withdraw.htm  End Forwarded Text ----    __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 09:13 AM 6/13/99 -0700, TSG - Meridianus wrote:   >We should also note the DRI payments group too and Todd Vincent's XML Court   >Projects.     My intent was not to point out related activities, but to point out other  specific requirements documents as examples of good/interesting RDs: the  scope, how they do it, etc. It now reads:             >The following documents are not necessarily related to XML Signature, but  are    >interesting examples of other WG requirements documents.    However, recalling identified activities is a good idea, and I added a  section, taken from the charter with Todd's proposal of XML-Legal as the TBD:    Coordination    1. The XML Signature specification should meet the requirements of the  following applications:  Internet Open Trading Protocol v2.0 [Charter]  2. Legal XML [List]  3. Financial Services Mark Up Language v2.0 [Charter]    The XML Signature specification must be reviewed by the following  communities:    1. XML Syntax WG  [Charter]  2. XML Linking WG  [Charter]  3. XML Schema WG  [Charter]  4. Metadata CG  [Charter]    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst      mailto:reagle@w3.org  XML-DSig Co-Chair   http://w3.org/People/Reagle/        

      At 23:21 7/29/2000 +0900, TAMURA Kent wrote:  >> 2. Otherwise, we'd have to recommend that  'http://foo.example.com/bar.xslt'   >> also be included in a Signature Reference if we  want to get bit by  having   >> foo.example.com changing the stylesheet to affect the result after the   >> signature.   >   >I agree.    I propose that we add a few sentences to section 8.1.3 "See" What is Signed:  __  Just as a person or automatable mechanism should only sign what it "sees,"  persons and automated mechanisms that trust the validity of a transformed  document on the basis of a valid signature SHOULD operate over the data that  was transformed (including canonicalization) and signed, not the original  pre-transformed data. /+This recommendation applies to transforms specified  within the signature as well as those included as part of the document  itself. For instance, if an XML document includes an embedded stylesheet  [XSLT] it is the transformed document that that SHOULD be represented to the  user and signed. To meet this recommendation where a document references an  external style sheet, the content of that external resource SHOULD also be  signed via a signature Reference -- otherwise the content of that external  content might change which alters the resulting document without  invalidating the signature.+/  __    I believe the reason these started out as SHOULDs is because we want to be  permissive to applications and we can't enforce/check some of these  recommendations. However, I'd feel more comfortable if some of them where a  MUST. Does the WG think we are communicating the hazards involved in this  domain of transforms well? Will implementors know to lock this stuff down  and or even prohibit it if they don't do a really really good job? What do  others think?      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 01:45 PM 7/14/2000 -0400, Ken Goldman wrote:   >In FSML, we have something similar to the <disclaimer> called   >signature restrictions.  For example, a signing token, possibly   >qualified by a signer login and password, might be constrained to sign   >purchase orders but not checks.   >   >What FSML does (in DSIG terms) is add a <Restrictions> tag to   ><SignedInfo>.  When the token receives the <SignedInfo> element for   >hashing and signing, it will reject the element if the <Restrictions>   >value does not match its internal rules.    Hi Ken. I would argue that your stated use is syntactily invalid with  respect to the content model as given by the DTD/schema (and I'm pushing  that we be cognizant of this fact) and also semantically. (This is one  reason why thinking in terms of a Data Model (via RDF) can be a good thing.  [1])     SignedInfo is merely a collection of References with two properties:  SignatureMethod and C14NMethod. Placing other semantics in there can be  dangerous. The purposes that you speak of seem much more appropriate to  SignatureProperties. (Have you considered this?)     Syntax and semantics are not the same thing, but they obviously are closely  related and in this instance we can use constraints on the syntax to also  constrain the ability to make semantic assertions within our specified  structures. Of course, one could place a similar corresponding statement in  a Signature Property (invalid on Tuesdays) but that CLEARLY represents that  this is a TRUST decision and has nothing to do with the signature structure  nor its Signature Validity.    [1] http://www.w3.org/Signature/Drafts/xmldsig-datamodel-19991029.gif      (Somewhat incomplete, but the last/best capture as a di-graph).      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        I've been occasionally tweaking my P3P/XML Signature proposal as a way of   fleshing out my understanding of the xmldsig spec's treatment of semantics   and such. I've updated the proposal to improve the association of a semantic   (like assures) with a signature -- knowing that this will also frequently be   defined by and/or implicit to the particular application using it. This   approach allows the semantic to be explicitly bound to the Signature via use   of SignatureProperty element and URI type. Comments are welcome:    http://www.w3.org/2000/12/xmldsig-p3p-profile/Overview.html#sec-Semantics    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Folks: that access code is restricted and they seem to think that the call  is at 4pm, not noon. If you don't get in right away, call back in 5 and  hopefully Don will have called in and cleared up the problem.    At 00:51 99/11/18 -0500, dee3@us.ibm.com wrote:   >Conference Call starts at noon eastern US time (EDT) 18 November. 1999.   >   >The call in numbers are 1-888-398-7616 and 1-212-547-0486.   >The password for call is 98305.  I am listed as the call leader.   >THIS IS A NEW PASSWORD AND INTERNATIONAL NUMBER.   >   >Agenda:   >     Agenda changes/additions.   >     Clean up from IETF meeting: slides/minutes < 5 minutes   >     Signature Syntax & Processing draft questions:   >     Schemas &/or DTDs < 10 minutes.   >     Other questions/items from latest posted draft < 15 minutes   >       Securing Location/Transforms - < 15 minutes   >       Levels of indirection, Manifests, References, ...   >     Con calls versus Thanksgiving/Christmas < 5 minutes   >     Face to Face meeting arrangements? < 5 minutes   >   >    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Note that the XML people have identified a significant amount of overlap  between C14N (Canonicalization) and the Infoset working group. If people are  interested in the C14N issues, I suggest they look at the most recent  Infoset Draft. [1] I hope the Syntax WG will have a first public WD prior to  the IETF meeting -- but I'm not convinced we will.      [1] http://www.w3.org/TR/xml-infoset    Forwarded Text ----   Date: Wed, 02 Jun 1999 22:12:29 -0700   To: "XML Syntax WG" <w3c-xml-syntax-wg@w3.org>   From: Tim Bray <tbray@textuality.com>   Subject: Minutes:1999.06.02 XML Syntax WG    ...   4. Canonicalization      NOTE: James Tauber *does* have time to put into this, but wants a         co-editor   ACTION: Chairs to recruit co-editor      Issue: possible overlap with Infoset   CONSENSUS: There is a real co-ordination issue here   CONSENSUS: Portions of XML documents considered "Required" should be              identical to that included in the canonical form.   ACTION: T.Bray to send message to Megginson, cc the CG, noting this.   CONSENSUS: In section 3, use infoset terminology & be consistent   ACTION: T.Bray, to XML-i-fy the spec   CONSENSUS: Express the material in section 4 in algorithms     End Forwarded Text ----  _________________________________________________________  Joseph Reagle Jr.     Policy Analyst      mailto:reagle@w3.org  XML-DSig Co-Chair   http://w3.org/People/Reagle/        

      [Thread moves back to question of whether a valid XML Signature is  well-formed, well-formed+constrained, DTD Valid, or Schema Valid]    At 05:43 PM 7/18/2000 -0400, Donald E. Eastlake 3rd wrote:   >>Does the text [1], "Thus, to interoperate between different XML   >>implementations, the following syntax constraints MUST be observed" mean   >>ONLY when a DTD/schema is not present, or any XML content being signed can   >>never have attribute values? (I assume not).   >>[1] http://www.w3.org/TR/2000/WD-xmldsig-core-20000711/#sec-XML-1   >   >I meant something like "Signatures which do not follow the three   >syntax constrains below will generally fail to interoperate if any XML   >implementation that ever tries to verify them does not have the   >required DTD/schmea(s) present."     Ok... (So this isn't required for conformance, just warning?)     > Note that it is not just the dsig   >DTD/schema but for anything within the SignedInfo and other stuff in   >the same document referenced by any References.  In generaly, it seems   >like mandating these syntax contraints would be a good idea.     I expect you don't mean "Signatures which do not ..." because I'd expect a  Signature application would have some sense of the  Signature DTD/schema;  you mean content being signed? This also returns us to the question as to  whether we expect Signature verifying applications to check for XML DTD or  schema validity.    DTD is out for enveloped/envloping signatures.    I argue a conformant Signature application needs to valdiate the Signature  element against the Signature schema. Fortunately, we aren't using that many  features, we could get away with some text akin to (tweaked Connolly        a conforming digital signature element is an element [information       item] that is _schema-valid_ with respect to the schema element       declarations found within each element's respective description and      definition.     >>And with respect to the text, "2. all entity references (except "amp",  "lt",   >>"gt", "apos", "quot", and other character entities not representable in  the   >>encoding chosen) be expanded" How would you respond to Martin's comment? I   >>think the point was to say these things don't vary as they are defined by   >>the doctype and convention, so that's why we don't mind if people use them   >>in their non-expanded form: & = &   >   >You have to be able to use most of the enumerated entities to properly   >express things without tripping up the XML parsing and they are   >pre-defined by the XML 1.0 specificaztion.  & = &   >"Expansion" is an odd term in this case as they change into one   >character so they get shorter.     I tried to rewrite the text of this section and the one below but was unable  to do so? Could you take a stab such that Martin's comments are addressed?      >>[1] http://www.w3.org/TR/2000/WD-xmldsig-core-20000711/#sec-XML-1   >>   >>At 15:44 6/27/00 -0400, Joseph M. Reagle Jr. wrote:   >> > >7.1, second list, point 2: 'except... and other character entities   >> > >not representable...': This may be wrongly understood to mean that   >> > >e.g. é in a HTML document shouldn't be expanded if   >> > >the encoding is US-ASCII. This is of course wrong, é   >> > >should in this case be changed to the appropriate numeric   >> > >character reference (and the spec may have to say whether   >> > >these should be decimal or hex,...).   >   >I guess that's right, ie, characters not representable should be   >changed into a numeric character reference.  But I can't see how it   >matters whether it is decimal or hex.  Any conformant XML 1.0 reader   >will translate the numeric character references into the appropriate   >character.  Things which depend on the surface input character string   >and assume no XML processing are completely screwed as far as   >interoperability anyway.      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 19:40 12/1/2000 +0000, merlin wrote:  >The text is good, but X509SKI is already cryptobinary; you've just  >changed subject name (which is rfc 2253 string).    Oops, sorry. The proper text and schema should be at:           http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html#sec-x509Data      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        In a few places [1] it still mentions "a minimal canonicalization algorithm   (such as CRLF and charset normalization)" since we have some good processing   and security text that generically applies, but the specification itself and   identifier has been removed.    [1]   http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html#sec-CanonicalizationMethod    __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 01:18 PM 6/11/99 -0400, Winchel 'Todd' Vincent, III wrote:   >At the workshop, we discussed the ability to sign BLOBs not simply an XML   >document.  I do not see this requirement above.    Right. It does derive from the fact that one is referring to a resource by  way of a URI (as does sigs of sigs, multiple sigs, etc.) but I am now much  clearer. I also added Richard Hime's ealier requirement about being able to  sign the original document encoding. [1]     >Does this mean that XML-Signature will use XML (not RDF) that is modeled   >such that it translates easily into RDF, but does not actually use RDF?    It means that we should have some representation of our data model, be it a  directed label graph, set of 3-tuples, RDF syntax, or what-not. I'm not  advocating the RDFsyntax, just a data model, such that one will be able to  do cool queries across things like signatures on signatures.     >Finally, a minor point, I notice that this workgroup and workproduct is   >alternatively called Signed XML and XML-DSig    XML-Signature(s) is the normative name, I've tweaked that document to  reflect that.        [1] http://www.w3.org/Signature/Drafts/xml-dsig-requirements-990601.html  _________________________________________________________  Joseph Reagle Jr.     Policy Analyst      mailto:reagle@w3.org  XML-DSig Co-Chair   http://w3.org/People/Reagle/        

      At 15:02 1/26/2001 -0800, Micah Dubinko wrote:  >It has been brought to my attention that Shana has secured a patent (US  >6,028,938) that relates to XForms. Details are available in their press  >release [1].    Thank you Micah, I've noted this on [a] and will raise the issue with the   T&S and UI Domain leaders so a complete disclosure will be solicited.    [a] http://www.w3.org/Signature/Disclosures.html     "Found" claims      These claims have been identified as a service to the Working Group by      someone other than the author of the claim.      ...      Dubinko. Does Shana patent 6,028,938 impact XForms?             "It has been brought to my attention that Shana has secured a             patent (US 6,028,938) that relates to XForms" and digital             signatures.      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      Changes now reflected in (this now also includes tweaks that makes all   complexTypes *and* elements global):          http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html    At 10:19 3/5/2001 +0000, merlin wrote:  >4.4 KeyInfo  >  ><complexType name="KeyInfoType" mixed="true">  >   <choice maxOccurs="unbounded">  >     <element name="KeyName" type="string"/>  >     ...  >     <any ... namespace="##other" minOccurs="0" maxOccurs="unbounded"/>  >   </choice>  >   ...  ></complexType>  >  >This permits an empty KeyInfo (if you have 0 elements from  >##other). It seems to me that if we took minOccurs=0 and  >maxOccurs=unb away from the any, then the unlimit on the  >choice would permit exactly what we want to express: 1 or  >more elements among our permitted types and those of others.    Correct. I originally structured them as I did to try to clearly express   that one can have 0-or-more elements from 0-or-more namespaces. This is   permitted by your proposal and my approach didn't end up being any more   clear -- and might even lead to redundant/ambiguity problems. I've now   changed it to:        <complexType name="KeyInfoType" mixed="true">        <choice maxOccurs="unbounded">          ...          <any processContents="lax" namespace="##other"/>          <!-- (1,1) elements from (0,unbounded) namespaces -->      >Other issues:  >4.3.2 SignatureMethodType  >The minOccurs=0/maxOccurs=1 on the sequence are redundant.    Ok.    >4.3.3.4 TransformType  >  >The maxOccurs=unb on the choice is redundant or in error?  >It suggests that multiple XSLT or XPath elements are valid.    We probably shouldn't permit an XPath, then something external, then an   XSLT, then something external. Each should be in their own Transform with   their approriate Algorithm identifier:       <element name="Transform" type="ds:TransformType"/>     <complexType name="TransformType" mixed="true">       <choice maxOccurs="unbounded">         <any namespace="##other" processContents="lax"/>         <!-- (1,1) elements from (0,unbounded) namespaces -->         <element name="XSLT" type="string"/>         <!-- must be an xsl:stylesheet element -->         <element name="XPath" type="string"/>       </choice>       <attribute name="Algorithm" type="uriReference" use="required"/>     </complexType>    >4.4.6 SPKIData  >  >The maxOccurs=unb on the outer sequence allows multiple  >SPKISexp elements, which I don't believe is the intention.  >I think instead the any should get that maxOccurs.    I'm not sure about this. Anyone else have thoughts on this?    >4.5/5.1 Object/Manifest  >  >ObjectType has sequence+[any], where ManifestType has  >sequence[any+]; I think the latter is more consistent with  >the rest of the doc.    Do you mean in the DTD? Are you saying the DTD definition should be:     <!ELEMENT Object (#PCDATA|Signature|SignatureProperties|Manifest   %Object.ANY;)+ >    >5.2 SignatureProperties  >  >SignatureProperType has choice*[any*]; one of the * is  >redundant.    Yes, I did this in the same philosophy that I spoke of earlier, but will   remove it now:    <element name="SignatureProperty" type="ds:SignaturePropertyType"/>  <complexType name="SignaturePropertyType" mixed="true">      <choice maxOccurs="unbounded">        <any namespace="##other" processContents="lax"/>        <!-- (1,1) elements from (1,unbounded) namespaces -->      </choice>      <attribute name="Target" type="uriReference" use="required"/>      <attribute name="Id" type="ID" use="optional"/>  </complexType>      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 10:26 4/10/2001 +0100, merlin wrote:  >I'm with Gregor. I think that the text should be something along  >the lines of:  >  >The normative specification for XSL Transformations is [XSLT].  >The XSL transformation is encoded within a namespace-qualified  ><code>stylesheet</code> element which MUST be the sole transform  >parameter child element.    That was old text that was still using the string context, I've changed it   using the text above:          http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html#sec-XSLT    >Next paragraph, typo "covert" -> "convert".    ok.    >Next paragraph, typo "to perform canonicalize" -> "to c10e".    ok.      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      I'll /+add+/:    If the data object is an octet stream and the next transform requires a   node-set, the signature application MUST attempt to parse the octets   /+yielding the required node-set+/.    At 02:40 6/27/2001, Dournaee, Blake wrote:  >In section 4.3.3.2, I would like to clarify something. Consider the  >following sentence (first bullet after XPath "box"):  >  >"If the data object is an octet stream and the next transform requires a  >node-set, the signature application MUST attempt to parse the octets."  >  >Is the "parsing the octets" a well-defined operation? I am assuming this  >implies that one must convert the octets into a node-set. Is this correct?  >Can this be stated instead?      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 11:10 99/10/29 -0400, Donald E. Eastlake 3rd wrote:   >>  99-October-28   >>  Chairs: Donald Eastlake and Joseph Reagle   >>  Note Taker: Joseph Reagle [[4]ascii]    Don, thanks for the comments, I've inserted them into the minutes.   >Wouldn't this be   >   ><Object   >Type="http://www.w3.org/1999/10/signature-core/signatureproperties">   >    <Properties>   >        <Property Target="ID of Signature"   >                  xmlns="http://www.w3.org/1999/10/signature-core/time">   >            <Date>...</Date>   >            <Time>...</Time>   >            ...   >        </Property>   >    </Properties>   ></Object>   >   >or the like?    Yes, and I added the comment is the reason that we've done this in object  (where people can include whatever semantics they want) is that the element  Properties is a particular type of object (that we defined) for semantics  about the signature itself. We might be able to do something snazzy with  schema such that Properties is a type of object, or we might define it such  that there is only one property in an object, if you want multiple  properties, you should have multiple objects.      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 09:28 4/11/2001 -0700, John Boyer wrote:  >I had a quick look at the XSLT section, and it seems like there are a   >number of places where spaces have been mysteriously deleted.  It could use   >a quick edit.    Do you mean section 6.6.3 XPath Filtering? (6.6.5 XSLT doesn't have any   examples.)      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

        In addition to tidy not reporting some errors [1], I've noted that when tidy   changes a file it doesn't touch the time stamp (win2k). This means that I   don't know about the fix, and cvs won't see a change and consequently won't   publish the fix.    [1] http://lists.w3.org/Archives/Public/html-tidy/2001JanMar/0270.html    __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 20:25 6/22/2001, Dournaee, Blake wrote:  >Is there a standard or note that defines exactly what it means to  >de-reference a URI? It seems like this term gets used a lot and I have yet  >to find a clear, specific definition.    I'm not aware of a formal definition (though it wouldn't surprise me if Dan   Connolly hasn't created one), only informal conventions that are not always   agreed to. From my understanding, the two words that get used a lot with   respect to URIs are "resolve" and "dereference."    Resolved: from the way its used in RFC2396 [1] it seems pretty clear to me   that a resolved URI is one in which a partial (e.g., relative) is resolved   into its final (e.g., absolute) form, "the resolved path (i.e., treating   them as part of the final URI)"    Dereference: used a lot in the HTML specs, probably based on the fairly   common CS understanding [3], "To access the thing to which a pointer points,  i.e. to follow the pointer." I presume the definition is, "determine the URI   scheme, then see that spec: ftp, http, urn, etc."    [1] http://www.ietf.org/rfc/rfc2396.txt  [2] http://www.w3.org/TR/REC-html32  [3]   http://foldoc.doc.ic.ac.uk/foldoc/foldoc.cgi?query=dereference&action=Search    --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      Hans,    Our testing has been relatively informal. There's been some peer exchanges,   as well as tar balls of examples sent to the list that others run through   their implementation. This is what we've been doing for the purposes of our   interoperability report [1] -- which will need to be updated once we move   Canonical XML to REC because the URI for its algorithm will change. So I'd   recommend trying the tar ball reference in [1], and if everything goes   smoothly, feel free to create your own with more exotic/boundary examples.    [1] http://www.w3.org/Signature/2000/10/17-xmldsig-interop.html    At 11:32 3/8/2001 -0800, Hans Granqvist wrote:  >Is there any ongoing efforts among DSig implementers to  >participate in interoperability tests? We have a full DSig  >implementation and we'd like to see how it stacks up. (If  >you want to try our toolkit, email me for a URL to download  >it.)  >  >I searched both the archives of this list, and the W3C member  >pages, and found nothing mentioning interop (except an IETF  >meeting in Pittsburgh, Pennsylvania, June/July, 2000).  >  >If there is no interop going on, I'd propose we start one.  >Any ideas how to do it 'properly'?  >  >Thanks,  >/Hans  >--  >Hans Granqvist, Verisign XML Web Services, +1 650 429-5369, GMT-8  >  >PS. Can the QA workshop [1] (which mentions conformance testing)  >and its members be part of this?  >  >[1] http://www.w3.org/2001/01/qa-ws/      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      http://www.w3.org/Signature/Overview.html        1. [27]CC: Send comments on [28]Drafts/xmldsig-requirements-990728 .         (990728/990804)          http://www.w3.org/Signature/Drafts/xmldsig-requirements-990728.html      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      Oh, two other things to note, in the first CR we asked for feedback on the   use of XPath terminology, and whether minC14N should be downgraded to   optional. We didn't have any feedback on either, so I expect we should leave   them as is.    At 18:32 4/3/2001 -0400, Joseph M. Reagle Jr. wrote:  >Some things to note is that will be using the latest version of schema [2]   >(hopefully I haven't introduced any bugs into the definitions and the one   >example), and we now have a section on CryptoBinary [3] for which the   >bignum text applies to (generalized to all CryptoBinary).        __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 08:34 5/17/2001 -0400, Donald E. Eastlake 3rd wrote:  >Close, but I would think it would be more like  >  ><Object Id="arbitraryBase64EncodedData"  >         Encoding="http://www.w3.org/2000/09/xmldsig#base64"  >         MimeType="application/octet-stream">    The reason this concerned me is I think the spec is a bit ambigous on this   note. In your instance the Encoding and MimeType are redundant -- I think?   Or is the MimeType the type of the object regardless of its encoding?    __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      [Resulting document:     http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html     $Revision: 1.60 $ on $Date: 2001/05/22 16:44:16 $       4.4.1 The KeyName Element     The KeyName element contains a string value (in which white space     is significant) which may be used ...  ]    At 00:49 5/22/2001 -0400, Donald E. Eastlake 3rd wrote:    >My conclusion is that there isn't a strong enough opinion to change  >the provisions of the current standard which have been incorporated  >into existing implementations.  However, we should include text in the  >next revision which clearly says that KeyName is not a name in the  >sense of a token token but a string in which white space IS  >significant.  >  >Donald, as co-Chair      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 02:19 PM 3/2/00 +0100, Malte Borcherding wrote:   >In my opinion, this buys a clearly structured repository of references to   >cryptographic algorithms and structures. It simplifies re-use of  definitions,   >since you know where to look if you want to include a reference to an  algorithm   >in your self-defined XML document.    I still don't understand (please show me an example of what this provides  above/beyond my example). If you and/or Ed are advocating a DTD module based  construction [1], I would advise against that: XHTML did it because they  started well before schemas. If you are advocating a composed schema [2]  based on specific namespaces, I think that would be interesting, but a bit  too advanced for my tastes at this moment. (And -- obviously -- I'm not sure  what having a separate namespace without either of these things actually  provides.)     >Speaking of re-use, has there been any discussion in the past about  including   >some sort of reference to well-known OIDs for cryptographic algorithms?     I believe the general feeling has been to avoid OIDs (and related  discussion).    [1] http://www.w3.org/TR/2000/WD-xhtml-building-20000105/  [2] http://www.w3.org/TR/xmlschema-1/#composition    <schema targetNamespace="http://www.w3.org/2000/02/xmldsig#"     version="0.1"     xmlns="http://www.w3.org/1999/XMLSchema"  xmlns:ds="http://www.w3.org/2000/02/xmldsig#">       <import namespace="http://www.w3.org/2000/02/xmldsig/Core#"       schemaLocation="http://www.w3.org/2000/02/xmldsig/Core#"     />       <import namespace="http://www.w3.org/2000/02/xmldsig/KeyInfo#"       schemaLocation="http://www.w3.org/2000/02/xmldsig/KeyInfo#"     />    </schema>        _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        http://www.w3.org/Signature/Drafts/WD-xmldsig-core-19991116.html    This includes the experimental use of schema declarations (which might be  buggy) and entity references (which we should discuss.) Other (mostly  editorial) todo's and done's are at the bottom of the document. I'll remove  that info and try to have it published as a new TR and ietf-draft by Friday.    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      We've posted the latest version at          http://www.w3.org/Signature/Drafts/WD-xmldsig-core-20000218/       Status of this document       This is a WG draft prepared as a candidate for IETF/W3C last call. The     next version of this draft will be advanced to last call on Februrary     28th. That version will likely include minor editorial and exposition     edits exclusively. If necessary, the STATUS of that version will also     document any last minute concerns or minority opinions expressed prior     to its publication.    Next week we'll try to clarify a couple of small issues (highlighted in  red), make sure everything is good (validation, references, etc.) and  prepare the last call to be issued on the 28th.    NOTE: This includes both the re-org of section two, and the move away from  IDREF.          _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      This email is notice that a Chair of the xmldsig WG has received a pointer  [1] to the following marketing claim about intellectual property that might  be relevant to our work. I've been unable to communicate with  representatives of the company or garner any other information about this  claim. The following holds:       Neither the [8]IESG/IETF or the [9]W3C take a position     regarding (1) the validity or scope of any intellectual property right     or other rights that might be claimed to pertain to the implementation     or use of the technology, nor (2) the extent to which any license     under such rights might or might not be available.      http://www.w3.org/Signature/Disclosures.html  __    [1] http://www.ilumin.com/technology/index.html          The Digital Handshake Server Suite is iLumin's patent-pending, end-to-end,  enforceable online transaction technology. A branded add-in service offering  for any Internet site or eBusiness application, Digital Handshake  dramatically reduces the inefficiencies, costs, time and error associated  with today's extended and labor-intensive document and business closure  cycle. This innovative transaction system enables multiple parties to  interact, and each may be running dissimilar operating systems, databases  and application technologies.     The Digital Handshake technology employs digital signatures, XML and  Web-enabled applications to create the first end-to-end, fully automated and  legally binding business closure process. Its components include an Online  Signing Room, a Digital Clerk and an e-Cabinet.    Digital Handshake Assures users of:      Secure Access to Documents     Identity Authentication     Data Security     Document Integrity     Compliance with Digital Signature Laws    and Requirements     Non-repudiation of Legally Binding Documents     Secure Storage and Access Control     Privacy and Confidentiality   The Digital Handshake tech is designed to provide easy access to information  using any Internet browser. It offers multiple levels of security for access  control, identity authentication, and confidentially of sensitive legal  documents. iLumin's security and tagging features enables only designated  parties access to a document.    Digital Handshake incorporates digital signature as well as tamper-proof  encryption technologies. The use of XML-tagged "intelligent documents"  supports multiple digital signatures and eliminates unauthorized changes.  Sections of a document can be tagged to automate the processing as well as  to ensure confidentiality and privacy.       _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 16:12 4/14/2001 -0700, Brian LaMacchia wrote:  >After we decided to keep CryptoBinary around, Joseph asked me to take a  >look at all the elements that are currently specified as CryptoBinary  >and determine whether they really should be.  Currently, we've denoted  >each of the following elements as CryptoBinary:    Thank you Brian, I've hopefully captured these tweaks and added the   following paragraph:    http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html#sec-CryptoBinary  This type is used by "bignum" values such as RSAKeyValue and DSAKeyValue. If   a value can be of type base64Binary or ds:CryptoBinary they are defined as   base64Binary. For example, if the signature algorithm is RSA or DSA then   SignatureValue represents a bignum and could be ds:CryptoBinary. However, if   HMAC-SHA1 is the signature algorithm then SignatureValue could have leading   zero octets that must be preserved. Thus SignatureValue is generically   defined as of type base64Binary.        __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      http://www.w3.org/Signature/Drafts/WD-xmldsig-core-991008.html       Done - JR.      1. Content HTML validates and CSS validates. (requirement for W3C         publishing.)      2. Includes link to [20]eastlake's proposal but no inserted.      3. The arbitrary [21]contributor policies  I used to populate the         designations is that the person opted-in to the [22]Participant's         list and has posted to the list in the past two weeks. If you         would like to be listed as a participant and acknowledged in the         contributor section please let me know.      4. Added proposed text for W3C Status "boiler plate"      5. Did most of edits from this week's discussion, where I didn't make         a change, I left a comment that somebody else should.      6. Was think that when I replaced all '<c14nAlg Algorithm="..."'>         with '<CanonicalizationAlg Algorithm="..."'>, I realized it looked         silly. Should we make it  '<Canonicalization Algorithm="...">'?      7. Many many small edits -- What I fixed, probably broke things         elsewhere!             _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

        I can't find that file in my win2k install.    http://www.w3.org/Amaya/User/New.html  Windows: It's now possible to change the value of the user's preferences  directory. To do so, edit the win-thot.rc and add a variable called  APP_HOME in the [amaya] section. The value of this variable should be the  path to directory. This is interesting if you want to install Amaya in an  NFS drive, but store the user's preferences locally.        

      Formally, I believe the schema spec does what this WG needs it to do, as  I've applied it and a validator tool to our spec and some examples I've been  working on. Consequently, I think the more "formal" review from this WG  would be straight forward to write (it meets our requirements). However,  this is also a good time to make sure it will be a good and useful in a  broader light beyond the immediate requirements of this WG (i.e., the  requirements of applications using XML Signature with their XML syntax).    Would anyone else be interested in agreeing to review this spec over within  the next 4-6 weeks?    Forwarded Text ----   Date: Sat, 01 Apr 2000 07:27:57 -0700   To: "Joseph M. Reagle Jr." <reagle@w3.org>   From: "C. M. Sperberg-McQueen" <cmsmcq@acm.org>   Subject: request for review: XML Schema        The W3C XML Schema Working Group is planning to go to Last Call on the   XML Schema specification soon....      Can the DSig Working Group commit to reviewing the spec by 12 May   2000?      Please let us know asap either way.      Thanks.      -Michael Sperberg-McQueen    Dave Hollander    Co-chairs, W3C XML Schema WG         --    ****************************************************   * C. M. Sperberg-McQueen                           *   * Research Staff, World Wide Web Consortium        *   * Route 1, Box 380A, Española NM 87532-9765 *   * (that's Espanola with an n-tilde)                *   * cmsmcq@acm.org, fax: +1 (505) 747-1424           *   ****************************************************     End Forwarded Text ----    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 09:37 8/2/2001, edsimon@xmlsec.com wrote:  > >>This would allow me to change the URI without altering the validity of  >the  > >>signature.  > >  > >If it's being used in the Canonical XML context, remove the '//@*' from:  > >         (//. | //@* | //namespace::*)  >  >  >Correct me if I'm wrong but wouldn't the above remove ALL attributes, not  >just the one Blake wants removed.    Yes it would. And you're right that XSLT is the tool for the job in the   scenario you describe.      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      Forwarded Text ----   To: "Joseph M. Reagle Jr." <reagle@w3.org>   Subject: Re: Namespaces and URNs   From: ht@cogsci.ed.ac.uk (Henry S. Thompson)   Date: 28 Oct 1999 10:39:31 +0100      The new PWD is due in 8 days and will NOT solve your problem.  The one    after that will.      Go with [1].  The new PWD will not change much, and nothing in the   area you care about.  There is what amounts to an answer to your   question, which will be close to what we end up with, in [2], which is    pointed to from [1].  Look at the Dublin Core example.      ht      [1] http://www.w3.org/TR/1999/WD-xmlschema-1-19990924/   [2] http://www.w3.org/TR/1999/WD-xmlschema-1-19990924/composition-tf.html   --   End Forwarded Text ----    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 11:31 10/19/2000 -0700, Stern, David L wrote:  >Joseph:  >1. In section 6.4.2,  change "IEEE P1363" to "IEEE 1363", the specification  >achieved release status on August 25th 2000 and hence the 'P' was dropped.    Ok, reference now reads:  1363: IEEE 1363: Standard Specifications for Public Key Cryptography. August   2000.    >2. Should signatures with partial message recovery be noted somewhere?  >3. Do we need a footnote for SHA-2?    I'll let others in the WG who've contributed to this section speak to these   issues.    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 12:09 5/18/2001 +0100, merlin wrote:  >I've always thought that Encoding and MimeType were a bit  >weird. They seem only to have meaning for character content  >(which will be the minority of uses), the encoding is implicit  >in the Transforms applied of the corresponding Reference and  >the MimeType can be represented by its Type attribute. It  >would make more sense to me if they were defined on a MimeData  >element that could be used within Object, but I would not  >even advocate that.    We could  1. remove those two and use attribute "Type", and say it has the same   behavior as that in Reference.  2. maintain these two attributes, and say Encoding is the encoding of the   Object content, MimeType is the mime-type of the data object (independent of   its present encoding). All of this information continues to be advisory and   when this information is necessary to processing we recommend it be   explicitly specified via the Reference element and its Type attribute and   Transform children (e.g., decoding).    I prefer option 2 since it doesn't require us to change the DTD/schema.      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      So the results of recent discussion on this topic were rather muddled/mixed   which is not surprising given the state of the issue <smile>. Our own   discussion was split [2] with some confusion regarding the meaning of   "unspecified". Additionally, the brief discussion at the XML Plenary meeting   didn't give us an inescapable argument either [1].    However, I think John's recently analysis [2,c] is delightfully unmuddled   (just two variables and their enumeration). I'm not of a strong technical   opinion either way (I've flip-flopped a few times), and my interest in this   is much more at the meta-level that the following two requirements be met:    1. That the conformance requirements and expectations regarding Canonical   XML and its applications be straightforward. Even if this means being   aggressive with considering things in or out of scope we need to ensure a   developer can understand and implement the spec in an interoperable way as   easily as possible.  2. The way in which we should respect the Plenary Decision is by not   requiring XML processors to do things counter to the Plenary Decision.    Consequently, from a procedural point of view, in order to bring this issue   to a close, we need to opt for one of these options and ask for opposition.   So given the previous discussion and John's proposal of:             go with Choice #1 as it is specified above, i.e. REQUIRE           implementers to A) not use Type 1 processors, B) generate           errors if Type 2 processor used and non-absolute namespace           URI found, or C) use a Type 3 processor.           [2,c]    please express your acceptance of this proposal or opposition (and reason   why) by Wednesday October 27th.    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0517.html  [2] Tally  Option 1 Undefined (does that mean not signed or not interop)  a. Martin Duerst (adhere to plenary decision and motivation)      http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0503.html  b. Mark Bartel (2 adds extra requirements)      http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0504.html      However, also states that this doesn't require a fail, just that it      won't interoperate.      http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0509.html  c. Boyer (Easiest on implementation/conformance front)      http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0521.html    Option 2 Interpret as String.  a. Petteri Stenius (Meaning we don't try to interprate the values)      http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0505.html  b. Gregor Karlinger (We don't bother with URIs beyond treating      them as string)      http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0506.html  c. Merlin Hughes (1 requires us to understand what a URI is)      http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0507.html  d. Donald Eastlake (give "suitable warnings that realtive URI       namespaces are flakey"       http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0520.html    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 16:02 4/9/2001 +0100, merlin wrote:  >Baltimore laxly enforces the schema. I'd suggest adding the  >following to the list of features:  >  >. XPath  >. XPath 'here()' function    So noted.           http://www.w3.org/Signature/2001/04/05-xmldsig-interop.html      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 17:10 2/21/2001 -0800, Brian LaMacchia wrote:  >I definitely disagree with the second clause of the AND, "applying to the  >validation key", because the common interpretation of that suggestion  >appears to be, "any key that appears in KeyValue MUST be the validation key  >for the signature."    Looking at the spec, I agree with Kent that it is hard to escape that that   the intent of KeyInfo was to convery information about *a* key -- and this   spec uses this key for signature validation. The native XML structures   (KeyName and KeyValue) speak to this directly, and the translated structures   (as an opaque blob) serve this purpose as well..    >http://www.w3.org/TR/2000/CR-xmldsig-core-20001031/  >4.4 The KeyInfo Element  >KeyInfo is an optional element that enables the recipient(s) to obtain the   >key needed to validate the signature....Multiple declarations within   >KeyInfo refer to the same key.  >4.4.1 The KeyName Element  >The KeyName element contains a string value which may be used by the signer   >to communicate a key identifier to the recipient. Typically, KeyName   >contains an identifier related to the key pair used to sign the message,   >but it may contain other protocol-related information that indirectly   >identifies a key pair.  >4.4.2 The KeyValue Element  >The KeyValue element contains a single public key that may be useful in   >validating the signature.      >Assuming that's the intent of the second clause then I  >think it's broken because it assumes KeyValue (and thus KeyInfo) only  >appears within a Signature element and that's not true in something like  >XKMS.    There's sort of two issues here too. If you think of the data model (don't   worry about syntax but draw classes) is KeyInfo a resource/key with a bunch   of properties (KeyName, KeyValue, X509Data) that describes that resource? Or   is it merely a bag of unrelated keys/resources. I think the present text   speaks to the first meaning. The second issue is what is the intent of how   that resource be used, in the Signature context its for signature   validation. My concern for signature (and other applications) is that we get   the meaning of the structures within ds:KeyInfo straight and its intent is   application dependent (given by the parent element it is found within.)    So Kent's point was that while KeyInfo can include multiple structures they   ultimately provide you a resource, that is useful for validating and   trusting a signature. (I don't know if Kent is actually advocating this, but   he's arguing that's what the spec says and I agree.) I think this semantic   is useful, and could server other applications even, but that also means   that if they just want a bag of key stuff, they'd need another container.    >Hmm, maybe the real problem here is the "Multiple declarations within  >KeyInfo refer to the same key" part, because that *does* seem to imply only  >a single KeyValue could occur.    Right.    >But I can't reconcile that with out X509Data  >position.  We've justified having multiple X509 certs within a single  >X509Data by saying that multiple certs "refer" to the same key if they're  >part of a chain that includes that key, but it seems weird that only  >X509Data would get this special dispensation.    I don't understand the disconnect.    Particularly when you look at the text in the editors' copy that Don wrote   on X509Data when he closed [1] the issue on the ambiguity of IS, SKI and SN.    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001JanMar/0088.html    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001JanMar/0094.html  >     Any X509IssuerSerial, X509SKI, and X509SubjectName elements that  >     appear MUST refer to the certficiate or certificates containing  >     the validation key.  All such elements that refer to a  >     particular individual certificate MUST be grouped inside a  >     single X509Data element and if the certificate to which they  >     refer appears, it MUST also be in that X509Data element.  >  >     Any X509IssuerSerial, X509SKI, and X509SubjectName elements that  >     relate to the same key but different certificates MUST be  >     grouped within a single KeyInfo but MAY occur in multiple  >     X509Data elements.  >  >     All certificates appearing in an X509Data element MUST relate to  >     the validation key by either containing it or being part of a  >     certification chain that termiantes in a certificate containing  >     the validation key.      >I guess the bottom line problem is that KeyInfo has "grown up" and is/will  >be used in multiple specs, so perhaps what we really need is a general  >statement about the structure of KeyInfo/KeyValue and then a profile of that  >for use of KeyInfo/KeyValue in XMLDSIG.    We don't necessarily have to change our spec and step outside of scope   because other young specs are going to use KeyInfo. If we are clear about   what we mean it serves them as well. If other specifications want to send   bags of keys they can trivially do either of the following:    <enc:KeyPackage>     <ds:KeyInfo>...</ds:KeyInfo>     <ds:KeyInfo>...</ds:KeyInfo>  </enc:KeyPackage>  (if they want to take advantage of the semantic that KeyInfo data pertains   to a key)    or if they don't want to use that semantic:    <enc:Keys>     <ds:KeyName/>     <ds:PGPData/>      etc...  </enc:Keys>      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 15:42 7/11/00 +0900, TAMURA Kent wrote:   >> I wanted to point out that the examples you sent me (and Petteri  confirmed)   >> for the forthcoming Signature specification include an <X509Name> element   >> that is not part of the schema. Do you mean X509SubjectName?   >   >Yes, it should be X509SubjectName.  I modify our generation code.    However, in that case Brian's latest content model [1] precludes the ability  to use a SubjectName and Cert within one X509Data. Consequently, I've  removed the SubjectName so the spec has valid examples -- and leave it to  you and Brian to resolve what you want for the content model.    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000AprJun/0277.html    This change means that an individual X509Data clause may be one of:  a) a collection of X509IssuerSerial, X509SKI and X509SubjectName elements,  b) exactly one X509Certificate element, or  c) exactly one X509CRL      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 03:36 PM 6/13/00 -0700, Marshall Rose wrote:   >there isn't a list, per se, people send me email and sometime it gets   >through [private joke to joseph]. we can certainly discuss it in this  forum.   >guess i'd better subscribe!    Great! It's a very quiet list, but at least we can share our experiences and  solutions, at best we'll create the spec super DTD. <smile>    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Carl: I'm not sure if you argument is for multiple elements in general   (which is already permitted), or the possibility of multiple KeyValues   (which we are discussing, and I thought you previously opposed)?    I think I personally agree with Kent's point that given our semantics, you   would only have one KeyValue: you only have on KeyInfo. Brian mentioned a   change might damage dependent specs (XKMS) so I went to look at it [1] again   wondering when this is the case. However, I don't see any of the examples   using more than one KeyValue within a KeyInfo. I'm presuming the scenario is   where one does a query and gets a couple keys back, but I presume you'd get   more than one KeyInfo back. You don't have more than one KeyInfo in a   Signature because the structure was designed to exchange key information   necessary to validate, not generic key exchange. This can be easily remedied   in XKMS or other applications as Kent suggests.  <foo:Keys>     <ds:KeyInfo>       <ds:KeyValue>...</ds:KeyValue>     </ds:KeyInfo>     <ds:KeyInfo>       <ds:KeyValue>...</ds:KeyValue>     </ds:KeyInfo>  </foo:Keys>    Brian: could you give us a specific scenario?    Kent: do you have a schema/dtd in mind that would express this constraint?      [1] http://www.verisign.com/rsc/wp/xml/xkms_spec/xkms_spec_wp.pdf    At 03:39 2/21/2001 -0800, Carl Ellison wrote:  > >4.4 The KeyInfo Element, 2nd paragraph:  > >>> Multiple declarations within KeyInfo refer to the same key.  > >  > >Multiple KeyValue elements in a KeyInfo element make no sense  > >according to this sentence.  If one wants to transfer multiple  > >keys at once, one should define container element, that includes  > >multiple KeyInfo elements.  >  >I can imagine the key info to back up use of a single key, not just the raw  >key.  We already provide for a variety of certificate forms in KeyInfo.  If  >you have certificates, you usually need one or more chains of them for the  >end certificate to be useful.  You might even need multiple end certificates  >on the same key.  For example, you might have my Intel key, with an X.509  >certificate issued by Intel IT department and binding my World-Wide ID Number  >to that key (WWID being Intel's only unique name for us) -- but in order to  >make a security decision on the signed message in question, the DSig might  >also need to contain an SPKI certificate (or certificate chain) whose (final)  >subject is that key, empowering it in some way.  >  >To me, that calls for multiple elements.      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 17:36 7/27/2001, John Boyer wrote:  >If C14N is called with a node-set, then it processes the node-set.  Only  >if it is called with an octet stream does it behave as if running an  >XPath that eliminates comments.  Therefore to retain the default  >behavior of stripping comments, we defined the processing model for  >References as stripping the comments out.    I propose adding text ([INS]) to the spec to make this more clear:    http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html#sec-Same-Document  $Revision: 1.104 $ on $Date: 2001/07/27 22:07:47 $    >4.3.3.3 Same-Document URI-References  >...  >  5. if the URI is not a full XPointer, then delete all comment nodes  >...  >The last step is performed for null URIs, barename XPointers and child   >sequence  >XPointers. [INS:It's necessary because when [XML-C14N] is passed a   >node-set, it  >processes the node-set as is: with or without comments. Only when it's called  >with an octet stream does it invoke it's own XPath expressions (default or  >without comments). Therefore to retain the default behavior of stripping  >comments when passed a nodeset, they are removed in the last step if the   >URI is  >not a full XPointer. :INS]To retain comments while selecting an element by an  >identifier ID, use the following full XPointer: URI='#xpointer(id('ID'))'. To  >retain comments while selecting the entire document, use the following full  >XPointer: URI='#xpointer(/)'. This XPointer contains a simple XPath   >expression  >that includes the root node, which the second to last step above replaces   >with  >all nodes of the parse tree (all descendants, plus all attributes, plus all  >namespaces nodes).      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 15:08 1/8/2001 -0800, Joseph Ashwood wrote:  >request comes from the courts). The two documents are identical except that  >every occurance of Lira (sp?) is replaced by US Dollar, the result is that  >the customer sees a slightly lower than it should be price identified as    Hi Joe, I agree that Martin's scenario is a compelling one.    > > Otherwise, if you want these things to be signed, then sign them  > > in the Signature or package them together in some such archive.  >  >This is a fraud waiting to happen, that is my issue, plain and simple. If  >the rest of the spec made this fraud difficult to pull off, the benefits  >extremely low, or easy to detect, I would have no issue. However the rest of  >the document does not inhibit the commission of this fraud, does not limit  >the magnitude of the benefits, and makes detection more difficult because  >people are less likely to examine documents once signed.    Your proposal was that somehow the Canonical form include the "meaning" of   its namespace. One approach would be to include the DTD(internal   subset)/schema(no idea...)? This still wouldn't completely solve the problem   as Martin's example had because the meaning of the element was derived from   a DTD comment, which is not 'normative' and is indicative that meaning may   or may not be associated with a namespace, and some of that meaning is based   on computer understandable structures (DTD/schema), the natural language   tokens appearing in them, comments, natural language specifications   associated with them, and shared history and context of that namespace. (For   instance, in this scenario I'd expect courts to look at the receipts of   previous exchanges, and then ask why did one party's understanding change   for this particular transaction.)    Regardless, your proposal has not been a requirement/proposal of Canonical   XML, issues of "context affecting the meaning" have long been recognized and   are simply addressed by including a Signature//Reference to those other   contextual documents where possible. Concerns that this leaves room for   signature users to create and rely upon ambiguous signatures has not been   sufficient to deter the WG from relying upon the present approach -- though   it has led to more text/warnings about this issue:  >"The XML Signature is a method of associating a key with referenced data   >(octets); it does not normatively specify how keys are associated with   >persons or institutions, nor the meaning of the data being referenced and   >signed."  >[1] http://www.w3.org/Signature/20000228-last-call-issues.html (Davis issue)      So I think there are three courses open to you on this issue:  1. A substantive proposal with significant agreement from the WG to change   the specifications. (This doesn't seem likely given the list response.)  2. A proposal to change the text of the specification to more strongly   identify/warn about this issue. I propose a new sentence at the end of 8.1.1:  >Also, users concerned with the integrity of the element type definitions   >associated with the XML instance being signed may wish to sign those   >definitions as well (i.e,. the schema, DTD, or natural language description   >associated with that namespace/identifier).  3. A noted opposition in the specifications' issues document.      __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 13:31 99/08/24 -0400, Phillip M Hallam-Baker wrote:   >I am opposed to introducing the possibility of a downgrade or   >algorithm substitution attack.    Good point, it might be worthwhile to have a security requirements section  and include this principle. Regardless, does this requirement necessarily  conflict with a mandatory to implement but optional to use c14n? .... Again,  if a signer is not confident the receiver is willing to use/trust a feature,  he is much less likely to use it. However, this evaluation will be made on  the basis of the trust of the feature's specification/implementation, not  whether the feature will be implemented at all. Pursuing the former leads to  use of the feature at a level commensurate with its quality (including  abandonment if there's a hole); pursuing the latter converges to non-use  given the network effects of interoperability. The former satisfies those  who need c14n and are willing to risk it as well as those who refuse to use  it. The latter only serves those who refuse to use it.        _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 07:56 2000-05-14 -0400, Peter Lipp wrote:   >> Again, I *strongly* encourage Joseph and others at the W3C, as well as   >> leaders in the IETF, to consider this as a W3C/IETF activity.  It really   >> *should not* be a Legal XML activity.  But, there should be *someplace*   >> where this discussion and work can take place . . .   >I am not fully aware about the procedures, but it should not be too   >difficult for anybody to initate a BOF at the next IETF e.g., so you could   >go for it!    In the W3C there are workshops, but they are usually more "costly" to start  than an IETF BoF. I believe for an IETF BoF you generally have to show the  area director(s) that there is a body of interest that would make scheduling  the topic worthwhile. I created the xml encryption list [1] to see if that  thresh-hold of interest is high enough. (Though I haven't committed to  starting/devoting-time to it and their hasn't been all that much  discussion.) Someone could do the same for XML cert (or I'd be happy to  create a list when I get back from Europe).        [1] http://lists.w3.org/Archives/Public/xml-encryption/    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        At 15:35 10/31/2000 +0900, TAMURA Kent wrote:  > > [1] http://www.w3.org/Signature/2000/10/10-c14n-interop  >  >Add IBM implementation, and fill "Y" for all items, please.    Done. A couple of questions, the first of which is mine, and the latter is   something Boyer asked:    1. Is the requirement with respect to parsing and relative-URI-ns (reporting   it as an error and not expanding) already implemented in the parser, or   logic you had to add on for the time being?  2. <Boyer>One of the final editorial tweaks that Joseph asked me to make was   to amend the beginning of section 2.1 to make it clear that document   subsetting and node-set input meant the same thing.  When I say node-set   input is recommended (as opposed to required), I'm saying that a conformant   implementation should but is not required to do document subsetting as   described in Section 2.4 and exemplified in Section 3.7. Since ... you have   working code for example 3.7, I am just writing to ask whether this does   indeed mean you created your implementation using XPath node-sets. </Boyer>          __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        Good point! But we have decided not to require XPtr... However, it still  might provide enough 'elegance' in defining the behaviour, but I'm not sure  if we could also reproduce that in XPath for those that plan on doing XPath  solution. I'll defer to John on that.    At 11:54 2000-05-10 -0400, Mariano P. Consens wrote:   >   >Joseph (and Donald and John, who were also part of the discussion after the   >meeting),   >   >I've found the following function defined in XPointer (Working Draft 6   >December 1999):   >   >FUNCTION: location-set here( )   >The here() function returns a location-set with a single member. That   >location is of type element, and locates the element that directly contains   >(as text) or bears (as an attribute value) the XPointer. This expression   >results in a syntax error if the containing XPointer does not appear in an   >XML document.   >   >Using it we can find the ancestor Signature element (without defining   >variable bindings) as:   >   >here()/ancestor::Signature   >   >Mariano.   >   >  --------------------------------------------------------------------   >  Mariano P. Consens                    Department of Computer Science   >  e-mail: mconsens@uwaterloo.ca         University of Waterloo   >  phone: (519) 888-4567 x-3023          Waterloo, Ontario, N2L 3G1   >  fax: (519) 885-1208                   CANADA   >  --------------------------------------------------------------------   >   >   >> -----Original Message-----   >> From: w3c-ietf-xmldsig-request@w3.org   >> [mailto:w3c-ietf-xmldsig-request@w3.org]On Behalf Of Joseph M. Reagle   >> Jr.   >> Sent: May 10, 2000 8:29 AM   >> To: Petteri Stenius   >> Cc: IETF/W3C XML-DSig WG (E-mail)   >> Subject: Re: Enveloped signatures   >>   >> At 11:35 2000-05-10 +0300, Petteri Stenius wrote:   >>  >6.6.5 Signature Exclusion   >>  >   >>  >Identifier:   >>  >    http://www.w3.org/2000/02/xmldsig#exclude-signature   >>  >   >>  >The transform excludes the ancestor Signature element of the  DigestValue   >>  >element that is being calculated. The intention is to support enveloped   >>  >signatures where the DigestValue calculation would overlap with itself.   >>   >> Petteri, the idea was that it would be somewhat elegant if we   >> specified the   >> identifier and defined its behavior using an XPath expression (the   >> equivalent of your natural language text above). That way, people   >> that don't   >> expect to implement XPath can implement the feature rather simply; those   >> that already have XPath don't have to do something special, and both will   >> interoperate!   >>   >> The challenge then is to find the XPath equivalent of your description   >> above. This seemed to be potentially tricky in that the context   >> node in your   >> description above is "the ancestor Signature element of the DigestValue   >> element that is being calculated" and if you go the XPath/XML route, it   >> isn't going to know this (what is being calculated), you just hand it  XML.   >> Then the XPath processor sets the context node at the root root, and then   >> you have to specify an expression that finds and excludes the right   >> Signature (if they are nested.) There might be a clever way to do this   >> though, and I think Boyer might've mentioned you might be able to achieve   >> this by passing arguments from a function ... ? But we concluded by  saying   >> let's give it some thought and discuss it on the list.   >>   >> At the meeting, we had agreement to include this feature in the Candidate   >> REC / Proposed Draft, I'm waiting/hoping/thinking about if we can   >> define it   >> as an XPath expression as well.   >>   >> _________________________________________________________   >> Joseph Reagle Jr.   >> W3C Policy Analyst                mailto:reagle@w3.org   >> IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/   >>   >>   >    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 23:50 5/17/2001 -0400, =?utf-8?B?5p2J5bGx44CA6auY5byY?= wrote:  >We prepare a URL to provide  more information about our implementation.    Ok, updated:           http://www.w3.org/Signature/2001/04/05-xmldsig-interop.html      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 12:34 PM 7/19/2000 -0700, Brian LaMacchia wrote:   >Since CanonicalizationMethod is now a required element of SignedInfo, I   >believe the last sentence of the first paragraph of 4.3.1 is incorrect.   >That paragraph reads:   >   >CanonicalizationMethod is a required element that specifies the   >canonicalization algorithm applied to the SignedInfo element prior to   >performing signature calculations. This element uses the general structure   >for algorithms described in section 6.1: Algorithm Identifiers and   >Implementation Requirements. The default canonicalization algorithm  (applied   >if this element is omitted) is Canonical XML [XML-C14N].   >   >Since the element is now required, I don't see why we need to specify a   >default, and the "(applied if this element is omitted)" can never happen.    Noted, the last sentence is changed to:    /+The MANDATORY to implement canonicalization algorithm (applied if this  element is omitted) is Canonical XML [XML-C14N].+/ Alternatives, such as the  minimal canonicalization algorithm (the CRLF and charset normalization  specified in section 6.5.1: Minimal Canonicalization), may be explicitly  specified but are NOT REQUIRED....      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Forwarded Text ----   Date: Wed, 19 Apr 2000 11:33:38 +0900   To: "Joseph M. Reagle Jr." <reagle@w3.org>   From: "Martin J. Duerst" <duerst@w3.org>   Subject: Re: I18N WG/IG last call comments   Cc: w3c-i18n-ig@w3.org   In-Reply-To: <3.0.5.32.20000418190721.00a08500@localhost>   Status:        ...      At 00/04/18 19:07 -0400, Joseph M. Reagle Jr. wrote:   >At 12:27 00/03/25 +0900, Martin J. Duerst wrote:   >  >The W3C I18N WG and IG have reviewed your last call draft.   >  >Below please find our comments. We look forward to collaborating   >  >with you to resolve them.   >   >Martin,   >   >Thank you (and the I18N) for the thoughtful questions, a couple quick   >questions from the point of view of understanding the comments.   >Deliberations on other comments are on-going.   >   >  >Character encoding and transcoding   >  >----------------------------------   >  >   >  >[Transcoding is the conversion from one character encoding   >  >(charset) to another.]   >  >   >  >- 'minimal' canonicalization is required, but it should be made   >  >   very clear that this does not imply that conversion from all   >  >   'charset's to UTF-8 is required. A set of 'charset's for which   >  >   support is required should be defined exactly, e.g. as UTF-8   >  >   and UTF-16. This is the same for other transforms.   >   >Why? I'm no expert as to whether this would be a good or bad thing, but I   >believe the spec does require this:   >   >         converts the character encoding to UTF-8, removing the   >         encoding pseudo-attribute   >  http://www.w3.org/Signature/Drafts/WD-xmldsig-core-200003plc/#minimal      It's the question of which *input* encodings are required.   It's clear there is only one output encoding.               >  >   As an example, using the above 'case' analogy, take a document   >  >   <root>   >  >    <amount>$10</amount>   >  >    <amount>$1000</amount>   >  >   <root>   >  >   which is modified by an intruder to look like   >  >   <root>   >  >    <Amount>$10</Amount>   >  >    <amount>$1000</amount>   >  >   <root>   >  >   and combine this with a DOM program that extracts the first   >  >   <amount> and pays somebody that much. After the change by   >  >   the intruder, the amount actually paid is $1000 instead of $10.   >   >This is just an example right? As XML is case sensitive and these would be   >different InfoItems. The more approriate (though hard to show case) is of   >character composition and decomposition.      Yes, exactly.         >  >- Section 6.6.3.3 Function Library Additions, para 2   >  >   >  >       "CDATA sections are replaced by their content"   >  >   >  >   This requires the processing to behave as if it uses the UCS.   >   >John might have already fixed this, but what are you recommending?      My guess is that this should be okay by now. I think the original   comment was based on the impression that XPath processing was   assumed by John to happen in whatever encoding the inputs were.      Regards,   Martin.     End Forwarded Text ----    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      xmldsig defined (and other security applications have adopted) the following   useful type:    <simpleType name="CryptoBinary">     <restriction base="binary">       <encoding value="base64"/>     </restriction>  </simpleType>    However, the recent Schema Proposed REC [1] eliminated the "binary" type and   creates "base64Binary" and "hexBinary" types.    I think this is a good thing in general as we did the same ourselves, but   now we have to make a decision. Signature can    1. persist with its CryptoBinary, which is now redundant and encourages the   use of another type needlessly. The definition is now:    <simpleType name="CryptoBinary">     <restriction base="base64Binary">     </restriction>  </simpleType>    2. Remove the CryptoBinary type. On the namespace issue, my rule of thumb   has been that if I'm not breaking processors or instances from one version   of the spec to the next, then there's no need to change the namespace. This   doesn't break any instances nor processors, but seems to be in a gray zone...    So we could:  A. Continue with #1 for legacy purposes but warn others to use   xsd:base64Binary when appropriate.  B. Remove CryptoBinary and change the dsig namespace.  C. Remove CryptoBinary and not change the dsig namespace.    Thoughts?    [1] http://www.w3.org/TR/xmlschema-2/#base64Binary    __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      This email is informational and includes via reference the applicability,  validity, and licensing disclaimer at [4].    PenOp is no longer active in this WG.  However, I noted that a new patent  (US6064751) was issued last month -- in addition to the already disclosed  [1] PenOp patents.    The press release is at [2] and the specification at [3].    [1] http://www.w3.org/Signature/Disclosures.html  [2] http://www.penop.com/penop/penop.nsf/htmlmedia/May_18_20001.html  [3] http://www.patents.ibm.com/details?&pn=US06064751__  [4] http://www.w3.org/Signature/Disclosures.html  Neither the IESG/IETF or the W3C take a position regarding (1) the validity  or scope of any intellectual property right or other rights that might be  claimed to pertain to the implementation or use of the technology, nor (2)  the extent to which any license under such rights might or might not be  available.   [5] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/1999JulSep/0001.html      http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/1999JulSep/0009.html  US 5544255, 5647017 and 5818955; and issued Australian Patent 688,589 and  issued New Zealand Patent 292439 [1])      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 13:36 7/24/2000 -0700, John Boyer wrote:   >The problem is that $signature-id is being set equal to the value of an   >attribute that happens to be called 'id'.  Any number of elements could  have   >such an attribute, and all could use the same 'id' value as the signature  in   >order to have themselves omitted from the digest value computed over the   >result of the XPath expression being evaluated.  Furthermore, having these   >equivalent 'id' values is permissible under non-validating XML parsers and   >also under validating parsers if the 'id' attribute is not actually of type   >ID (and we have no way of knowing this).  Hence, security risk.     BTW: This is one of the reaons why I believe this schema/DTD validity  constraint must be enforced.      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      I know this table [1] stinks [2]. I could use TH as a start, but I also have   a subheading of sorts (the type of algorithm) and I don't want to have to   add a whole column for that semantic (I prefer one row). Any suggested   alternative renditions?    [1] http://www.w3.org/TR/2000/CR-xmldsig-core-20001031/#sec-AlgID  [2] http://www.w3.org/TR/WCAG10-TECHS/#gl-table-markup    Forwarded Text ----  >Date: Fri, 3 Nov 2000 16:30:53 -0500  >From: Ken Goldman <kgold@watson.ibm.com>  >To: reagle@w3.org  >Subject: DSIG spec typos  >...  >Table in 6.1  >  >When I printed the spec, the Algorithm URI's were truncated due to the  >lines being too long.  This is probably a function of my browser, OS  >fonts, and printer.    http://www.w3.org/TR/2000/CR-xmldsig-core-20001031/#sec-AlgID          __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Hi David,    At 19:20 6/19/2001, David Brownell wrote:  > > Good point; as you can see, the text now specifies the W3C Software   > License.  > > http://www.w3.org/Consortium/Legal/copyright-software-19980720  >  >... except that it doesn't specify a particular version (such as that one),  >so again, there's a loophole.  It shouldn't be mandatory to permit W3C  >to relicense other peoples' contributions at will, as I commented before.    The hypertext version links to the dated version, I've added /+(19980720)+/   next to the text to make this clear.    > >    All it does is permit the W3C to avoid  > > confused claims of conflicted or joint ownership. (Most software licenses  > > don't even speak of ownership and that whole issue remains rather murky   > in  > > my reading of them.  >  >Introducing such new issues -- beyond issues of "who holds the copyrights"  >and "what license applies" seems to create even more problems.  What  >exactly is "ownership", as distinct from "copyright"??    See http://www4.law.cornell.edu/uscode/17/201.html .    > >    Consequently, I believe the explicitness is useful after  > > seeing work at the IETF come to a stop when a contributor was upset at a  > > decision and tried to yank his contribution from something the whole  > > community had worked on.)  >  >Hmm, that presumes the original licence grant was in fact revocable.    In that scenario there was unfortunately not a sufficiently explicit   understanding of the ownership or license of work done of the   public/individuals at the IETF. For much of W3C work this has not been a   problem since the work is done under the umbrella of the W3C membership   agreements. In my public WGs, I make sure this understanding is explicit [1]   and the IETF subsequently made it explicit in RFC2026 in 10.3.1.1 and 10.4.c   [2]. When the W3C accepts public contributions I think it's important that   we are clear of that status of contributory or derived works.    [1] http://www.w3.org/Signature/Contributor.html  [2] http://www.ietf.org/rfc/rfc2026.txt    > > The intent is not an exchange of ownership on the original work, only for  > > the W3C to own the work it derived (and license them under the same W3C  > > Software License.)  >  >I guess I still don't see why that'd be perceived as an issue.  When the  >original non-revocable license was granted, W3C (like every other  >source licensee) received sufficient rights to evolve the software as it  >sees fit, in perpetuity.  Why does W3C want to be "more equal"?    The W3C wants to protect the investment of a whole community that   contributes to a shared work. However, this has nothing to do with W3C   intent, instead the sentence on ownership communicates what happens via law.   17 U.S.C. ? 103 [3] means that the creator of the derivative work owns the   copyright on the derivative and compilation of original works, but gains no   extra rights over the original not provided by the contributing license.    [3] http://www4.law.cornell.edu/uscode/unframed/17/103.html    Recently on the open source license list the question of the necessity of   such text was mentioned [4] with differing opinions. Most open sources   licenses don't speak on the ownership issue themselves (nor does the W3C's   licences), but when it comes to the contributing license (I have the right,   there's no trademark, there's no patent, etc.) I've found the explicitness   to be very useful, as demonstrated by this thread itself!    [4] http://www.mail-archive.com/license-discuss@opensource.org/msg03044.html    --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 15:30 10/10/2000 +0100, merlin wrote:  >http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0423.html  >  >  The consensus on the call was that adding a RetrievalMethod  >  Type for a binary X.509 certificate was a good idea.    Right, it is describe in 4.4  http://www.w3.org/Signature/Drafts/WD-xmldsig-core-latest/#sec-KeyInfo      > >1. limit it to absolute URIs? (If the keys are in the same document, why   > not  > >use KeyInfo?)  >  >For example, to have a single occurence of a large X509Data and to  >then refer to it from multiple signatures.    Ok.    > >2. Permit fragment identifiers and require the same processing model as   > the  > >Reference section? I believe this was the intent and I'll clarify that for  > >the time being:  > >RetrievalMethod uses the same syntax and dereferencing behaviour as  > >Reference's URI (section 4.3.3.1) except that there is no DigestMethod or  > >DigestValue child elements and presence of the URI is mandatory; Type is   > an  > >optional identifier for the type of data to be retrieved.  >  >I think we should definitely use the same processing model; perhaps just  >have language to the effect that:  >  >   If the result of the dereference and transformation is a node set,[ and   > the  >   RetrievalMethod Type is one of the types defined in this document,] then   > the  >   node set is processed as if it were canonicalized and retrieved as a raw  >   octet stream.    Hrmm... I think I prefer to err on the side of making the RetrievalMethod   author include a specific c14n in the transform.    Ok, new text:    4.4 The KeyInfo Element  .... The following list summarizes the KeyInfo types defined by this   specification; these can be used within the RetrievalMethod Type attribute   to describe the remote KeyInfo structure as represented as an octect stream.    4.4.3 The RetrievalMethod Element  .... RetrievalMethod uses the same syntax and dereferencing behavior as   Reference's URI (section 4.3.3.1) and The Reference Processing Model   (section 4.3.3.2) except that there is no DigestMethod or DigestValue child   elements and presence of the URI is mandatory. Note, if the result of   dereferencing and transforming the specified URI  is a node set, then it may   need to be to be canonicalized.All of the KeyInfo types defined by this   specification (section 4.4) require octets, consequently the Signature   application is expected to attempt to canonicalize the nodeset via the The   Reference Processing Model (section 4.3.3.2)              __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      John, thanks for your comments. To others: this is how we improve the notes  and come to closure on the list on some fuzzy issues and give others who  weren't there a sense of what happened. So get your comments in by the 10th.    At 12:59 99/09/02 -0700, John Boyer wrote:   >1) I believe the WG decided that objectlocation would be a URI *without*   >fragment    It states that in one point, perhaps you are referring to something earlier?  (People should feel free to annotate the notes so I know excactly which text  they are referring to.)    _  Consensus. The reference from SignedInfo will just be a URI. This can then    point to a manifest or package which can use Xlink/Xptr/Xpath as  appropriate.     This means you don't have to worry about Xptr in the core  signature syntax.  _    I added "without fragID" to be clear. However, I think we need it to be a  URI or fragmentID (to a packaged chunk of XML in the same document.) Right?     >2) I believe the WG decided that the 'exclusion' element would be changed  to   >something like 'extract'.    I honestly don't recall. I'll note that in the notes as reference as we  tweak names of our elements as we move forward.     >3) I believe the WG decided that XPointer or some subset of it would   >comprise the content of 'extract' (as long as it does not change radically   >in the future).  If this is true, then its DTD entry should be changed from   >ANY to PCDATA.    Why do we need an "extract" element anway? If we are using XPtr, it would  just be part of the manifest reference, no?     >4) I do not believe that the WG decided to punt the notion of exclusion  from   >the core syntax as suggested by the minutes, nor do I believe any decision   >has been made as to what if anything should be made optional.    Since the core syntax only uses a URI, any other references would be part of  the manifest/package and should be defined there, right?     >5) There is a point in the minutes which says "Boyer raises unrelated point   >that if the canonicalizer strips out the DTDs, you won't know which   >attributes are IDs anymore."  I do not tend to bring up 'unrelated' points,   >so I hope we can refrain from terms like this going forward.    Its orthogonal to the point directly above though its highlighted because  its a good point we need to investigate. I hope people are willing to give  me the benefit of the doubt and assume incompetence instead of malice in  meeting minutes that haven't yet been reviewed by anyone. <smile>     >6) The minutes show a suggestion by Peter Norman to put a dsig:exclude   >attribute in those objects that should be excluded from a signature.  The   >group countered that this would not work for multiple signatures.  It is  not   >in the minutes, but Joseph reiterated this point the next day because it   >seems clear that multiple exclude attributes could be used to declare which   >signatures the element should be excluded from.     Again, I'm not sure what text you are referring to, but it does say:    Norman: can we do this in a simpler way, with a dsig:exclude attribute?  Which requirements does Xptr meet that can not be met through an easier  method? Group: The insertion of dsig:exclude is problematic when you have  multiple signatures, how does which signature know which dsig:exclude  belongs to it.    I added             Boyer also asserts this adds security problems in that it requires  modifications           to the signed document. (see Boyer 1990902 for more.)      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      I don't think I completely understand the problem yet. Is this to say that    1. the content model for KeyName should be precluded from having a   white-space as the first or last character? (Not sure if this is possible   using XML Schema patterns [1] since they don't support ^ and $.)  2. That a processor will not have those white spaces available to them?   (What happens if people want to use generic xml tools like query or XPath   where the whitespace is preserved/important)    [1] http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#element-pattern    At 22:18 5/14/2001 +0100, merlin wrote:  >Agreed. DNames already have this property (from RFC 2253 I think),  >and I believe so do base-64 coded data as well as integers, so  >this would unify pretty much all of our text handling.  >  >merlin  >  >r/dee3@torque.pothole.com/2001.05.14/14:35:23  > >Hi,  > >  > >Some questions have arisen about in the XML Encryption activity the  > >handling of white space in the content of the KeyName element. There  > >was substantial feeling there that leading and trailing whitespace  > >should be stripped from KeyName content.  I think this would be an  > >improvement but since it is in the XMLDSIG namespace, this list is  > >the right place for discussion.  What do others think?  > >  > >Thanks,  > >Donald  > >=====================================================================  > > Donald E. Eastlake 3rd                      dee3@torque.pothole.com  > > 155 Beaver Street                                +1 508-634-2066(h)  > > Milford, MA 01757 USA                            +1 508-261-5434(w)  > >  >  >  >-----------------------------------------------------------------------------  >Baltimore Technologies plc will not be liable for   >direct,  special,  indirect  >or consequential  damages  arising  from  alteration of  the contents of this  >message by a third party or as a result of any virus being passed on.  >  >In addition, certain Marketing collateral may be added from time to time to  >promote Baltimore Technologies products, services, Global e-Security or  >appearance at trade shows and conferences.  >  >This footnote confirms that this email message has been swept by  >Baltimore MIMEsweeper for Content Security threats, including  >computer viruses.  >    http://www.baltimore.com      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      Martin, this is my attempt to definitively respond to the last of your  issues.    At 12:27 00/03/25 +0900, Martin J. Duerst wrote:   >Character encoding and transcoding   >----------------------------------   >[Transcoding is the conversion from one character encoding   >(charset) to another.]   >   >- 'minimal' canonicalization is required, but it should be made   >   very clear that this does not imply that conversion from all   >   'charset's to UTF-8 is required. A set of 'charset's for which   >   support is required should be defined exactly, e.g. as UTF-8   >   and UTF-16. This is the same for other transforms.   >   >- There should be a clear and strong warning and an official   >   non-guarantee in the spec about conversions from legacy   >   'charset's (i.e. encodings not based on the UCS) into encodings   >   based on the UCS (i.e. UTF-8, UTF-16,...). The problem is   >   that while for most 'charset's, all transcoder implementations   >   produce the same result for almost all characters in these   >   'charset's, the number of 'charset's where all transcoding   >   implementations behave exactly the same is rather limited.   >   As an example, in "Shift_JIS", the 'charset' used on Japanese PCs,   >   about 10 to 15 special characters are transcoded differently   >   on Windows, on the Mac, and by Java.   >   >- Part of the above warning should be to recommend UTF-8 and UTF-16   >   to be used for the original documents, and to recommend to use   >   numeric character references (e.g. ꯍ) for cases where   >   differences are known.    The specification does not contain either of these recommendations yet.  Absent specific text that could be proposed in our specification, I (as one  of the editors) don't feel I have the expertise to treat this topic with the  appropriate breadth and depth (and no proposals have been forthcoming on the  list) that you have -- beyond what I've already responded to in previous  emails and what I speak of below. Also, I wonder to what extent is it  optimum to write a NFC verification algorithm (or algorithm ID) within the  Signature specification. Much of this is independent of Signature and common  to all XML, we are just one of the first consumer that are affected by this.  Consequently, I hope our response has been sufficient and I expect we will  be making further improvements as time permits and we encounter difficulties  in achieving interoperable implementations, but I also hope to see these  issues more generally addressed as part of [1,2].    [1] http://www.unicode.org/unicode/reports/tr15/   [2] http://www.w3.org/TR/charmod/     >However, thanks to one of the members of our WG, Masahiro Sekiguchi,   >we have discovered the following security problems:   >   >- If NFC is applied before digesting, this gives a higher chance   >   that an attacker may find a document with the same digest by   >   chance, simply because a larger number of documents is ultimately   >   mapped to the same digest. While this potential should be mentioned   >   in the security section of your document, the low frequency   >   of accented and other relevant characters and the irregularity   >   of the transforms seem to make this a rather minor problem.   >   >- Assume that a document contains XML with element names with   >   accented characters. Assume that this document is correctly   >   normalized. Assume that the signature includes NFC as a transform.   >   Now the following attack is possible: An intruder replaces the   >   normalized document by a document with some of the element   >   names unnormalized. The signature still works. However, an   >   XML/DOM processor or an XPath expression may (and in practice   >   will) work differently, because the unnormalized element is   >   assumed to be different from the normalized one.    As we are not specifying this transform yet, we don't make this comment.  However, we do point out that ANY transform has the potential to be  dangerous.      >The above considerations have led us to the conclusions below.   >We hope that you can help us with your experience on security   >issues to check them.   >   >- Make sure that the transforms defined do not *require* NFC.   >   (any XML processor, and any transforms based on it, are   >    always *allowed* to to do normalization, see the definition   >    of 'match' in the XML spec).   >   >- Provide a transform that *checks* for NFC. The transform   >   fails if the input is not in NFC. If the transform succeds,   >   the output is exactly the same as the input. [this is a bit   >   different from the average transform, but fits very well   >   into the general model].   >   >- Advise users (and provide examples) to use this transform   >   after e.g. Canonical XML, to avoid missing interactions   >   between numeric character references and NFC.   >   >- Advise users to provide their data in NFC (just to reinforce   >   the general recommendation), and stress the importance   >   of this in the context of digital signatures.   >   >- Provide a transform that actually does NFC, for cases   >   where this is desirable, but add the necessary warnings.    Text in 7.0 will now read:    Any canonicalization algorithm should yield output in a specific fixed coded  character set. For both the minimal canonicalization defined in this  specification, the W3C Canonical XML [XML-C14N], and the 2000 Canonical XML  [XML-C14N-a], that coded character set is UTF-8. Additionally, none of these  algorithms provide data type normalization. Applications that normalize data  types in varying formats (e.g., (true, false) or (1,0)) may not be able to  validate each other's signatures. Neither the minimal canonicalization nor  the 2000 Canonical XML [XML-C14N-a] algorithms provide character  normalization. We RECOMMEND that signature applications produce XML content  in Normalized Form C [NFC] and check that any XML being consumed is in that  form as well (if not, signatures may consequently fail to validate).    Again, thank you for the I18N comments!      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 11:48 99/08/24 -0400, Phillip M Hallam-Baker wrote:   >Nobody is arguing against support for c14n FOR THOSE APPLICATIONS WHICH   >NEED IT.    The question here is one common of specifications that are unclear of what  they are specifying things over. I try to be specific with each requirement  in the RD, and preface it all in the abstract by saying, "It includes  requirements as they relate to the signature syntax, data model, format,  cryptographic processing, and external requirements and coordination." Quite  a lot, but necessary. (And one that could use improvement.) This issue is:  are we willing to specify an application-feature requirement? While this  isn't necessary for ensuring intoperability over the wire, people sometimes  add these because not being clear about the features an application will  support (if optional) is a disservice to the implementors. I'm not going to  use a feature, if I'm not confident other people will implement it.  Sometimes you let it evolve through extensibility, sometimes you need to  align the implementors expectation's over the feature set at the start to  get a critical mass of usefulness.      So, for this issue:    Acknowledged: there is no requirement to use c14n for signature generation  -- we can finish the discussion on the signature itself next week.  Questioned: even if not, is there an requirement that Signature applications  have a normative c14n algorithm handy in case the sender uses it? Philllip,  are you opposed to using it in your signature generation and/or having to  implement it regardless?    I suspect this is a case that if we don't have a mandatory to implement,  then we will have lots of signatures that won't interoperate (or no one will  c14n). If we do have it, the use of the c14n will spread according to its  usefulness. I don't think the first case is one many people would be happy  with; the second case requires more work, but can make everyone much happier.      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

        John's alternative approach to C14N (in XPath instead of InfoSet context,  though the results aren't that different aside from the changes we  explicitly discussed) is at:    http://www.w3.org/Signature/Drafts/WD-xml-c14n-20000601.html    I think it would be best to get comments from folks in this WG before  forewarding it to the attention of the larger community (though I'd like  to do that ASAP).        

      At 12:41 6/12/2001, Donald Eastlake 3rd wrote:  >The second is a replacement for Section 7.3: Namespace Context and  >Portable Signatures.  >  >While I have more or less followed the trend of recent discussion in  >editing these sections,  the more I think about it the more it seems to  >me that, unless it mandates the implementation of a canonicalization  >that substantially divorces the canonicalizaed XML from its context,  >XMLDSIG fails to provide interoperable signatures for protocol applications.    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/att-0267/02-SigPorta.html    What is the proposal? That we delay the advancement of the xmldsig spec for   the advancement of a "repulsive canonicalization"? Getting the interop would   probably be relatively easy if there's interest -- while Merlin identified   the issue I'm not sure how he or other implementors feel, and some kibitzers   such as myself feel that enveloping/detachment is up to the enveloping   specification! Process wise it would probably take longer, an Informational   RFC on the IETF side and a REC on the W3C, just to advance the main spec   still. In either case, when I'm not sure it's necessary to be REQUIRED and   I'd like the spec to advance this month, I'm not keen to see this delay. How   do other people feel?    >2. ... While this is simple, it is not, in general, interoperable.    I don't agree. For example, if you have two implementation of an envelope   application, if that application specified how to detach the payload they   will interoperate perfectly, right?    >3. The SignedInfo element presents a special problem  >which distinguishes it from general XML data. Due to the sensitivity  >of SignedInfo, Transform operations over  >it are not provided, only CanonicalizationMethod, and great  >care must be taken to only use safe caonicalizations of SignedInfo.    I'm not sure this is necessary. This spec is supposed to be relatively   mature and we decided not to do transforms (and this isn't an application   has an option for) so I don't see a requirement to introduce that issue.    >One is a replacement for Section 4.3.1: The CanonicalizationMethod  >Element. It adjusts it for the removal of MinimalCanonicalization from  >the document and has an added security warning about allowing arbitrary  >CanonicalizationMethod functions.    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/att-0267/01-CanonMethod.html    1. This text was "adjusted" for removal of minimal but still needs to speak   of what to do for character based canonicalization methods. Even though we   don't specify one, they can be used and in either case we have to say how   the SignedInfo element is presented to that algorithm as characters or nodes.  2. On the cautionary NOTE, I think this text is valuable and reminds me of   the text found in the processing rules which explains why you should   canonicalize your references before validating them as the canonicalization   method could've changed them. So I made some links between this text.  3. (Editorial: Not sure adding "Although technically outside" to the   (previously) last paragraph adds anything but verbosity. We can lowercase   the RECOMMEND if you want.)      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      http://www.w3.org/Signature/Minutes/991202-tele.html    Participants         * Donald Eastlake 3rd, IBM       * Joseph Reagle, W3C       * Mark Bartel, JetForm       * John Boyer, UWI       * Ed Simon , Entrust Technologies Inc.       * John Boyer, UWI       * Barbara Fox, Microsoft       * Todd Vincent, GSU       * David Solo, Citigroup (regrets)      Review of Outstanding Action Items        Status of documents < 5 minutes       Requirements Document: As it is being proposed as an InformationalRFC,     it need not be IETF last call. Schiller reports he will bring it up to     IESG and expects action within a few weeks.       Core Syntax and Processing: Solo's been working on editorial issues     and clean up, will post something Thursday or Friday. Editors will     then try a slight re-org to try to provide clarity between     cryptographic syntax/processing and ObjectReference syntax/processing        Signature Syntax & Processing draft questions:      Securing Location/Transforms - < 20 minutes      Levels of indirection, Manifests, References, ...       Reagle: (working backwards):       * IETF/W3C Last Call end of January       * WG Last Call beginning of January       * Editors work on exposition/clarity as much as possible for January         last call such that we can take a stroll poll, address questions,         and document minority views on the basis of concepts rendered         clear (instead of ambiguities in the text.)       * Accrue implementation experience and possible interop testing.       Fox: XPath discussion has perhaps got us off the target, need to focus     on the specification and interoperable syntax and protocol. Getting in     to behavior can get confusing.       Bartel: realized that XPath is used for two things:      1. sign an ancestor of the signature element.      2. programmatic document definition       Boyer: The present spec fulfills his needs. Ways to do what Himes     needs to do to as well, just not in the core behavior/standardized.       [... light discussion/review no proposals or action items....]       ACTION Fox: will check with David about the Algorithm section and     perhaps make another pass through.        Con call restart next year. < 5 minutes       Editors should focus on clarifying the present spec.       Have the call on the 9th and 16th, Eastlake will notify if he doesn't     think we need a call that week.       Otherwise, start back up on January 6th        Face to Face meeting arrangements < 10 minutes       January 21 Friday after the RSA conference. Need to get details from     Rags and post by end of week.          _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 12:43 00/01/20 -0500, Smiley, David wrote:   >Same goes for me. Snow storm out east     Ok, thanks for letting us know. (My fingers are crossed such I escape the  storm before it hits Boston in a big way.)    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      http://www.w3.org/Signature/Minutes/990820-tele.html        XML Signature    WG        99-July-22      Chairs: Donald Eastlake and Joseph Reagle      Note Taker: Joseph Reagle [ascii]        Participants                *Donald Eastlake 3rd, IBM               *Joseph Reagle, W3C               *David Solo, Citigroup               *Phillip M Hallam-Baker, VeriSign Inc               *John M. Boyer, UWI.com               *Ed Simon , Entrust Technologies Inc.               *Brian Lamachia, Microsoft               *Mark Champine, Iris               *Todd Vincent, GSU               *Peter Norman, FactPoint,               *Bob Relyea, Netscape         Notes:                Reference Documents:                    http://www.w3.org/1999/08/xmldsig-requirements-990820.html                   Drafts/xmldsig-scenarios-990818.html               Resulting Document:                              Review Outstanding Action Items                Requirements Going to Last Call shortly.               FTF details/confirmation.               Canonicalization (should reagle collect and send              comments and start discussion?)               Status of scenarios?               Discussion of Syntax proposal, how to create a first              draft prior to FTF?               Data Model (Reagle should have a data model              proposal by tomorrow)Open: Working Group         Agenda and Open Issues        Core Syntax Proposal                Seem to have convergence in that manifest is merely              one case of some object that you are signing. For              packages and manifests, we define additional              constraints, other XML content is processed              according to c14n, scripts, or XSLT, for encoded              content, it's still XML just CDATA.               Should keyinfo be part of the signature? David: The              goal should be that having it outside gives you the              option of not having to have it part of the signature              (For instance, the key has some ephemeral type of              information not relevant to that signature (like email              addresses in PGP.) Lamachia: that keyinfo might be              carried by the protocol, and known by the application               Removing selections of XML. Should the ability to              preclude sections be a mandatory to implement              feature/requirement of selection/c14n. Peter Norman              is proposing a dsig:element by which it can be              inserted into XML and reference a section but              ignored by the signature c14n algorithm.         Scenarios Document                Everyone should have a look at the latest. Himes              proposed two more (How to sign the binary form of              an encoded attachement, and how to protect against              the collision ID of combined XML in a package.)         Data Model                Reagle will post graph and explaination tonight,              should post resulting syntax tomorrow. Work with              Solo into integrating it into that proposal.         Carry-Over and New Action Items                 Winchel: post definitions prior to FTF.               Action: Joseph: collect readings for FTF by end of              next week.               Action: Joseph: add comment on John's request              about exluding things to RD.               Action: Joseph: send fragment identifier as MIME              type to Peter.               Action: Solo: new version of syntax by mid week.               Action: Boyer: put Richard's two points into the              document.       _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      Minutes from the meeting are now available off our WG page. Please let me  know if you believe something is not accurately reflected.  Many thanks to  Peter Lipp for a nice job -- not too little, not too much, just right!    http://www.w3.org/Signature/Minutes/990713-oslo.html                   [1]XML Digital Signatures WG Meeting 99/07/12-13                                              All the slides presented by any presenter are available from the WG's     website - only relevant discussion is noted     here.       * [2]Reagle's Slides [[3]Notes]       * Brown's Presentation (Similar to [4]workshop).       * Fox and Solo's proposal (Will be posted to list shortly).             Resulting Action Items:           * Working Group Members to review comment         (http://www.ietf.org/internet-drafts/draft-ietf-xmldsig-signature-         comments-00.txt)       * Don Eastlake/Joseph Reagle to propose a time for conference calls         within a week       * Don Eastlake to fix date and place for face to face meeting       * Joseph Reagle produce another version of requirements document         based on comments for consensus poll within 1.5 weeks.       * Joseph Reagle to define how many documents are required and         author/editor policy within 1.5 weeks.       * Working Group Members to review canonicalization document when         posted in two weeks.       * Dave Solo to post Solo/Fox proposal       _________________________________________________________________          Date:            July 12 1999                 Notes Author:            Peter Lipp (tweaked and HTMLized by Reagle)                1.AGENDA BASHING (5M)         No discussion.         2.JOINT WORKING GROUP STATUS (10M)         This was the first meeting of the first joint W3C/IETF WG. Joseph     Reagle (JR) and Don Eastlake (DE) presented     the "history" of this WG. From the process point of view, regular     conference calls are planned besides meetings at     the IETF's and someplace in September.          Paul Hoffman (PH): are those Conference and Meetings calls design or     process meetings?     DE: Conf.Calls for status and ad-hoc technical discussions, face to     face for substantial work. But WG can decide.         3.REQUIREMENTS (45M)         Joseph presents requirements document.     Mary-Ellen Zurko: what is meant by validity of a signature: valid now     or court-validity.     David Solo (DS): this is external to the draft.     Semantics: only simple meaning - no trust semantics. Extensibility.     Bob Blakeley: is concerned about the semantics extension mechanism.     Those have to be protected too.     JR: reason to push semantics out of scope: let other people define     semantics.     Paul Lambert (PL): concurs, push semantics off even further,     concentrate on crypto-validity and make sure we do     this all the way correctly.     No specification of serialization or canonicalization:     DE: necessary for interoperability. Need not too many of them, but not     exactly one at least. Extensibility necessary and useful.     Eric Rescorla (ER): options confuse security semantics.     DE: canonicalizers can also remove information. NULL-canonicalizer     will also be useful.     DS: 2 places for canonicalization: canonicalization of the structure     we create, canonicalization of the resources.     Different. Canonicalization ensures: (a) given valid XML-document -     produce single strong-representation (b) defer     unique string-encoding for semantic value represenation.     Bob Blakeley: Canonicalization algorithm must not be able to     manipulate content. NULL is fine, others might not     be. Constraints required - guidelines.     ER: Canonicalization algorithm must be included into the signature.     XLink: JR: XPointer provides for alot of ambiguity.     PH: be explicit about if the thing some XLink points to is included     within the signature or not. Ambiguity!     ER: Iffy proposition to allow different Canonicalization-Algorithms     with different security properties. Users don't     see the difference - see key-symbol in Netscape for SSL. Programmers     make mistakes like that too.     DS: suggest to profile XML for use in browser to restricted choices     but not generically. Application problem.     PH: profile XLink/XPointer is fine, XPointer itself too generic     Implementation Philosophy     JR: do you want OID's? DS: unambiguous way to say what we mean (either     URN or OID)     Ryan Boats ATT (sp?): Michael Meally, NSI has done some work on URN's     for OID's     Crypto:     Specify a few mandatory algorithms for interoperability     PL: why have key exchanges and push of encryption? Controversial     requirements     Richard Brown (RB): no redefinition of these schemes. If people use     DH-credentials they shall be able to use it (also     for other symmetric stuff)     PL: different properties for different algorithms. This is a slippery     slope, maybe better move into separate     documents.     DE: gets nervous by hearing "management" or "negotiation". Just by     allowing secret keys - maybe call it something     else than a signature.     RB: we need to provide people with a solution, like UOTP has symmetric     stuff in the first proposal.     PL: the diversion of validity and trust is not clear yet. Be careful!     Discussion about inconsistencies of info within a BLOB (such as CMS)     within an XML-signature and info within     the XML-structure deferred until a better understanding is aquired.     Christopher Smithies: points out importance of packaging all necessary     info (intention, time, id, signature) which is     what products by Penop do. Worth while replicating some of that info     in the outside structure.     Coordination     PH points out the importance of internationalization issues and     coordination with the internationalization WG         4.SIGNATURE SYNTAX (45M)         JR: Brown-Draft not a product of the WG, but possible to get there.     RB presents his proposal.     Bob Smart: is there an option to put in the public key or only a     reference to it using the DN?     RB: Not bound to that. Originator info might offer different ways. One     common way needed.     Denis Pinkas: can attribute certificates be included?     RB: could be accomodated within the credentials within the originator     information section.     Denis Pinkas: no provision to support non-repudiation (e.g. include     timestamp)     RB: not part of spec because not necessarily part of signature     process.     JR: we don't support non-repudiation     DS: we neither support nor not support it.     Stefek Zaba: incorporation by reference - what if hash of resource     does not verify?     RB: application level problem, signature verifier verifies only     manifest signature     SZ: this needs to go into the draft     Presentation of an evolutionary, non-counter-proposal by DS (co-edited     with Barb Fox)     No attributes within that proposal.     DE: how to stop people from putting attributes within the resources?     DS: we don't want to stop them. An attribute is just a resource -     uniform syntax.     [Reagle: later, we may wish to create restrictions as to the type of     "invasive" semantics people can introduce using namespaces.]     ER: what would you specify from the hash standpoint?     DE: calculation of the hash of the manifest. Calc of hash of resource     is resource-dependent. Signature validator logic     never verifies that     PL: we need to touch on semantics. Multiple signatures could be     interpreted in different ways. Must be described     well to know what it means.         5.FIRST CONSIDERATION OF CONFERENCE CALLS AND SEPTEMBER    FACE TO FACE MEETING (5M)         DS: potential partitioning of the problem-space might influence that     decision.     DE: suggest a meeting on the west coast for geographic diversity.     Meeting adjourned.       _________________________________________________________________          Date:            July 13th 1999                 Notes Author:            Peter Lipp (tweaked and HTMLized by Reagle)                Syntax         DS presents a slide sketching a more formal version of an alternative     syntax proposal.     Open problems are       * whether to allow a bag of attributes as part of ressources and         signature block       * keying info; could contain certificates and references to them,         symmetric key id's, key agreement exchanges etc.              Proposal will be summarized and sent to the list.          Q: David Burdette: should there be defaults like a default hash or     canonicalizer for all ressources to avoid repetition?     ER: saving a few bytes not worth it     Chr. Smithies: how to make clear what was within the original document     and what has been added during the signature process     DE: Semantics could go into the attributes     JR: no, semantics of signatures are statements and should go into the     resources. [Reagle hindsight clarification: properties of the     signature of the signature itself can be considered properties, but     the manifest attributes are a resource themself.]     Michael Myers: should the keyinfo be a subsection of the document or     separate document(s)     DS: not sorted out yet     ER: is one-pass processing planned? Would be a nice feature     DS: not sorted out yet     RB points out that removing attributes from this proposal we would end     up with something quite similar to the current specification     DE: open question if users should be able to insert arbitrary     attributes     Don Smith: reminds us of things we went through in PKIX; lets have     something where people can put in things otherwise those will come up     later anyway. Poll: no oponents.         Canonicalization         Joseph presents draft of W3C-XML group (not publicly available at this     time).     Comments to the list.         Logistics         Roughly 16 people would come to a September meeting. Offers available     from Micrsoft and UC-Irvine. Suggestion Aug 30/31.          Conference Calls every other week, starting in week 30.     RB points out that there is a separate comment document, input on this     sought.    References       1. http://www.w3.org/Signature     2. http://www.w3.org/Talks/1999/0712-ietf45/     3. http://www.w3.org/Talks/1999/0712-ietf45/all.htm     4. http://www.w3.org/DSig/signed-XML99/present/brown.ppt      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      http://www.w3.org/Signature/Drafts/WD-xmldsig-core-19991207.html      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Ok, I've made this change to the editors' copy and will be in the next   version barring subsequent correction/comment.    At 14:25 9/21/2000 -0400, tgindin@us.ibm.com wrote:  >      Assuming that this is the DigestInfo type referenced in RFC 2437  >section 9.2.1 (and it looks like it should be), Steve is correct that the  >inner sequence only covers the OID and the NULL, but not the OCTET STRING,  >and so its length is indeed 9 rather than 31.  >  >           Tom Gindin  >  >From: "Steve Wang" <steve.wang@chromatix.com>  >In the section 6.4.2 of the current XML DSIG documentation, it says that  >the prefix is hex 30 21 30 1F 06 05 2B 0E 03 02 1A 05 00 04 14  >  >I just wonder if it should be hex 30 21 30 09 06 05 2B 0E 03 02 1A 05 00 04   >14, i.e.,  >the byte 1F should be 09.        __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 12:06 99/09/07 -0700, John Boyer wrote:   >_   >>Consensus. The reference from SignedInfo will just be a URI. This can then   >>  point to a manifest or package which can use Xlink/Xptr/Xpath as   >>appropriate.     This means you don't have to worry about Xptr in the core   >>signature syntax.   >Perhaps I misunderstood what that meant.  Did you just mean that we could   >punt the problem of having to make up a syntax for exclusion?  Please   >clarify.    For the core syntax yes.     ><John>   >Actually, this wasn't my interpretation of what was said at the FTF nor is   >it reflected in the post-FTF Solo syntax.  The signedinfo contains a   >signedobjectreference, which includes a transformations element, which   >includes the exclusion functionality (which we are proposing would use some   >form of Xptr).  Also, this is why I've been under the impression that this   >would be part of core syntax.   ></John>    This was not my understanding, but you are right the latest Solo reflects  your position. I was rather please we would be able to push XPtr into the  manifest spec (since I figure XPtr is part of the manifest reference) and it  would make the core syntax all the easier to implement quickly. Perhaps I  was mistaken.     ><John>   >I think that we need some way of indicating partial documents so we can   >indicate, for example, the packaged chunk of XML in the same document, but   >we seemed to get into muddy waters when we allowed fragmentID to be part of   >the URI rather than using the Xptr transform (which can do inclusion as  well   >as exclusion logic).    From my understanding, XPtr transformation IS a fragment identifier, but we  can discuss this since I haven't seen  your proposal of how to use XPtr in a  "extract" tag, nor since my memory of what happened is clear. <smile>  Regardless, I would like (and what I thought! <smile>) was that the  (objectreference:location := URI-sans-fragment |  fragment-to-elements-of-type-ID) and the manifest reference was a URI  including Xpath/XPtr.     >As a quick reminder, if you go back to fragID, here are some problems to be   >faced   >1) every signed XML app will have to be a validating XML app since the DTD   >must be processed to figure out the ID.    I believe some people disputed this.     >4) Asymmetry between direct signature and indirect signature via manifest.   >A manifest method would have powerful means of filtering the XML, but   >requires the app to validate the document itself.  The direct signing  method   >validates the actual object being signed, but if you removed XPtr, it would   >not have very powerful means of filtering.    Agreed, I fear XPtr is too much at the core level, but I'm happy to be told  otherwise.     ><John>   >Actually, that's a great question!  I was all in favor of this approach   >myself until Milt Anderson burst our bubble (and rightly so!) by pointing   >out that it may be necessary to do transforms such as base64 decoding  before   >we apply the Xptr.  Kudos Milt!   ></John>    Well, we need to get the order of that stuff right regardless, should be  specified in the spec.   >Peter Norman's actual suggestion was actually more sophisticated.  He   >proposed having a special element to mark regions to be signed by each   >signature.  The marker elements would be dropped out of the signature, but   >they bracket the regions that should be signed.  However, since this is a   >positive (inclusive) method, rather than an exclusive one, it still loses   >the document closure battle. (In partial answer to the question of what do   >the Xptrs do that the proposed idea doesn't do).    Understood.      _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      Colleagues,    I'm wrapping up my action item from last week [1] and will start the process for updating the WD and ietf-draft of the requirements document [1,2] and then asking the IESG that it publish the draft as an Information RFC.    [1] http://www.w3.org/Signature/Minutes/990930-tele.html  [2] http://www.w3.org/Signature/Drafts/WD-xmldsig-requirements-991012.html  [3] http://www.w3.org/Signature/Drafts/draft-ietf-xmldsig-requirements-02.txt    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://w3.org/People/Reagle/        

      At 19:45 10/8/2000 +0100, merlin wrote:  >4.4.4 The X509Data Element:  >  >The commented distinguished names in the example are  >backwards; in text form they should go from CN to C,  >as the non-commented distinguished name does. Also  >the intermediate cert says "... issuer ,C=..." which  >might be better expressed as "...;<br>issuer C=..."  >or somesuch.    Now reads:        </X509Data> <!-- certificate chain -->        <!--Signer cert, issuer CN=arbolCA,OU=FVT,O=IBM,C=US, serial 4-->        <X509Certificate>MIICXTCCA..</X509Certificate>        <!-- Intermediate cert subject CN=arbolCA,OU=FVTO=IBM,C=US             issuer,CN=tootiseCA,OU=FVT,O=Bridgepoint,C=US -->        <X509Certificate>MIICPzCCA...</X509Certificate>        <!-- Root cert subject CN=tootiseCA,OU=FVT,O=Bridgepoint,C=US -->        <X509Certificate>MIICSTCCA...</X509Certificate>      </X509Data>        __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        John, I agree that any characterizations of Canonical XML as broken are   incorrect. Canonical XML does two things and does them well: it decides   which nodes of a parsed XML (in the XPath data model) via its default XPath   expression (as parameterized with or without comments) and how to serialize   the resulting node sets. When combined with generic XPath functionality, it   can serialize anything! <smile/>    I've often said there is no single "The Canonical XML" because different   applications will need different things. In it's default XPath expression,   the Canonical XML purposefully and wisely uses its ancestor context.   However, this is not always appropriate to the enveloped protocol scenario.   That's fine! While we did consider permitting arbitrary XPath transforms on   SignedInfo, many people were concerned that such flexibility over that data   was too much, and instead, we would rely upon the careful specification   of  standardized canonicalization algorithms (instead of user specified   XPaths) that have a well specified data-model/node-section and   serialization. Canonical XML 1.0 is one such algorithm that's made it to   REC, but there could be others. And this is exactly what we are considering   now -- amid concerns about dependencies and timing. And because of Canonical   XML's design, this is technically very easy: defining a different   canonicalization using a slightly different node set selection but exactly   the same serialization method!    At 14:42 6/20/2001, John Boyer wrote:  >Suppose we add an XPath element to the Signature element as a sibling of  >SignedInfo.  The XPath would say how to filter the SignedInfo.  The  >processing model would then say:  >  >1) Form a node-set consisting of the entire subtree rooted at  >SignedInfo, including namespace and attribute nodes.  >  >2) Apply the XPath expression.  >  >3) Add the subtree rooted by the XPath element in Signature, including  >attributes and namespaces.  >  >4) Send resultant node-set to C14N.  >  >5) Sign result.  >  >End of story.  Full stop to conflict.  Thanks for coming out.      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 13:07 99/10/28 -0700, John Boyer wrote:   >I just wanted to briefly comment on this.  The problem addressed in  Andreas'   >email is what happens when an externally validated resource moves from one   >location to another.     I just wanted to address this point in a round about way. In order to be  rigorous in our semantics I think of what we are doing in terms of  assertions. I suspect people are going to buy themselves a lot of trouble  for things like URIs, HTTP, mirroring and caching if they don't do the same.  I tried to tease out some of the assertions back in August [1], but wanted  to restate what I think an ObjectReference states with my present  understanding [2]. Object Reference includes 3 assertions:             1. Each Resource has a Location of "URI"          2. and each Resource has Transformations performed over the               dereferenced URI content.          3. and each Resource has an associated DigestValue resulting              a digest value being applied to the dereferenced URI content.    It seems you might be saying that there is some content (byte stream) that  has one or more URIs. This is a different way of looking at the problem and  I can see this point of view, and to that end I think our term "Location" is  a misnomer since it references a URI, not necessarily a URL. If people  wanted to associated a resource with a URN and the means of dereferencing  that URN to derive the content is defined elsewhere, fine. If they want to  associate some sort of remapping, or query/resolution with a URL to do the  same, fine.     I think Andreas's point was that there are four meta-assertions (that might  incude others) we could make, and should we provide the syntax to express  them.    I'd opt for one:     >1) Use Don's proposal indirectly by pushing these problems off to   >application processing rules.    It is not _our_ job to redefine or reinvent URI, URN, or URLs or ways of  doing indirection/redirection over them. Maybe my take on this is wrong, and  if so I would ask what exactly is the set of assertions associated with the  other proposal?     [1] http://www.w3.org/Signature/Drafts/xmldsig-datamodel-19990819.gif  [2] http://www.w3.org/Signature/Drafts/xmldsig-datamodel-19991029.gif  [3]  [4]     _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      The following have indicated (via email or voice) that they wil be attending  the meeting. If you haven't let us know that you are coming, please do so by  April 12th.    Mark Bartel, JetForm Corporation   John M. Boyer, PureEdge   Donald Eastlake 3rd, Motorola   Barb Fox, Microsoft   Mack Hicks, Bank of America  Gregor Karlinger, IAIK  Joseph Reagle, W3C   Ed Simon , Entrust Technologies Inc.   David Solo, Citigroup       _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        The Call for Implementaion Period for Canonical XML closed on November 24th.   An InformationalRFC as well as a new Candidate Rec (for consideration for   Proposed Rec) is being prepared. Changes made include those resulting from   comments [1,2,3], no change was made with respect to [4].    However, in order to successfully advance it to Proposed Rec, it'd be good   in we could fill in some of the gaps in the interop-report [5]. (Petteri and   Merlin, can you report on the list the status of your implementations with   respect to these questions about the parsers treatment of encoding and   relative URIs?)    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000OctDec/0094.html  [2] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000OctDec/0196.html  [3] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000OctDec/0208.html  [4] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000OctDec/0163.html  [5] http://www.w3.org/Signature/2000/10/10-c14n-interop.html    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 12:37 2000-05-22 +0200, Gregor Karlinger wrote:   >In section 5.2 "The SignatureProperties Element" we   >define the type identifier for signature properties:   >   >  Type="http://www.w3.org/2000/02/xmldsig#SignatureProperty   >   >My question now is: What is the actual data this type   >identifier qualifies? Is it the enveloping <SignatureProperties>   >Element, or is it a single <SignatureProperty> child Element,   >as the name of the type identifier suggests?    I don't think I can speak very well to the functionality or requirements of  this feature, but I believe the spec says the actual data referenced is the  thing pointed to by a Reference. Kind of awkward I agree... good ideas are  welcome!         http://www.w3.org/TR/2000/WD-xmldsig-core-20000510/#sec-Reference      4.3.3 The Reference Element       The optional Type attribute contains information about the type of     object being signed. This is represented as a URI. For example:       Type="http://www.w3.org/2000/02/xmldsig#Object"     Type="http://www.w3.org/2000/02/xmldsig#Manifest"     Type="http://www.w3.org/2000/02/xmldsig#SignatureProperty"       The Type attribute applies to the item being pointed at, not its     contents. For example, a reference that identifies an Object element     containing a SignatureProperties element is still of type #Object. The     type attribute is advisory. No validation of the type information is     required by this specification.    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Reviewers: Don Eastlake and Joseph Reagle    http://www.w3.org/TR/2001/WD-charmod-20010126/    We're very glad to see this specification advanced as it is a very  useful reference -- and educational tool for understanding issues of  chracter representation. Consequently, our comments are mostly editorial  and relate to confusions experienced as a reader. A few references  are made with respect to sections that relate to XML Signature, but  these issues have been largely addressed by the last call of the XML  Signature WG's documents: Core and Canonical XML.    __    1.1 Goals and Scope       All W3C specifications have to conform to this document (see section       [57]2 Conformance). Authors of other specifications (for example, IETF       specifications) are strongly encouraged to take guidance from it.    As an aside, while we strongly support this goal, this sort of requirement is  atypical and maybe should sit somewhere else in part of the W3C  process/guide which is capable of enforcing it?    __    3.1.2 Units of a Writing System, and Units of Aural Rendering    Please define phoneme, (as distinct from meaning), and syllabaries.    __    3.1.3 Units of Visual Rendering  [Unicode] requires that characters are stored and interchanged in logical  order.    Please define "logical order" (or cite definition). Presumably it means  the order in which the characters are read by a knowledgable person  which is independent of the order they are printed which could be left  to right or right to left depending on language or even either at the  choice of the writer for some things like Egyptian hieroglyphics.    __      3.1.5 Units of Collation  Software developers MUST NOT merely use a one-to-one mapping as their  string-compare function, as in sorting operations.    What are you suggesting they do? Relying upon human context to determine  order seems rather haphazard. For instance, how do you sort the words in an  English document which contains excerpts from a Spanish document containing  sequences such as "ch" and "ll" which are considered atomic collation units  in their native document, but not the document in which they are in?    __    3.2 Digital Representation of Characters  3. To enable use in computers, a suitable base datatype is identified (such  as a byte, a 16-bit wyde or other) and a character encoding form (CEF) is  used, which encodes the abstract integers of a CCS into sequences of the  code units of the base datatype.    Note "wyde" typo. Much of this summary is fairly easy to understand and is  demonstrated in Appendix A. However, the distinction between CEF and CES is  not very clear and might merit an example -- if it can be done simply,  getting in to endian and BOM might confuse the case...    __    3.5 Reference Processing Model    What does "arbitrarily restrict the range of characters that can be  used" mean?  Is any non-arbtirary reason good enough for restriction?  For example, is the existence of programming languages with a bias  toward null terminated "strings" a good enough reason to prohibit the  code point U+0000 unless it can be guaranteed that no such programming  language will ever be used to process the data?    __    3.6 Choice and Identification of Character Encodings    I think some reason should be given when UTF-16 is more appropriate  than UTF-8 for APIs.  If one is using UTF-8 on the wire, might it not  be easier to use it everywhere in some application?    __    3.6.1 Character Encoding Identification  Because of the layered Web architecture (e.g. formats used over protocols),  there may be multiple and at times conflicting information about character  encoding. Specifications MUST define conflict-resolution mechanisms (e.g.  priorities) for these cases, and implementers and content developers MUST  follow them carefully.    This requirement can be relevant to dsig that there is a type attribute (of  type URI) that could identify the encoding of an identified resource being  signed. However, the signature text speaks of dsig types, not MIME types  though MIME types when represented as a URI could be included:    http://www.w3.org/TR/2000/CR-xmldsig-core-20001031/#sec-Reference  4.3.3 The Reference Element  . The Type attribute facilitates the processing of referenced data. For  example, while this specification makes no requirements over external data,  an application may wish to signal that the referent is a Manifest.    If someone did use this to describe the MIME type, the dsig spec does not  address how to resolve conflicting information and leaves it to the  application.    __    3.6.2 Private Use Code Points    The recommendation that private-use code points be allowed but  prohibition against any mechanism to facilitate private agreements  concerning these code points in any protocol seems bizarre.  Why not  leave it up to protocol designers to determine if they will include a  mechanism for private extensions or negotiation of privately defined  options?    __    3.7 Character Escaping    [Eastlake] While it would be fine to say that the number of ways to escape a  character should be minimized, the statement "There SHOULD be only one  way to escape a character." seems wrong.  Every decent language or  syntax of any power has 2 or 3, from allowing both single and double  quotes, so each can quote the other, to both a single character escape  ("absquote") which escapes the following character and a string quote  mechanism, to CDATA sections plus the other mechanisms in XML, etc.  A  recommendation violated by every computer language of reasonable  complexity and power I can think of off hand would require  extraordinarily strong justification which I don't see.    [Reagle] I support the "SHOULD" token and find multiple ways to escape a  character adds to complexity.    __    4 Early Uniform Normalization  4.1 Motivation  This document also specifies that normalization is to be performed early  (by the sender) as opposed to late (by the recipient).    Note, the dsig specification RECOMMENDS but does not require the signature  be in NFC:    http://www.w3.org/TR/2000/CR-xmldsig-core-20001031/#sec-XML-Canonicalization  We RECOMMEND that signature applications create XML content (Signature  elements and their descendents/content) in Normalization Form C [NFC] and  check that any XML being consumed is in that form as well (if not,  signatures may consequently fail to validate).    __    4.3 Responsibility for Normalization  Note: The prohibition of normalization by recipients is necessary for  consistency, on which security depends.    DSIG is compliant with this:    http://www.w3.org/TR/2000/CR-xmldsig-core-20001031/#sec-See  8.1.3 "See" What is Signed  Consequently, while we RECOMMEND all documents operated upon and generated  by signature applications be in [NFC] (otherwise intermediate processors  might unintentionally break the signature) encoding normalizations SHOULD  NOT be done as part of a signature transform, or (to state it another way)  if normalization does occur, the application SHOULD always "see" (operate  over) the normalized form.    __    8 Character Encoding in URI References  This chapter defines how to address this issue in W3C specifications in a  way consistent with the model defined in this document and with deployed  practice.    DSIG is compliant with this, see:  http://www.w3.org/TR/2000/CR-xmldsig-core-20001031/#sec-URI    __    __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 12:57 6/8/2001, Philippe Le Hegaret wrote:  >please have a look at these documents and what position we should  >adopt:  >  >DOMTS Process Document (section 6 Ownership)  >http://www.w3.org/2001/03/DOMConformanceTS-Process-20010316  >  >http://lists.w3.org/Archives/Public/www-dom-ts/2001Jun/0057.html    In instances where we used a submission as the basis of our own work we used   the following text:       Declaration of [Submitter]       [Submitter] hereby grants to the W3C, a perpetual,     nonexclusive, royalty-free, world-wide right and license under any     [Submitter] copyrights in this contribution to copy, publish and     distribute the contribution, as well as a right and license of the     same scope to any derivative works prepared by the W3C and based on,     or incorporating all or part of the contribution. [Submitter]     further agrees that any derivative works of this contribution prepared     by the W3C shall be solely owned by the W3C.    This permits someone to make deriviatives with their own tests, but once   it's part the W3C, that is owned by W3C and solely governed by that license   (which doesn't permit changes/derivatives.)      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      Good point. My next impulse was to use GIF, but we should be deprecating   those, so it's now 'image/png' <smile/>.    At 03:10 6/4/2001, Martin Duerst wrote:  >Hello Joseph - Would it be possible to change the example below to  >something else than text/xml? Text/xml in base64 isn't exactly something  >that we should promote, or even mention. What about e.g. image/jpeg  >or something similar?  >  >Regards,   Martin.  >  >At 18:41 01/05/31 -0400, Joseph M. Reagle Jr. wrote:  >[ Resulting document  >>         http://www.w3.org/Signature/Drafts/xmldsig-core/Overview.html  >>        $Revision: 1.63 $ on $Date: 2001/05/31 22:40:41 $  >>  >>/+The MimeType attribute is an optional attribute which describes the data   >>within the Object (independent of its encoding). This is a string with   >>values defined by [MIME]. For example, if the Object contains base64   >>encoded XML, the Encoding may be specified as base64 and the MimeType as   >>text/xml. This attribute is purely advisory; no validation of the MimeType   >>information is required by this specification. Applications which require   >>normatiave type and encoding information for signature validation should   >>specify Transforms with well defined resulting types and/or encodings.+/  >>  >>]  >>  >>--  >>Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  >>W3C Policy Analyst                mailto:reagle@w3.org  >>IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  >>W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/      --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      [Speaking with my own hat on, but trying to be diplomatic none-the-less!   <grin/>]    I'm still hoping to hear from a few more implementors on the list ASAP, but   a few things form the discussion so far have tweaked my options in the   following way:    1. Not a clear consensus so far. In fact, since regardless of how we want to   get interop on this (in dsig, in dsig-more, as a separate spec/namespace),   we haven't yet had any of those folks in the interop matrix indicate this is   their preference with an offer to implement a solution soon.    >Boyer: option 2 with many caveats  >    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/0304.html  >Geuer-Pollmann: I vote for option 2 - Recommended.  >    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/0299.html  >Mark Bartel: option 2 and REQUIRED.  >    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/0303.html  >Brian LaMacchia: option 1  >    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/0310.html  >Gregor Karlinger: option 1  >    http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001AprJun/0311.html    2. Given John's points, and some of my own concerns, I don't think it's as   trivial issue as I had first hoped, and a solution will take some work. I'm   no longer as comfortable with adding a few paragraphs in dsig, getting two   interops and moving forward. I'm beginning to think it merits its own spec   (though it can still be a couple pages and rely upon Canonical XML), a last   call (to get the attention of the XML community) and intensive interop.    3. I agree with Brian, including it in dsig but making it anything other   than MUST seems besides the point. I don't deny this algorithm is a very   useful thing. But I don't see how a SHOULD in dsig (or even a MUST) does   anything more *than the actual need* for it will do. XMLDSIG and Canonical   XML are solid and work for scenarios outside of this one quite well. If   folks need exclusive c14n, they'll keep on us to do a good job and get it   out ASAP and they'll use it if they need it.    So, my diplomatic skills seem in question when the result favors my own   partisan position <smile/>, but I'm not sure what other options we have?        --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

        Thankyou Gerald. I was getting confused because Validator was reporting   problems due to a lack of ending </p> -- a problem with my HTML editor.   However, I was getting confused because when I ran tidy, tidy wouldn't   report this problem. However it would fix it, and depending on how long it   took for the new version to make its way through cvs to validator, I got   different results.      tidy -m Overview.html    Tidy (vers 30th April 2000) Parsing "Overview.html"    "Overview.html" appears to be XHTML 1.0 Transitional    no warnings or errors were found    So, Dave could you have tidy report the lack of a closing paragraph as an   error please?      At 17:50 3/7/2001 -0500, Gerald Oskoboiny wrote:  >On Wed, Feb 28, 2001 at 06:51:51PM -0500, Joseph M. Reagle Jr. wrote:  > > At 04:28 2/28/2001 -0500, Gerald Oskoboiny wrote:  > > >Here are the most frequently-requested HTML documents on our site  > > >that do not validate, with the their overall rank and the number  > > >of times they were requested from our site in the last 4 days.  > > >  > > >    Rank   Hits    URI  > > >   ------ -------   > ---------------------------------------------------------  > > >    150      968   http://www.w3.org/Encryption/2001/  > >  > > I fixed it, though this happens a lot and I'm not really sure why. I run  > > "tidy -m" over the document and it reports no errors, however it does   > change  > > the file, and upon committing whatever problem validator had seems to go  > > away...? Can you give me your expert opinion on CVS version 1.14 and 1.15  > > [1] with respect to validity? When I do a diff [2], the differences seem  > > inconsequential.  > >  > > [1] http://cvs.w3.org/Team/WWW/Encryption/2001/Overview.html  > > [2]   > http://cvs.w3.org/Team/WWW/Encryption/2001/Overview.html.diff?r1=1.14&r2=1.15  >  >The diff is too noisy to be very useful, but checking out rev 1.14  >and uploading it to the validator, I see that at least a few of  >the errors are a result of a missing </p> on line 74:  >  >      Line 76, column 3:  >  >        <ul>  >           ^  >  >      Error: element "ul" not allowed here; possible cause is an  >      inline element containing a block-level element  >  >      Line 80, column 3:  >  >        <h2><a id="Meetings" name="Meetings">Meetings</a> and   > Teleconferences< ...  >           ^  >  >      Error: element "h2" not allowed here; possible cause is an  >      inline element containing a block-level element  >  >  >[...]  >  >   72: <h2><a id="Code" name="Code">Public Code</a></h2>  >   73:  >   74: <p>The code below is not normative. It is provided for illustration   > and reference only.  >   75:  >   76: <ul>  >   77:   <li>...</li>  >   78: </ul>  >  >--  >Gerald Oskoboiny <gerald@w3.org>  >http://www.w3.org/People/Gerald/  >tel:+1-613-261-6630 (mobile)      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 16:50 00/04/06 +0200, Gregor Karlinger wrote:   >When will the minutes of the Adelaide FTF meeting from 27. March be   >available? (Or have I missed something?)     We're waiting for one of the note takers to send his minutes, then we'll  post them.      _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        Gregor (and/or other implementors),    I know the one example you provided that I'm using for interop included the   XSLT element. If we remove the XSLT element it will no longer be valid (but   Gregor's point is that it isn't valid now as the type for it is defined as   string.) Does anyone mind if we drop the element?    At 16:22 4/5/2001 -0400, Ed Simon wrote:    >My preference (see   >"<http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0167.html>http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0167.html")   >  >is to require that the <XSLT> element be defined to contain a full XSLT   >stylesheet.  As I recall,  >we didn't get an answer as to whether this was possible and we gave up   >trying.  >  >I note that the XML Signature spec only says the content of the <XSLT>   >stylesheet element  >"SHOULD" contain an <xsl:stylesheet> element (I feel "MUST" is the right   >word) .  I think  >allowing vestigial styles sheets is asking for trouble because who knows   >how they will be  >processed.  But given  what the spec says (and I forget the arguments for   >it), we can go ahead  >with dropping the <XSLT> element.  >  >Ed      __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      At 10:45 99/11/20 -0800, John Boyer wrote:   >I would like to ask you to consider at length the merits of completely   >throwing out any notion that core behavior should dig up resources external   >to the document containing the Signature element.  The proposal below   >basically takes what we have now and throws out all of the stuff that most   >people really dislike, so it is not terribly different from what we have   >now.    This conversation has been useful to me in that a number of things are  clearer in my own head, which is a good thing! Two responses follow, one in  a chair capacity and one in a technical capacity.    Chair: There doesn't seem to be strong support  for change on the list so  far. I think this is mainly for two reasons (1) people aren't keen to change  what we have now and (2) in your proposal it relies upon XPath.  Procedurally, David has said he will work on another rev that the editors  will post next week and it will hopefully speak more clearly on these  issues. At that point we can take a consensus poll in terms of moving  forward and document any minority positions.    Technical: The one thing I like in your proposal is the clarity between the  signature core (cryptographically validating bytes) and manifests. As I  originally envisioned our design, the "core behavior" would do nothing more  than worry about signature (cryptographic) validity. We would also define a  manifest for resources and their content's digests. If we did a good enough  job in defining the manifest semantics we could require Signature  applications to be aware of those semantics! (I knew doing a good job on  that topic would be hard and I think we've seen that it is!) Whether we  called it SignedInfo (and included two other pieces of information) or  occurred within or without the Signature was immaterial in my mind.    What I hope we can do is make a few minimal changes so as to restore this  distinction between a bucket of bits and manifest/reference semantics. An  easy way to do this I think would be to introduce an element within  SignedInfo in which you can place arbitrary data; this might include a set  of ObjectReferences or not. However, I'm not sure I've convinced others this  is a useful thing.    Finally, I feel I've learned the following about ObjectReferences. People  should feel free to tell me if they agree or disagree with any of these  specific points:    1. A digest (and subsequent signature) is over bits. How you get those bits  is immaterial to the digest.  2. Since the "critical bits" of the DigestContent (the stuff digested) is  often not explicitly represented, it is useful to document the way in which  they were derived -- that specification might even permit multiple ways (the  URI is dynamically dereferenced, more than one XML instance transforms into  the final XML instance that is digested, etc.). However this information has  no necessary meaning to the DigestValue itself -- the question is whether  the final value is the same.  2.1 Consequently, my earlier thinking of starting with a source document,  and putting it through various transformations (and achieving closure)  starts at the wrong end of the stick. As TimBL stated when we started  worrying about transforms and context, you are signing the derived content.  3. WE define what our syntax means. We are not "changing its meaning under  the covers." We have to explicitly define the meaning of every bit of syntax  we have. This is why I like to think in terms of assertions with a subject,  predicate and object. I think it is a good idea to say the presence of a  Transforms and a Location element means:  a. There is a set of XML documents that when transformed yield DigestContent  (the content that is finally digested.)  b. At some point in time, the XML document obtained by dereferencing this  URI was just such a document.    BTW: I'm not quite sure why you feel the current spec required XSLT, merely  one of many possible transform algorithms and one I think we should optional  in section 5.1 given it is still a WD (and XPath is now a REC).    _________________________________________________________  Joseph Reagle Jr.     Policy Analyst           mailto:reagle@w3.org  XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        As an exercise, I just quickly went through the Editor's [1] copy and   highlighted (<span class=".discuss"/>) those portions of the text that state   that "Multiple declarations within KeyInfo refer to the same key" so as to   have a sense of what we would have to loosen *if* we decided to loose that   semantic.    There's been two semantics of KeyInfo we've been discussing. First, this   issue of whether all the information in a KeyInfo pertains to a single key.   Second, whether the key is for signature validation.    On the first question, as the requirements stated this WG was only doing   simple signature validation, we were obviously and exclusively concerned   with providing information to find the key to do the job. Other information   might be provided (particularly in the X509 structures) for trust decisions   but that was out of scope and concern for this spec. So we defined the   semantic between the children of KeyInfo and their parent as "properties" of   a single key. (The counter argument is that this semantic should merely be   one of a bag or collection of key stuff with no particular relation between   themselves or their parent.) People that use our KeyInfo structure need to   understand and will take advantage of the semantic we define between KeyInfo   and its children, so we need to get that straight.    On the second question, clearly the intent of KeyInfo as a child of   Signature is for signature validation. If it's a child of some other element   (like EncryptedData) its intent is defined by its parent (EncryptedData). So   I'm not worried about that, or needing to reconsider prose in KeyInfo about   "signature validation."    So to return to the first question, I'll ask you folks a question:    1. Who wants to take advantage of the "singular key semantic" whereby:     <KeyInfo><KeyName>joe</KeyName><KeyValue>123</KeyValue></KeyInfo>  Means "there is some key with KeyName=joe and KeyValue=123."?    2. Who wants to take advantage of the "generic key semantic" whereby the   same structure above merely means "here's some information about keys."?    Regardless of this question, my present inclination from a stable/editorial   point of view is not to have to go through the spec tweaking this   substantive text though I certainly appreciate the scenario for option 2.   But let's here what people have to say!    __  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

      Howdy, some quick comments (since it's PDF, it makes it a little harder for   me to put comments in context (and grep through) since it's not easy to quote)  :  Document still has confidential notice in footer.    2.1.2: The first two sentences are sort of confusing and "entity" risks   collision/confusion with both XML and HTTP.    3.1.1.2: Too bad ID is type xsd:string (and not xsd:ID), but understandable   given you want to use integer as first character in identifier (prohibited   by XML)    3.1.1.3: <field name="foo">bar</field>: it'd be cleaner if folks could just   plug in their own XML instances from an external namespace.    3.1.5.2 and 5: extension is a complexType of mixed="true" but no content   element types are defined, so this only permits character data (right?). I   think you want to make use of <ANY> here. Also, if you intend the content of   extension to be only elements, you can rely upon the namespace and can   remove the need for the extension type attribute which will then be   redundant with the namespace.    7.1: Finally, I'm not exactly sure of the binding with XML Signature. Is   your intent to have the Signature be an enveloping Signature only, with only   its very weak meaning: some key applied to octets? Or do you want to work   with detached, enveloped, and enveloping? If enveloped, then you should   define a place in your schema for it; furthermore this allows you to better   define its meaning in your application context.    <access-request>     ...     <authentication>       <dsig:Signature>        ...        </dsig:Signature>     </authentication>  </access-request>    So in this instances you get to define what a authenticated access-request is.    (You can do the same with enveloping or detached signature by inclusion of   the meaning in the  SignatureProperty [2].)    [1] http://www.authxml.org/docs/draft-authxml-v2.pdf  [2] http://www.w3.org/2000/12/xmldsig-p3p-profile/Overview.html#sec-Semantics    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 08:54 PM 5/9/00 +0200, Peter Lipp wrote:   >> Would anyone be interested in presenting on XML Signature? (I generally   >> don't forward or encourage CFPs to the list unless they are relevant to   >> getting information about our work product out.)   >As a university, we are obviously used to do such things ;-) and looking at   >date and location, this seems pretty interesting. I do believe that there  is   >place for more than one paper (as I saw Peter already responding) but we   >might want to coordinate efforts then (bi- or multilateraly)     Well, it's a pretty straightforward CFP (submit a paper and wait and see)  that I don't have any direct involvement with; I was qualifying the forward  to XML Signature because I was stressing that I only encourage such things  if they pertain to getting the XML Signature word out. If you or anyone else  submits a paper, I think it'd be good karma to ask for comments on it from  the WG (or some subset thereof if you don't want it to be public yet) before  you present, but that is at your discretion of course.    _________________________________________________________  Joseph Reagle Jr.     W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      Hi David,    Thanks again for your comments, I just wanted to close these other two   comments before moving on (If I've misunderstood or this response does   adequately address the issue, please let me know.)    At 11:31 10/19/2000 -0700, Stern, David L wrote:  >2. Should signatures with partial message recovery be noted somewhere?    No particular requirement or consequent of partial message recovery has been   raised that would affect the present syntax and processing. If you feel it   does, do make a case for it.    >3. Do we need a footnote for SHA-2?    I'm not sure what you mean by footnote. However, we do specify URI or XML   syntax for external algorithms and structures because:  1. we require at least one mandatory to implement method for interoperability  2. to provide an example/stub that others can employ.    Consequently, there's many algorithms and structures (includin SHA-2) that   can be used with XML Signature but our intent is not to become the gating   specification for all of this; instead the other algorithms should be   orthogonally deployed using the extensibility inherent to our design and   content model.          __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 16:59 11/20/2000 +0100, Peter Lipp wrote:  >The idea now was how to proceed. Options are  >  >- that this was a stupid idea from the beginning and everybody involved  >   should be ashamed  >- to have it as an activity which would be ideally placed within the  >   PKIX-group (which is not really an option as Steven Kent and many  >   others would not support it)  >- to have it as a new activity of the XML-DSig WG    Hi Peter,    Perhaps with sentiments similar to Steven Kent but in the W3C context, I   think an activity should be its own WG with a specific and focused   charter/requirements of its own [1].    [1] http://www.w3.org/People/Reagle/chairing-a-WG.html#Closing    __  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

      At 10:30 9/7/2000 -0700, John Boyer wrote:  >In the Xpath transform text, may I ask you to replace the phrase  >  >"used in XSLT template matching"  >with  >"used in <a href="http://www.w3.org/TR/xmldsig-core/#ref-XSLT">XSLT</a>"    Ok.    Other comments on the merge of my Editors' copy and your proposal [1], keep   in mind I'm desperately trying to keep this specification from growing much   more! <smile>    1. In 4.3.3.1 I thought we said we didn't need the extra XSLT element,   instead a proper <stylesheet> element should be included? (Though I honestly   don't remember so I made the change and rewrapped it).    2. I'm less than comfortable with the Base64 [2] and Minimal [3] changes as   it adds a lot of text and introduces confusion with respect XPath and   comments. These are supposed to be the _simple_ transforms.  a. Minimal: "This algorithm requires as input the octet stream of the   resource to be processed. However, the actual input to this algorithm may be   an XPath node-set (or a sufficiently functional replacement implemented by   the application). " I don't understand, does it take octects only or not?   Are you saying a Signature application can (or MUST) convert nodesets to   octects?  b. Base64: Again, the algorithm takes octects. If nodesets are present, who   is doing the converting? Should it be restated to say, "If a Signature   Application has a nodeset and wishes to base64 its encoding it must first   ..." And now we have the Base64 doing XML processing by stripping away start   and end tags! I'd like to keep this transform clean and simple.    I'm not sure what the solution is, but if other people would like to keep   these simple, we can give it more thought.    3. I'm not sure if the 6th and 7th motivating paragraphs in the XPath   section aren't needed. "The primary purpose ..." I'd propose to strike them.    4. XPath section, has (old) text that says, "The function definition for   here() is consistent with its definition in XPointer. It is defined as   follows:" However, this isn't the case, right?    [1] http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/0419.html  [2]   http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/att-0419/01-Overview.html#sec-Base-64  [3]   http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2000JulSep/att-0419/01-Overview.html#sec-Minimal    _________________________________________________________  Joseph Reagle Jr.  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/People/Reagle/        

        http://dev.w3.org/cvsweb/2001/xmlsec-python/    _readme.txt    The three important files are: c14n.py      The c14n module.  ns.py      Definitions of namespaces and their URIs.  xpath-c14n.py      Examples from the spec and XPath call for nodelist      generation.    _c14n.py    #! /usr/bin/env python  '''XML Canonicalization    This module generates canonical XML of a document or element.       http://www.w3.org/TR/2001/REC-xml-c14n-20010315  and includes a prototype of exclusive canonicalization       http://www.w3.org/Signature/Drafts/xml-exc-c14n    This is based on Rich Salz's element node canonicalization which was  extended to support document node canonicalization. It also now  supports XPath subset node list canonicalization. However it presently  doesn't support:       1. Unicode -- not sure how to get eg6 to work correctly in python.   (Reagle)    Furthermore, it includes the following bugs thought to be in the DOM  implementation Ft.Lib.pDomlette: (Reagle)       1. does not white space normalize attributes of type NMTOKEN and ID?       2. seems to be include "\n" after importing external entities?    Authors:       "Joseph M. Reagle Jr." <reagle@w3.org>       "Rich Salz" <rsalz@zolera.com>    $Date: 2001/07/25 15:13:40 $ by $Author: reagle $  '''    --  Joseph Reagle Jr.                 http://www.w3.org/People/Reagle/  W3C Policy Analyst                mailto:reagle@w3.org  IETF/W3C XML-Signature Co-Chair   http://www.w3.org/Signature  W3C XML Encryption Chair          http://www.w3.org/Encryption/2001/        

