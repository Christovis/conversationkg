[[["[css-houdini-drafts] [css-layout-api] String based inline layout API (#990)", ["0005.html"]], ["[css-houdini-drafts] [css-properties-values-api] feature request: observe element's computed style changes (with MutationObserver?) (#987)", ["0000.html"]], ["[css-houdini-drafts] [css-typed-om] Color conversion and contrast ratio (#989)", ["0004.html"]], ["[css-houdini-drafts] Ban data URL worklets (#985)", ["0001.html"]], ["[css-houdini-drafts] css-foo (#988)", ["0002.html"]], ["Closed: [css-houdini-drafts] css-foo (#988)", ["0003.html"]]], [["[css-houdini-drafts] [css-paint-api] Support for using paint() in element overlays (#982)", ["0004.html", "0003.html", "0001.html"]], ["[css-houdini-drafts] [css-typed-om-2] Need an array-buffer custom property type. (#136)", ["0000.html"]], ["[css-houdini-drafts] [worklets] \"destination\" of script fetching should be overridden by each worklet spec (#759)", ["0009.html"]], ["[css-houdini-drafts] [worklets] Add ability to determine if a module is available (#986)", ["0024.html"]], ["[css-houdini-drafts] [worklets] Update agent and realm allocation (#981)", ["0002.html"]], ["[css-houdini-drafts] Ban data URL worklets (#985)", ["0023.html", "0022.html", "0021.html", "0020.html", "0019.html", "0018.html", "0017.html", "0016.html", "0015.html", "0014.html", "0012.html", "0011.html"]], ["[css-houdini-drafts] Handle module scripts that include top-level await. (#984)", ["0013.html", "0008.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Fix initial-value serialization", ["0006.html"]], ["[css-houdini-drafts] Pull Request: Handle module scripts that include top-level await.", ["0007.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Support for using paint() in element overlays (#982)", ["0005.html"]], ["Closed: [css-houdini-drafts] [worklets] \"destination\" of script fetching should be overridden by each worklet spec (#759)", ["0010.html"]]], [["[css-houdini-drafts] [css-typed-om] Spec up ColorValue (#159)", ["0000.html"]], ["[css-houdini-drafts] Pull Request: [worklets] Update agent and realm allocation", ["0001.html"]]], [["[css-houdini-drafts] [css-properties-values-api] is registerProperty <image> not implemented in Blink ? (#925)", ["0006.html"]], ["[css-houdini-drafts] [worklet] API of CSS.paintWorklet.addModule(url) produces network requests (#979)", ["0004.html", "0003.html", "0002.html", "0001.html", "0000.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Describe serialization of CSSPropertyRules", ["0005.html"]]], [["[css-houdini-drafts] [css-animationworklet] Mechanism to pause/play an animation from inside worklet (#808)", ["0000.html"]], ["[css-houdini-drafts] [css-animationworklet] Passing DocumentTimeline via options: \"object could not be cloned.\" (#977)", ["0005.html", "0004.html"]], ["[css-houdini-drafts] [css-animationworklet] Retrieve computed data (ie velocity) from AnimationWorklet (#976)", ["0002.html"]], ["[css-houdini-drafts] [css-animationworklet] Sending data to animators in worklet from main thread (#869)", ["0001.html"]], ["[css-houdini-drafts] Print behaviour & test requirements (#978)", ["0007.html"]], ["[css-houdini-drafts] Proposal: Custom functions for modifying CSS values (#857)", ["0003.html"]], ["Closed: [css-houdini-drafts] [css-animationworklet] Passing DocumentTimeline via options: \"object could not be cloned.\" (#977)", ["0006.html"]]], [["[css-houdini-drafts] [css-paint-api] Any way to pass JS Object/Var to the paint class or Set property as return value? (#881)", ["0002.html"]], ["[css-houdini-drafts] [worklets] There is no way to catch \"throw\" or \"unhandledrejection\" (#975)", ["0009.html", "0008.html", "0007.html", "0006.html", "0005.html", "0004.html"]], ["[css-houdini-drafts] Drop CSSPositionValue from README.md (#974)", ["0001.html"]], ["[css-houdini-drafts] Proposal: Custom functions for modifying CSS values (#857)", ["0003.html"]], ["[css-houdini-drafts] Pull Request: Drop CSSPositionValue from README.md", ["0000.html"]]], [["[css-houdini-drafts] [css-layout-api] Blockification section should use the computed value, not the box of the element (#972)", ["0000.html"]], ["[css-houdini-drafts] [scrolling] Examples of interesting Scroll Effects (#45)", ["0001.html"]]], [["[css-houdini-drafts] [css-animation-worklet] The steps of registerAnimator mix types in a weird way (#908)", ["0009.html"]], ["[css-houdini-drafts] [css-animationworklet] Need a document animator definition and verification (#928)", ["0027.html"]], ["[css-houdini-drafts] [css-animationworklet] partial interface AnimationEffect exposure set doesn't match original defintion (#816)", ["0014.html"]], ["[css-houdini-drafts] [css-layout-api] Design to allow for more layout engine optimizations. (#898)", ["0026.html"]], ["[css-houdini-drafts] [css-paint-api-1] Fix typo (#971)", ["0049.html", "0048.html"]], ["[css-houdini-drafts] [css-paint-api] Any way to pass JS Object/Var to the paint class or Set property as return value? (#881)", ["0021.html"]], ["[css-houdini-drafts] [css-paint-api] CSS Paint API leaks browsing history (#791)", ["0025.html", "0024.html"]], ["[css-houdini-drafts] [css-paint-api] Cycle possible using inputProperties() (#877)", ["0028.html"]], ["[css-houdini-drafts] [css-paint-api] drawImage() throws error when url() is passed. Why are ImageBitmap, OffscreenCanvas (#969)", ["0029.html"]], ["[css-houdini-drafts] [css-paint-api] Math.random usage in CSS Paint API leads to jitter in painted effect. (#970)", ["0043.html", "0042.html", "0041.html", "0040.html", "0039.html", "0038.html", "0037.html"]], ["[css-houdini-drafts] [css-paint-api][css-typed-om] Current Color as an input to paint worklets (#921)", ["0046.html", "0045.html", "0023.html"]], ["[css-houdini-drafts] [css-properties-values-api] is registerProperty <image> not implemented in Blink ? (#925)", ["0044.html"]], ["[css-houdini-drafts] [css-properties-values-api] Registering properties in JS could have performance impact (#940)", ["0017.html", "0016.html"]], ["[css-houdini-drafts] [css-typed-om] Should TypedOM \"simplify away\" a calc() wrapper around a single numeric value when reifying, like serialization does? (#968)", ["0004.html"]], ["[css-houdini-drafts] [css-typed-om] Switch CSSUnparsedValue and CSSTransformValue to having an arrayish member? (#948)", ["0036.html", "0035.html", "0034.html", "0033.html", "0032.html", "0031.html", "0030.html", "0013.html", "0011.html", "0006.html"]], ["[css-houdini-drafts] [worklets] Queue a task to reject addModule() (#967)", ["0003.html"]], ["[css-houdini-drafts] [worklets] Reject with script's error to rethrow (#958)", ["0001.html"]], ["[css-houdini-drafts] Pull Request: [css-paint-api-1] Fix typo", ["0047.html"]], ["[css-houdini-drafts] Pull Request: [worklets] Queue a task to reject addModule()", ["0002.html"]], ["[css-houdini-drafts] Rename directory css-animationworklet to css-animation-worklet (#959)", ["0005.html"]], ["Closed: [css-houdini-drafts] [css-animation-worklet] IDL for AnimationWorkletGlobalScope is invalid (#907)", ["0008.html"]], ["Closed: [css-houdini-drafts] [css-animation-worklet] IDL for StatelessAnimator doesn't make sense (#906)", ["0007.html"]], ["Closed: [css-houdini-drafts] [css-animationworklet] animation requested flag has inconsistent type (#933)", ["0012.html"]], ["Closed: [css-houdini-drafts] [css-animationworklet] Move interface idls close to definitions for easier readability. (#926)", ["0010.html"]], ["Closed: [css-houdini-drafts] [css-animationworklet] partial interface AnimationEffect exposure set doesn't match original defintion (#816)", ["0015.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Any way to pass JS Object/Var to the paint class or Set property as return value? (#881)", ["0022.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] broken links (#787)", ["0019.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] CSS Paint API leaks browsing history (#791)", ["0020.html"]], ["Closed: [css-houdini-drafts] [worklets] addModule() should reject a promise with a more specific exception (#509)", ["0000.html"]], ["Closed: [css-houdini-drafts] Typo: use snappedConcreteObjectSize in step 8 (#800)", ["0018.html"]]], [["[css-houdini-drafts] [css-animation-worklet-1] Align with Web IDL specification (#963)", ["0047.html"]], ["[css-houdini-drafts] [css-animationworklet] proposal for sequence AnimationTimeline (#949)", ["0018.html", "0015.html"]], ["[css-houdini-drafts] [css-animationworklet] Will it be possible to control the scrolling position? (#957)", ["0031.html"]], ["[css-houdini-drafts] [css-layout-api] const childFragments redefined in example 10 (#960)", ["0040.html"]], ["[css-houdini-drafts] [css-layout-api] Removing `childDisplay: 'normal'` , and replacing with `childDisplay: 'inline'`. (#946)", ["0016.html", "0008.html"]], ["[css-houdini-drafts] [css-properties-values-api] Rationale for `registerProperty()` taking precedence over `@property`? (#943)", ["0004.html", "0001.html"]], ["[css-houdini-drafts] [css-properties-values-api] Registering properties in JS could have performance impact (#940)", ["0020.html"]], ["[css-houdini-drafts] [css-properties-values-api] Should property registration be scoped? (#939)", ["0019.html", "0017.html", "0011.html", "0006.html"]], ["[css-houdini-drafts] [css-properties-values-api] should registerProperty throw as a result of an @property existing? (#942)", ["0038.html", "0005.html", "0000.html"]], ["[css-houdini-drafts] [css-typed-om] Replace CSSNumericArray with just a FrozenArray (#947)", ["0013.html"]], ["[css-houdini-drafts] [css-typed-om] Switch CSSUnparsedValue and CSSTransformValue to having an arrayish member? (#948)", ["0014.html"]], ["[css-houdini-drafts] [worklets-1] Worklet specs are generally impossible to integrate with WebAssembly without going through JS (#945)", ["0021.html", "0010.html", "0007.html"]], ["[css-houdini-drafts] [worklets] Reject with script's error to rethrow (#509) (#958)", ["0033.html"]], ["[css-houdini-drafts] [worklets] Reject with script's error to rethrow (#958)", ["0039.html"]], ["[css-houdini-drafts] Font Enumeration API discussion (#951)", ["0025.html", "0023.html"]], ["[css-houdini-drafts] Font Table Access discussion (#950)", ["0024.html", "0022.html"]], ["[css-houdini-drafts] Pull Request: [box-tree-api] Align with Web IDL specification", ["0041.html", "0026.html"]], ["[css-houdini-drafts] Pull Request: [css-animation-worklet-1] Align with Web IDL specification", ["0043.html"]], ["[css-houdini-drafts] Pull Request: [css-layout-api-1] Align with Web IDL specification", ["0044.html", "0028.html"]], ["[css-houdini-drafts] Pull Request: [css-typed-om-1] Align with Web IDL specification", ["0045.html", "0029.html"]], ["[css-houdini-drafts] Pull Request: [font-metrics-api] Align with Web IDL specification", ["0042.html", "0027.html"]], ["[css-houdini-drafts] Pull Request: [worklets-1] Align with Web IDL specification", ["0046.html", "0030.html"]], ["[css-houdini-drafts] Pull Request: [worklets] Reject with script's error to rethrow (#509)", ["0032.html"]], ["[css-houdini-drafts] Pull Request: minor edit: missing word", ["0002.html"]], ["[css-houdini-drafts] registerProperty/unregisterProperty should be clearer about escaping of property name (#283)", ["0051.html", "0050.html", "0048.html"]], ["[css-houdini-drafts] Rename directory css-animationworklet to css-animation-worklet (#959)", ["0036.html", "0035.html", "0034.html"]], ["Closed: [css-houdini-drafts] [css-animationworklet] Avoid StatefulAnimatior/StatelessAnimator superclass and use existence of state() function (#850)", ["0009.html"]], ["Closed: [css-houdini-drafts] [css-layout-api] out of date https://css-houdini.rocks/svg-path-layout (#934)", ["0012.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Rationale for `registerProperty()` taking precedence over `@property`? (#943)", ["0003.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] should registerProperty throw as a result of an @property existing? (#942)", ["0037.html"]], ["Closed: [css-houdini-drafts] registerProperty/unregisterProperty should be clearer about escaping of property name (#283)", ["0049.html"]]], [["[css-houdini-drafts] [css-animationworklet] Add random global scope selection for stateless animators (#931)", ["0010.html"]], ["[css-houdini-drafts] [css-animationworklet] animation requested flag has inconsistent type (#933)", ["0012.html"]], ["[css-houdini-drafts] [css-animationworklet] Animator section order depends on concepts and definitions which haven't been introduced. (#927)", ["0006.html"]], ["[css-houdini-drafts] [css-animationworklet] Move interface idls close to definitions for easier readability. (#926)", ["0005.html"]], ["[css-houdini-drafts] [css-animationworklet] Need a document animator definition and verification (#928)", ["0007.html"]], ["[css-houdini-drafts] [css-animationworklet] Require sharing a single animator instance for stateless animators (#932)", ["0011.html"]], ["[css-houdini-drafts] [css-animationworklet] Stateful animator section should focus on developer visible details (#930)", ["0009.html"]], ["[css-houdini-drafts] [css-animationworklet] Stateless animators are not allowed to share animator instances (#929)", ["0008.html"]], ["[css-houdini-drafts] [css-layout-api] out of date https://css-houdini.rocks/svg-path-layout (#934)", ["0016.html", "0013.html"]], ["[css-houdini-drafts] [css-paint-api] Enable inputProperties to provide full descriptors. (#924)", ["0000.html"]], ["[css-houdini-drafts] [css-properties-values-api] is registerProperty <image> not implemented in Blink ? (#925)", ["0004.html", "0003.html", "0002.html"]], ["[css-houdini-drafts] [css-properties-values-api] Registering properties in JS could have performance impact (#940)", ["0026.html", "0023.html"]], ["[css-houdini-drafts] [css-properties-values-api] Should property registration be scoped? (#939)", ["0022.html"]], ["[css-houdini-drafts] [css-typed-om] Add default dictionary value (#936)", ["0018.html"]], ["[css-houdini-drafts] [worklets] Add default dictionary value (#938)", ["0021.html"]], ["[css-houdini-drafts] [worklets] Fetching and invoking a worklet script which reports an exception (#407)", ["0001.html"]], ["[css-houdini-drafts] [worklets] Update spec to new IDL syntax for optional dictionaries (#937)", ["0019.html"]], ["[css-houdini-drafts] Add dictionary default value (#941)", ["0025.html"]], ["[css-houdini-drafts] Add explicit [Exposed] (#935)", ["0015.html"]], ["[css-houdini-drafts] Pull Request: [worklets] Add default dictionary value", ["0020.html"]], ["[css-houdini-drafts] Pull Request: Add default dictionary value", ["0017.html"]], ["[css-houdini-drafts] Pull Request: Add dictionary default value", ["0024.html"]], ["[css-houdini-drafts] Pull Request: Add explicit [Exposed]", ["0014.html"]]], [["[css-houdini-drafts] [css-paint-api] Current Color in context (#921)", ["0045.html", "0043.html", "0040.html", "0039.html", "0038.html"]], ["[css-houdini-drafts] [css-paint-api] Function links are broken (#919)", ["0018.html", "0017.html"]], ["[css-houdini-drafts] [css-paint-api] invoke a paint callback steps seem to be confused about what object types they are working with (#915)", ["0012.html", "0009.html", "0008.html"]], ["[css-houdini-drafts] [css-paint-api] Invoking a paint callback needs to define how input arguments are passed (#920)", ["0019.html"]], ["[css-houdini-drafts] [css-paint-api] Paint worklets need to do the state setup other specs expect before calling JS (#918)", ["0015.html"]], ["[css-houdini-drafts] [css-paint-api] Paint worklets need to do the state setup other specs expect before calling JS constructors (#918)", ["0016.html"]], ["[css-houdini-drafts] [css-paint-api] Typo in invoking a paint callback (#916)", ["0011.html", "0010.html"]], ["[css-houdini-drafts] [css-paint-api] Typo in registerPaint steps (#914)", ["0013.html", "0007.html"]], ["[css-houdini-drafts] [css-paint-api] Use of entries in the paint class instances map needs to check that they actually exist (#917)", ["0014.html"]], ["[css-houdini-drafts] [css-properties-values-api] @property in shadow trees (#846)", ["0059.html", "0054.html"]], ["[css-houdini-drafts] [css-properties-values-api] @property vs registerProperty (#845)", ["0053.html"]], ["[css-houdini-drafts] [css-properties-values-api] Generally ignore syntax in APIs. (#912)", ["0055.html", "0048.html", "0046.html", "0044.html", "0041.html", "0030.html", "0029.html", "0026.html", "0025.html", "0024.html", "0023.html", "0022.html", "0021.html", "0006.html", "0005.html", "0003.html"]], ["[css-houdini-drafts] [css-properties-values-api] HTML entities in Animation Behavior section. (#911)", ["0049.html"]], ["[css-houdini-drafts] [css-properties-values-api] Interaction with setProperty is unfortunate. (#880)", ["0037.html", "0036.html"]], ["[css-houdini-drafts] [css-properties-values-api] Interpolation behavior of <transform-list> and <transform-function>+ (#901)", ["0027.html"]], ["[css-houdini-drafts] [css-properties-values-api] Use <code> in #supports section. (#888)", ["0050.html"]], ["[css-houdini-drafts] [css-typed-om] Simplifying math expressions (#913)", ["0035.html", "0033.html", "0032.html", "0031.html", "0004.html"]], ["[css-houdini-drafts] [css-typed-om] Something about !important (#922)", ["0061.html", "0057.html", "0056.html"]], ["[css-houdini-drafts] [worklets] addModule() should reject a promise with a more specific exception (#509)", ["0020.html"]], ["[css-houdini-drafts] Improve wording on web-animation integrations (#923)", ["0063.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Avoid the term 'descriptor'.", ["0000.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Generally ignore syntax in APIs.", ["0002.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] HTML entities in Animation Behavior section.", ["0001.html"]], ["[css-houdini-drafts] Pull Request: Improve wording on web-animation integrations", ["0062.html"]], ["Closed: [css-houdini-drafts] [css-animationworklet] Improve potential for generating multiple animation frames in parallel (#812)", ["0058.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] @property in shadow trees (#846)", ["0060.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] @property vs registerProperty (#845)", ["0052.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] @property vs setProperty (#902)", ["0047.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Allow custom property descriptors with a CSS @-rule (#137)", ["0051.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Interaction with setProperty is unfortunate. (#880)", ["0042.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Interpolation behavior of <transform-list> and <transform-function>+ (#901)", ["0028.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Simplifying math expressions (#913)", ["0034.html"]]], [["[css-houdini-drafts] [all] Move Houdini APIs to `window.CSS` (#350)", ["0067.html"]], ["[css-houdini-drafts] [css-animation-worklet] IDL for AnimationWorkletGlobalScope is invalid (#907)", ["0083.html", "0082.html", "0081.html", "0078.html", "0076.html", "0074.html"]], ["[css-houdini-drafts] [css-animation-worklet] IDL for StatelessAnimator doesn't make sense (#906)", ["0079.html", "0073.html", "0072.html"]], ["[css-houdini-drafts] [css-animation-worklet] The steps of registerAnimator mix types in a weird way (#908)", ["0084.html", "0077.html", "0075.html"]], ["[css-houdini-drafts] [css-animationworklet] Avoid StatefulAnimatior/StatelessAnimator superclass and use existence of state() function (#850)", ["0014.html"]], ["[css-houdini-drafts] [css-animationworklet] Listening to events in Animation Worklet (#834)", ["0068.html"]], ["[css-houdini-drafts] [css-animationworklet] Sending data to animators in worklet from main thread (#869)", ["0011.html"]], ["[css-houdini-drafts] [css-animationworklet] Use prefer-reduced-motion in some examples (#903)", ["0052.html", "0051.html", "0050.html"]], ["[css-houdini-drafts] [css-animationworklet] Verifying the StatefullAnimatior/StatelessAnimator superclass on prototype chain (#850)", ["0005.html"]], ["[css-houdini-drafts] [css-layout-api] Design to allow for more layout engine optimizations. (#898)", ["0016.html", "0004.html", "0003.html", "0002.html"]], ["[css-houdini-drafts] [css-layout-api] Unregistered layout function and blockification. (#844)", ["0015.html"]], ["[css-houdini-drafts] [css-paint-api] Cycle possible using inputProperties() (#877)", ["0012.html"]], ["[css-houdini-drafts] [css-paint-api] IDL for PaintWorkletGlobalScope is invalid (#909)", ["0089.html", "0088.html", "0087.html", "0086.html", "0085.html", "0080.html"]], ["[css-houdini-drafts] [css-paint-api] use-case: data/audio visualization (#872)", ["0025.html", "0023.html", "0009.html", "0001.html"]], ["[css-houdini-drafts] [css-properties-values-api] @property vs registerProperty (#845)", ["0066.html", "0065.html"]], ["[css-houdini-drafts] [css-properties-values-api] @property vs setProperty (#902)", ["0064.html", "0063.html", "0059.html", "0058.html", "0057.html", "0055.html", "0049.html", "0047.html"]], ["[css-houdini-drafts] [css-properties-values-api] Add @property. (#847)", ["0046.html", "0043.html", "0042.html", "0040.html", "0039.html", "0038.html", "0037.html", "0036.html", "0035.html"]], ["[css-houdini-drafts] [css-properties-values-api] Computed value substitution (#792)", ["0030.html"]], ["[css-houdini-drafts] [css-properties-values-api] Interaction with setProperty is unfortunate. (#880)", ["0045.html", "0044.html", "0041.html"]], ["[css-houdini-drafts] [css-properties-values-api] Interpolation behavior of <transform-list> and <transform-function>+ (#901)", ["0056.html", "0032.html"]], ["[css-houdini-drafts] [css-properties-values-api] When can reifying a registered prop's value ever hit step 7? (#897)", ["0029.html", "0000.html"]], ["[css-houdini-drafts] [css-typed-om] CSSFontFace value (#899)", ["0013.html", "0010.html", "0006.html"]], ["[css-houdini-drafts] Proposal: Custom functions for modifying CSS values (#857)", ["0062.html", "0060.html", "0053.html", "0048.html", "0033.html", "0027.html", "0026.html", "0024.html", "0022.html", "0021.html", "0020.html", "0019.html", "0018.html", "0017.html", "0008.html", "0007.html"]], ["[css-houdini-drafts] Proposal: videoWorklet [worklets-1] (#905)", ["0070.html", "0061.html"]], ["[css-houdini-drafts] Pull Request: [css-animationworklet] Move threading model out of spec and into README", ["0054.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Reify '*' and direct CSSStyleValues properly.", ["0028.html"]], ["Closed: [css-houdini-drafts] [all] Move Houdini APIs to `window.CSS` (#350)", ["0069.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Computed value substitution (#792)", ["0031.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] When can reifying a registered prop's value ever hit step 7? (#897)", ["0034.html"]], ["Closed: [css-houdini-drafts] Proposal: videoWorklet [worklets-1] (#905)", ["0071.html"]]], [["[css-houdini-drafts] [css-animation-worklet] Explainer feedback (#891)", ["0041.html", "0040.html"]], ["[css-houdini-drafts] [css-paint-api] Computed vs. specified values in inputArguments (#896)", ["0066.html", "0063.html"]], ["[css-houdini-drafts] [css-paint-api] Lean on \"syntax descriptor\" concept. (#885)", ["0028.html", "0027.html", "0024.html", "0017.html"]], ["[css-houdini-drafts] [css-paint-api] use-case: data/audio visualization (#872)", ["0032.html"]], ["[css-houdini-drafts] [css-paint-api][css-typed-om] Reifying inputArguments (#895)", ["0065.html", "0062.html"]], ["[css-houdini-drafts] [css-properties-values-api] Describe behavior of CSS.supports(property, value). (#889)", ["0047.html", "0046.html", "0038.html"]], ["[css-houdini-drafts] [css-properties-values-api] Fix syntax string parsing to not treat whitespace between components the same as pipes. (#894)", ["0061.html", "0060.html", "0059.html", "0058.html", "0057.html", "0056.html", "0055.html", "0054.html"]], ["[css-houdini-drafts] [css-properties-values-api] Interaction with setProperty is unfortunate. (#880)", ["0044.html", "0043.html", "0042.html", "0034.html", "0031.html", "0030.html", "0026.html", "0022.html", "0015.html", "0009.html", "0007.html"]], ["[css-houdini-drafts] [css-properties-values-api] Require <custom-ident> as component name. (#884)", ["0014.html", "0013.html", "0012.html"]], ["[css-houdini-drafts] [css-properties-values-api] The fact that \"foo bar\" and \"foo | bar\" are equivalent syntax is confusing. (#893)", ["0052.html", "0051.html", "0050.html"]], ["[css-houdini-drafts] [css-properties-values-api] Use <code> in #supports section. (#888)", ["0037.html"]], ["[css-houdini-drafts] [css-properties-values-api] When can reifying a registered prop's value ever hit step 7? (#897)", ["0071.html", "0070.html", "0069.html"]], ["[css-houdini-drafts] [CSS-Typed OM] CSSScaleValue should accept one argument (#887)", ["0033.html"]], ["[css-houdini-drafts] [css-typed-om] CSSMathClamp\u2019s min and max props conflict with CSSNumericValue\u2019s methods (#855)", ["0029.html"]], ["[css-houdini-drafts] [proposal] New CSS conditional rule to detect registration events (#882)", ["0023.html", "0021.html", "0020.html", "0019.html", "0008.html", "0006.html"]], ["[css-houdini-drafts] `[css-paint-api]` Any way to pass JS Object/Var or Set property as return value? (#881)", ["0002.html"]], ["[css-houdini-drafts] `[css-paint-api]` Any way to pass JS Object/Var to the paint class or Set property as return value? (#881)", ["0004.html", "0003.html"]], ["[css-houdini-drafts] Is attributeStyleMap out of date? (#892)", ["0068.html", "0049.html", "0048.html"]], ["[css-houdini-drafts] Proposal: Custom functions for modifying CSS values (#857)", ["0005.html", "0001.html", "0000.html"]], ["[css-houdini-drafts] Pull Request: [css-paint-api] Lean on \"syntax descriptor\" concept.", ["0016.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Describe behavior of CSS.supports(property, value).", ["0036.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Fix syntax string parsing to not treat whitespace between components the same as pipes.", ["0053.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Remove Issue 1.", ["0010.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Require <custom-ident> as component name.", ["0011.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Use <code> in #supports section.", ["0035.html"]], ["[css-houdini-drafts] Pull Request: [css-typed-om] Reification behavior for registered custom properties.", ["0018.html"]], ["[css-houdini-drafts] Pull Request: Remove multiple timelines", ["0039.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Consume a component name presumably shouldn't allow CSS wide keywords, but it does. (#879)", ["0025.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Interaction with setProperty is unfortunate. (#880)", ["0045.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] The fact that \"foo bar\" and \"foo | bar\" are equivalent syntax is confusing. (#893)", ["0064.html"]], ["Closed: [css-houdini-drafts] Is attributeStyleMap out of date? (#892)", ["0067.html"]]], [["[css-houdini-drafts] [css-animationworklet] Mechanism to pause/play an animation from inside worklet (#808)", ["0000.html"]], ["[css-houdini-drafts] [css-paint-api] Cycle possible using inputProperties() (#877)", ["0039.html", "0038.html", "0027.html", "0025.html", "0024.html", "0021.html", "0020.html", "0019.html", "0014.html", "0006.html"]], ["[css-houdini-drafts] [css-paint-api] use-case: data/audio visualization (#872)", ["0045.html", "0044.html", "0018.html"]], ["[css-houdini-drafts] [css-properties-values-api] \"Consume a name\" returns a string. (#861)", ["0034.html"]], ["[css-houdini-drafts] [css-properties-values-api] Consume a component name presumably shouldn't allow CSS wide keywords, but it does. (#879)", ["0042.html", "0030.html", "0029.html", "0028.html"]], ["[css-houdini-drafts] [css-properties-values-api] Define effects on CSSOM. (#873)", ["0010.html", "0009.html", "0002.html"]], ["[css-houdini-drafts] [css-properties-values-api] Interaction with setProperty is unfortunate. (#880)", ["0041.html", "0040.html", "0037.html", "0035.html", "0033.html", "0032.html", "0031.html"]], ["[css-houdini-drafts] [css-typed-om] CSSNumericValue .to() function, wishful thinking (#876)", ["0008.html", "0007.html", "0005.html"]], ["[css-houdini-drafts] css-paint-api (#878)", ["0016.html", "0015.html"]], ["[css-houdini-drafts] Proposal: Custom functions for modifying CSS values (#857)", ["0048.html", "0047.html", "0046.html", "0043.html", "0036.html", "0026.html", "0023.html", "0022.html", "0013.html", "0012.html", "0011.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Define effects on CSSOM.", ["0001.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Remove reference to issue #118.", ["0003.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Use HTML entity for 'less than'.", ["0004.html"]], ["Closed: [css-houdini-drafts] css-paint-api (#878)", ["0017.html"]]], [["[css-houdini-drafts] [css-animationworklet] Allow sending data to animators in worklet from main thread (#869)", ["0017.html", "0016.html", "0015.html"]], ["[css-houdini-drafts] [css-animationworklet] Consider reworking 'Interaction with Animator Instances' section (#870)", ["0021.html"]], ["[css-houdini-drafts] [css-animationworklet] Define semantic of finish/reverse/playbackRate for Worklet Animation (#811)", ["0003.html"]], ["[css-houdini-drafts] [css-animationworklet] Listening events in animation worklet (#834)", ["0018.html", "0002.html"]], ["[css-houdini-drafts] [css-animationworklet] Mechanism to pause/play an animation from inside worklet (#808)", ["0019.html", "0013.html"]], ["[css-houdini-drafts] [css-animationworklet] security and privacy questionnare (#868)", ["0009.html"]], ["[css-houdini-drafts] [css-layout-api] Developer-friendly solution to avoiding FOUC (#856)", ["0011.html"]], ["[css-houdini-drafts] [css-paint-api] use-case: data/audio visualization (#872)", ["0023.html"]], ["[css-houdini-drafts] [css-properties-values-api] [css-variables] Should the spec document invalid variables and fallback more explicitly? (#849)", ["0012.html"]], ["[css-houdini-drafts] [css-typed-om] Use `partial interface mixin ElementCSSInlineStyle` (#853)", ["0010.html"]], ["[css-houdini-drafts] [worklets-1] (#871)", ["0022.html"]], ["[css-houdini-drafts] [worklets] addModule() should reject a promise with a more specific exception (#509)", ["0020.html"]], ["[css-houdini-drafts] Proposal: Custom functions for modifying CSS values (#857)", ["0024.html"]], ["[css-houdini-drafts] Pull Request: [css-animationworklet] Change state to be a function instead of getter", ["0007.html"]], ["[css-houdini-drafts] Pull Request: [css-animationworklet] Fiox animator ctor callback type", ["0006.html"]], ["[css-houdini-drafts] Pull Request: [css-animationworklet] Update README to remove old information", ["0008.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Describe substitution behavior.", ["0001.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Disallow leading '|' in syntax strings.", ["0000.html"]], ["[css-houdini-drafts] Pull Request: AnimationWorklet editorial cleanups", ["0004.html"]], ["Closed: [css-houdini-drafts] [css-animationworklet] Broken makefile (#852)", ["0005.html"]], ["Closed: [css-houdini-drafts] [css-animationworklet] security and privacy questionnare (#868)", ["0014.html"]]], [["[css-houdini-drafts] [css-layout-api] Name the FragmentResultOptions argument (#858)", ["0007.html"]], ["[css-houdini-drafts] [css-properties-values-api] Define parsing rules for the syntax string. (#860)", ["0013.html", "0011.html", "0010.html"]], ["[css-houdini-drafts] [text-layout] Houdini and text layout (#854)", ["0016.html", "0004.html", "0002.html", "0001.html"]], ["[css-houdini-drafts] Proposal: Custom functions for modifying CSS values (#857)", ["0000.html"]], ["[css-houdini-drafts] Pull Request: [css-layout-api] Name the FragmentResultOptions argument", ["0005.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] \"Consume a name\" returns a string.", ["0012.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Define parsing rules for the syntax string.", ["0008.html"]], ["[css-houdini-drafts] Pull Request: [font-metrics-api] Convert sequence<T> attributes to FrozenArray<T>", ["0006.html"]], ["[css-houdini-drafts] Specificity API (#96)", ["0015.html", "0014.html"]], ["[css-houdini-drafts] Use `partial interface mixin ElementCSSInlineStyle` (#853)", ["0003.html"]], ["Closed: [css-houdini-drafts] need to define the exact grammar accepted by \"syntax\" (#112)", ["0009.html"]]], [["[css-houdini-drafts] [css-animationworklet] Broken makefile (#852)", ["0005.html"]], ["[css-houdini-drafts] [css-animationworklet] Verifying the StatefullAnimatior/StatelessAnimator superclass on prototype chain (#850)", ["0014.html", "0013.html", "0001.html", "0000.html"]], ["[css-houdini-drafts] [css-layout-api] Developer-friendly solution to avoiding FOUC (#856)", ["0011.html"]], ["[css-houdini-drafts] [css-properties-values-api] [css-variables] Should the spec document invalid variables and fallback more explicitly? (#849)", ["0003.html"]], ["[css-houdini-drafts] [css-properties-values-api] Allowed Values/Property Validation (#851)", ["0004.html"]], ["[css-houdini-drafts] [css-typed-om] CSSMathClamp\u2019s min and max props conflict with CSSNumericValue\u2019s methods (#855)", ["0010.html"]], ["[css-houdini-drafts] [text-layout] Houdini and text layout (#854)", ["0012.html", "0009.html", "0008.html", "0007.html"]], ["[css-houdini-drafts] need to define the exact grammar accepted by \"syntax\" (#112)", ["0002.html"]], ["[css-houdini-drafts] Pull Request: Use `partial interface mixin ElementCSSInlineStyle`", ["0006.html"]]], [["[css-houdini-drafts] [css-layout-api] Unregistered layout function and blockification. (#844)", ["0000.html"]], ["[css-houdini-drafts] [css-properties-values-api] @property in shadow trees (#846)", ["0004.html"]], ["[css-houdini-drafts] [css-properties-values-api] @property vs registerProperty (#845)", ["0003.html"]], ["[css-houdini-drafts] [css-properties-values-api] [css-variables] Should the spec document invalid variables and fallback more explicitly? (#849)", ["0016.html"]], ["[css-houdini-drafts] [css-properties-values-api] Allow custom property descriptors with a CSS @-rule (#137)", ["0013.html", "0010.html", "0009.html", "0008.html", "0007.html", "0005.html", "0001.html"]], ["[css-houdini-drafts] [css-typed-om] Why is StylePropertyMap.get defined to return `undefined` instead of `null`? (#848)", ["0014.html", "0012.html", "0011.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Add @property.", ["0006.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Why is StylePropertyMap.get defined to return `undefined` instead of `null`? (#848)", ["0015.html"]], ["Closed: [css-houdini-drafts] [worklets] relationship to JavaScript agent clusters (#380)", ["0002.html"]]], [["[css-houdini-drafts] [css-animationworklet] Listening events in animation worklet (#834)", ["0011.html"]], ["[css-houdini-drafts] [css-layout-api] \"converting\" link points to the wrong place (#837)", ["0015.html", "0014.html"]], ["[css-houdini-drafts] [css-layout-api] \"translate a LayoutConstraintsOptions to internal constraints\" algorithm should take child layout as an argument (#838)", ["0016.html"]], ["[css-houdini-drafts] [css-layout-api] [Exposed] is not valid on dictionaries and enums (#836)", ["0013.html"]], ["[css-houdini-drafts] [css-layout-api] define or link to what \"override size\" means (#839)", ["0021.html", "0017.html"]], ["[css-houdini-drafts] [css-layout-api] Example 12 typo? (#842)", ["0020.html"]], ["[css-houdini-drafts] [css-layout-api] issues with (optional) caching of intrinsic size computation and generated fragments (#841)", ["0023.html", "0022.html", "0019.html"]], ["[css-houdini-drafts] [css-layout-api] Positioning example issues (#840)", ["0018.html"]], ["[css-houdini-drafts] [css-properties-values-api] More formal description of registerProperty required", ["0002.html"]], ["[css-houdini-drafts] [css-properties-values-api] Observer for property being applied? (#555)", ["0025.html"]], ["[css-houdini-drafts] [css-properties-values-api] What does Typed OM return for <transform-function> type properties?", ["0003.html"]], ["[css-houdini-drafts] [font-metrics-api] Compatibility notes with Canvas TextMetrics API", ["0006.html", "0004.html"]], ["[css-houdini-drafts] [font-metrics-api] Revised proposal of font metrics for each character", ["0005.html", "0000.html"]], ["[css-houdini-drafts] need to define the exact grammar accepted by \"syntax\"", ["0010.html", "0001.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Require var() fallbacks to match syntax.", ["0008.html"]], ["[css-houdini-drafts] Pull Request: [css-typed-om] Fix return type of example", ["0012.html"]], ["[css-houdini-drafts] Worklets does not integrate with the event loop (#843)", ["0024.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] More formal description of registerProperty required", ["0007.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Registering a property should cause us to validate var() fallback", ["0009.html"]]], [["[css-houdini-drafts] [css-animationworklet] Separate Stateful and Stateless animator interfaces #812", ["0040.html"]], ["[css-houdini-drafts] [css-layout-api] Add \"layout animation\" example to css-layout-api spec.", ["0043.html"]], ["[css-houdini-drafts] [css-layout-api] Assorted TAG feedback", ["0041.html"]], ["[css-houdini-drafts] [css-layout-api] Precision and rounding of the css-layout-api.", ["0049.html", "0047.html"]], ["[css-houdini-drafts] [css-layout-api] Should display: layout(x) work on any element?", ["0042.html"]], ["[css-houdini-drafts] [css-properties-values-api] Allow custom property descriptors with a CSS @-rule", ["0062.html", "0059.html", "0058.html", "0057.html"]], ["[css-houdini-drafts] [css-properties-values-api] Canonical units for computed values", ["0030.html", "0029.html"]], ["[css-houdini-drafts] [css-properties-values-api] Observer for property being applied?", ["0000.html"]], ["[css-houdini-drafts] [css-typed-om] Clarify list-valued properties", ["0046.html", "0024.html", "0023.html", "0021.html", "0020.html", "0016.html", "0015.html", "0014.html"]], ["[css-houdini-drafts] [css-typed-om] Drop CSSPositionValue", ["0045.html"]], ["[css-houdini-drafts] [css-typed-om] Provide a way to resolve a CSSUnitValue and CSSMath* to a pixel value", ["0044.html"]], ["[css-houdini-drafts] [font-metrics-api] FontMetrics IDL is invalid", ["0022.html", "0019.html", "0018.html", "0001.html"]], ["[css-houdini-drafts] [font-metrics-api] Revised proposal of font metrics for each character", ["0060.html", "0056.html", "0055.html", "0054.html", "0053.html", "0052.html", "0051.html", "0050.html", "0038.html", "0037.html", "0036.html", "0035.html", "0034.html", "0033.html"]], ["[css-houdini-drafts] [typed-om] Align array-likes with future plans", ["0048.html", "0028.html"]], ["[css-houdini-drafts] [worklets] addModule() should reject a promise with a more specific exception", ["0025.html"]], ["[css-houdini-drafts] [worklets] relationship to JavaScript agent clusters", ["0013.html", "0012.html", "0011.html", "0010.html", "0009.html", "0008.html", "0007.html", "0006.html", "0005.html", "0004.html", "0003.html", "0002.html"]], ["[css-houdini-drafts] Pull Request: [css-animationworklet] Separate Stateful and Stateless animator interfaces #812", ["0031.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Canonical units for computed values, etc.", ["0061.html"]], ["[css-houdini-drafts] Pull Request: Add a vision document and rough Chrome roadmap", ["0027.html"]], ["Closed: [css-houdini-drafts] [css-layout] Bikeshedding the percentageInlineSize / percentageBlockSize names?", ["0017.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Canonical units for computed values", ["0063.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Substituting registered properties into non-registered properties", ["0039.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Type-aware substitution", ["0032.html"]], ["Closed: [css-houdini-drafts] [worklets] addModule() should reject a promise with a more specific exception", ["0026.html"]]], [["[css-houdini-drafts] [css-animationworklet] Experiment with different sync models for animations with mixed accelerated and non-accelerated properties", ["0004.html", "0003.html"]], ["[css-houdini-drafts] [css-paint-api] HTML spec switches on CanvasImageSource", ["0011.html", "0006.html", "0005.html"]], ["[css-houdini-drafts] [css-properties-values-api] Allow custom property descriptors with a CSS @-rule", ["0016.html"]], ["[css-houdini-drafts] [css-properties-values-api] Composition behavior of lists", ["0013.html", "0010.html"]], ["[css-houdini-drafts] [css-properties-values-api] Fallbacks for registered properties", ["0018.html", "0008.html"]], ["[css-houdini-drafts] [css-properties-values-api] Supports basic shapes / paths", ["0007.html"]], ["[css-houdini-drafts] [worklets] addModule() should reject a promise with a more specific exception", ["0015.html", "0012.html", "0009.html"]], ["[css-houdini-drafts] [worklets] Fetching and invoking a worklet script which reports an exception", ["0014.html"]], ["[css-houdini-drafts] fix typo", ["0002.html"]], ["[css-houdini-drafts] Pull Request: fix typo", ["0001.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Fallbacks for registered properties", ["0017.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Remove <transform-list>?", ["0000.html"]]], [["[css-houdini-drafts] [css-animationworklet] Clean up after migrating the repo (fixes #788)", ["0012.html"]], ["[css-houdini-drafts] [css-animationworklet] Experiment with different sync models for animations with mixed accelerated and non-accelerated properties", ["0100.html"]], ["[css-houdini-drafts] [css-animationworklet] Migrate repository from WICG to Houdini Drafts", ["0007.html", "0006.html", "0005.html"]], ["[css-houdini-drafts] [css-animationworklet] When do time-based animations run?", ["0099.html"]], ["[css-houdini-drafts] [css-layout-api] Should display: layout(x) work on any element?", ["0032.html", "0031.html", "0030.html", "0029.html"]], ["[css-houdini-drafts] [css-paint-api] broken links", ["0003.html", "0002.html"]], ["[css-houdini-drafts] [css-paint-api] CSS Paint API leaks browsing history", ["0026.html", "0024.html", "0022.html", "0021.html", "0020.html", "0016.html", "0015.html", "0014.html", "0013.html"]], ["[css-houdini-drafts] [css-properties-values-api] Composition behavior of lists", ["0043.html", "0041.html", "0040.html"]], ["[css-houdini-drafts] [css-properties-values-api] Computed value substitution", ["0025.html", "0017.html"]], ["[css-houdini-drafts] [css-properties-values-api] Remove <transform-list>?", ["0039.html", "0033.html"]], ["[css-houdini-drafts] [css-properties-values-api] Substituting registered properties into non-registered properties", ["0023.html", "0019.html"]], ["[css-houdini-drafts] [css-properties-values-api] Type-aware substitution", ["0027.html", "0018.html"]], ["[css-houdini-drafts] [css-typed-om] Drop CSSPositionValue", ["0101.html"]], ["[css-houdini-drafts] [css-typed-om] need to specify mappings between syntax, typed OM object tree, and underlying representation", ["0004.html"]], ["[css-houdini-drafts] [css-typed-om] Provide a way to resolve a CSSUnitValue and CSSMath* to a pixel value", ["0038.html", "0037.html", "0036.html", "0035.html", "0034.html"]], ["[css-houdini-drafts] Add generic mechanism for warning of non-accelerated animations", ["0050.html"]], ["[css-houdini-drafts] Allow animators to specify their desired frame rate", ["0083.html", "0082.html", "0078.html"]], ["[css-houdini-drafts] Data on performance impact of syncing state for stateful animators across threads", ["0094.html", "0084.html"]], ["[css-houdini-drafts] Define semantic of finish/reverse/playbackRate for Worklet Animation", ["0072.html", "0071.html"]], ["[css-houdini-drafts] Fix typo: be -> by", ["0047.html"]], ["[css-houdini-drafts] Improve potential for generating multiple animation frames in parallel", ["0091.html", "0088.html", "0085.html", "0081.html", "0080.html", "0079.html", "0077.html", "0076.html", "0075.html", "0074.html", "0073.html"]], ["[css-houdini-drafts] Mechanism to pause an animation", ["0056.html", "0055.html", "0054.html", "0053.html", "0052.html"]], ["[css-houdini-drafts] Option to run in-sync with rAF", ["0048.html"]], ["[css-houdini-drafts] partial interface AnimationEffect exposure set doesn't match original defintion", ["0096.html", "0095.html", "0093.html", "0092.html", "0090.html"]], ["[css-houdini-drafts] Pass additional timelines as part of additional options and only have a single timeline in constructor.", ["0070.html", "0069.html", "0068.html"]], ["[css-houdini-drafts] Pull Request: [css-animationworklet] Clean up after migrating the repo", ["0011.html"]], ["[css-houdini-drafts] Pull Request: [css-animationworklet] Migrate wicg/animationworklet repo to css-houdini-drafts", ["0008.html"]], ["[css-houdini-drafts] Pull Request: [css-animationworklet] update ScrollTimeline usage in examples", ["0045.html"]], ["[css-houdini-drafts] Pull Request: [css-workletanimation] merge changes from original repo since migration", ["0044.html"]], ["[css-houdini-drafts] Pull Request: Change children attribute from sequence<T> to FrozenArray<T>", ["0028.html"]], ["[css-houdini-drafts] Pull Request: Fix typo: be -> by", ["0046.html"]], ["[css-houdini-drafts] Pull Request: Make BreakToken#childBreakTokens a FrozenArray", ["0000.html"]], ["[css-houdini-drafts] Pure/idempotent representation", ["0067.html", "0066.html", "0065.html", "0064.html", "0063.html", "0062.html", "0061.html", "0060.html", "0059.html", "0058.html", "0057.html"]], ["[css-houdini-drafts] Scrollspy use case", ["0089.html", "0087.html", "0086.html"]], ["[css-houdini-drafts] Support animating all properties", ["0097.html", "0049.html"]], ["[css-houdini-drafts] Typo: use snappedConcreteObjectSize in step 8", ["0042.html"]], ["[css-houdini-drafts] When do time-based animations run?", ["0051.html"]], ["Closed: [css-houdini-drafts] [css-animationworklet] Migrate repository from WICG to Houdini Drafts", ["0009.html"]], ["Closed: [css-houdini-drafts] [css-animationworklet] When do time-based animations run?", ["0098.html"]], ["Closed: [css-houdini-drafts] [css-layout-api] childBreakTokens attribute should be FrozenArray<ChildBreakToken>", ["0001.html"]], ["Closed: [css-houdini-drafts] pre-render", ["0010.html"]]], [["[css-houdini-drafts] [css-layout-api] Assorted TAG feedback", ["0011.html"]], ["[css-houdini-drafts] [css-layout-api] Generator vs. Promise design for the API", ["0014.html"]], ["[css-houdini-drafts] [css-layout-api] Intrinsic sizes and orthogonal children behaviour", ["0016.html", "0001.html"]], ["[css-houdini-drafts] [css-layout-api] Missing fragments and absolute children", ["0013.html", "0000.html"]], ["[css-houdini-drafts] [css-layout-api][css-paint-api][css-properties-values-api] Use partial namespace CSS", ["0063.html"]], ["[css-houdini-drafts] [css-layout] Bikeshedding the percentageInlineSize / percentageBlockSize names?", ["0015.html"]], ["[css-houdini-drafts] [css-paint-api] Allow inputArguments define optional arguments", ["0017.html"]], ["[css-houdini-drafts] [css-properties-and-values-api] define how typed custom properties influence @supports", ["0022.html", "0021.html"]], ["[css-houdini-drafts] [css-properties-values-api-1] What is the computed value of a <transform-list> in the middle of a layout dependent matrix decomposed interpolation?", ["0024.html"]], ["[css-houdini-drafts] [css-properties-values-api] Add 'Latest published version' links to EDs", ["0026.html"]], ["[css-houdini-drafts] [css-properties-values-api] Allow comma-separated lists in registered properties", ["0005.html"]], ["[css-houdini-drafts] [css-properties-values-api] Allow custom property descriptors with a CSS @-rule", ["0048.html"]], ["[css-houdini-drafts] [css-properties-values-api] Clarify computed value of <transform-function>", ["0044.html"]], ["[css-houdini-drafts] [css-properties-values-api] Describe font-relative unit cycles.", ["0032.html"]], ["[css-houdini-drafts] [css-properties-values-api] Is <transform-list># allowed?", ["0038.html"]], ["[css-houdini-drafts] [css-properties-values-api] Multiple base URLs", ["0030.html", "0003.html"]], ["[css-houdini-drafts] [css-properties-values-api] Syntax-checking in CSSStyleDeclaration.setProperty", ["0052.html", "0045.html", "0037.html", "0036.html"]], ["[css-houdini-drafts] [css-properties-values-api] Typed custom property declarations are syntax-checked at computed-value time, not parse time.", ["0035.html", "0033.html"]], ["[css-houdini-drafts] [css-properties-values-api] var() references to <length> type properties with font-relative lengths", ["0047.html"]], ["[css-houdini-drafts] [css-properties-values-api] What does Typed OM return for <transform-function> type properties?", ["0051.html"]], ["[css-houdini-drafts] [css-typed-om-2] Spec up URIValue, ShapeValue, StringValue, CounterValue, TimeValue, PercentageValue, FrequencyValue, VoiceValue, CustomIdentValue, TransitionTimingFunctionValue. What is attr(<identifier>) in other specs?", ["0049.html"]], ["[css-houdini-drafts] [css-typed-om] 6.3. CSSUnitValue Serialization unit string bug", ["0055.html"]], ["[css-houdini-drafts] [css-typed-om] Add a note about partial implementations?", ["0009.html"]], ["[css-houdini-drafts] [css-typed-om] Change CSSKeywordValue's attribute to allow forward-compatible upgrades", ["0058.html"]], ["[css-houdini-drafts] [css-typed-om] Define reification of registered custom properties.", ["0054.html", "0053.html", "0043.html"]], ["[css-houdini-drafts] [css-typed-om] need to specify mappings between syntax, typed OM object tree, and underlying representation", ["0073.html", "0065.html"]], ["[css-houdini-drafts] [css-typed-om] What does lack of range restriction imply about serialization?", ["0071.html", "0066.html"]], ["[css-houdini-drafts] [css-typed-om] Why do CSSStyleValues created from strings serialize to the string?", ["0008.html"]], ["[css-houdini-drafts] [css-typed-om]Define precisely which properties are list-valued and which aren't, probably in an appendix.", ["0046.html"]], ["[css-houdini-drafts] [typed-om] Trim CSSResourceValue and subclasses to opaque objects for this level, punt rest to level 2", ["0064.html", "0034.html"]], ["[css-houdini-drafts] [worklets-1] should require MIME type enforcement for worklet-loaded script", ["0069.html", "0068.html", "0067.html"]], ["[css-houdini-drafts] Former editors (Shane and Elliot)", ["0006.html"]], ["[css-houdini-drafts] Observer for property being applied?", ["0004.html", "0002.html"]], ["[css-houdini-drafts] Pull Request: [css-layout-api][css-paint-api][css-properties-values-api] Use partial namespace CSS", ["0062.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Clarify computed value of <transform-function>", ["0041.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Clarify list type in Example 3.", ["0040.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Describe font-relative unit cycles.", ["0031.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Resolve lengths for <image> values.", ["0039.html"]], ["[css-houdini-drafts] Pull Request: [css-typed-om] Define reification of registered custom properties.", ["0042.html"]], ["[css-houdini-drafts] Pull Request: Serialize out of range values as calcs", ["0012.html"]], ["[css-houdini-drafts] Serialize out of range values as calcs", ["0010.html"]], ["Closed: [css-houdini-drafts] [css-properties-and-values-api] define how typed custom properties influence @supports", ["0019.html"]], ["Closed: [css-houdini-drafts] [css-properties-and-values] Setting/registering is allowed to be order-dependent", ["0029.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api-1] What is the computed value of a <transform-list> in the middle of a layout dependent matrix decomposed interpolation?", ["0023.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Add 'Latest published version' links to EDs", ["0025.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Allow comma-separated lists in registered properties", ["0020.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] how should typed URLs resolve?", ["0028.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] inherits should be true by default", ["0018.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Multiple base URLs", ["0027.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] var() references to <length> type properties with font-relative lengths", ["0050.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] 'fr' units cannot be used in a calc", ["0059.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] 6.3. CSSUnitValue Serialization unit string bug", ["0056.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Canonical units in computed values", ["0060.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Change CSSKeywordValue's attribute to allow forward-compatible upgrades", ["0057.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] What does lack of range restriction imply about serialization?", ["0072.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Why do CSSStyleValues created from strings serialize to the string?", ["0061.html"]], ["Closed: [css-houdini-drafts] [worklets-1] should require MIME type enforcement for worklet-loaded script", ["0070.html"]], ["Closed: [css-houdini-drafts] Former editors (Shane and Elliot)", ["0007.html"]]], [["[css-houdini-drafts] [css-layout-api] Add Diagrams to visualize and ease understanding", ["0008.html"]], ["[css-houdini-drafts] [css-layout-api] Add Diagrams to visualize terminology", ["0011.html", "0010.html", "0009.html"]], ["[css-houdini-drafts] [css-layout-api] Add note in layout api about yelling at developers", ["0033.html"]], ["[css-houdini-drafts] [css-layout-api] ConstraintSpace needs more data members", ["0031.html"]], ["[css-houdini-drafts] [css-layout-api] Decide on how to do min/max Content Sizes.", ["0038.html"]], ["[css-houdini-drafts] [css-layout-api] Have a inputPropertiesForMinMaxContentContribution?", ["0028.html"]], ["[css-houdini-drafts] [css-layout-api] LayoutClass should probably have a `measure` callback", ["0027.html"]], ["[css-houdini-drafts] [css-layout-api] Naming of LayoutFragment#inlineSize, blockSize.", ["0036.html"]], ["[css-houdini-drafts] [css-layout-api] Rename blockScrollOffset to something.", ["0030.html"]], ["[css-houdini-drafts] [css-layout-api] Rename DoLayout to LayoutNextFragment", ["0024.html"]], ["[css-houdini-drafts] [css-layout-api] Review the LayoutOptions.sizing parameter", ["0039.html"]], ["[css-houdini-drafts] [css-paint-api] Allow inputArguments define optional arguments", ["0000.html"]], ["[css-houdini-drafts] [css-paint-api] Use JS export instead of registerPaint", ["0014.html"]], ["[css-houdini-drafts] [css-properties-values-api] Allow comma-separated lists in registered properties", ["0007.html"]], ["[css-houdini-drafts] [css-properties-values-api] Multiple base URLs", ["0006.html"]], ["[css-houdini-drafts] [css-properties-values-api] Remove unregisterProperty.", ["0004.html", "0002.html"]], ["[css-houdini-drafts] Fix typo \"auther\" -> \"author\"", ["0016.html"]], ["[css-houdini-drafts] Fix typo: \"repect\" -> \"respect\"", ["0018.html"]], ["[css-houdini-drafts] frgment -> fragment", ["0021.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Explain how relative URLs work.", ["0022.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api]: Remove unregisterProperty.", ["0001.html"]], ["[css-houdini-drafts] Pull Request: Fix mixin keyword in IDL", ["0003.html"]], ["[css-houdini-drafts] Pull Request: Fix typo \"auther\" -> \"author\"", ["0015.html"]], ["[css-houdini-drafts] Pull Request: Fix typo: \"repect\" -> \"respect\"", ["0017.html"]], ["[css-houdini-drafts] Pull Request: frgment -> fragment", ["0020.html"]], ["[css-houdini-drafts] Pull Request: Make 'inherits' required.", ["0023.html"]], ["[css-houdini-drafts] Pull Request: Update web-platform-tests URLs", ["0005.html"]], ["Closed: [css-houdini-drafts] [css-layout-api] Add note in layout api about yelling at developers", ["0034.html"]], ["Closed: [css-houdini-drafts] [css-layout-api] ConstraintSpace needs more data members", ["0032.html"]], ["Closed: [css-houdini-drafts] [css-layout-api] Decide on how to do min/max Content Sizes.", ["0037.html"]], ["Closed: [css-houdini-drafts] [css-layout-api] LayoutClass should probably have a `measure` callback", ["0026.html"]], ["Closed: [css-houdini-drafts] [css-layout-api] Naming of LayoutFragment#inlineSize, blockSize.", ["0035.html"]], ["Closed: [css-houdini-drafts] [css-layout-api] Rename blockScrollOffset to something.", ["0029.html"]], ["Closed: [css-houdini-drafts] [css-layout-api] Rename DoLayout to LayoutNextFragment", ["0025.html"]], ["Closed: [css-houdini-drafts] [css-layout-api] Review the LayoutOptions.sizing parameter", ["0040.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Running author function without proper preparation.", ["0012.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Use JS export instead of registerPaint", ["0013.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] [css-paint-api] What happens to unsupported property names in the registered paint styleMap?", ["0019.html"]]], [["[css-houdini-drafts] [css-layout-api] Assorted TAG feedback", ["0020.html", "0019.html"]], ["[css-houdini-drafts] [css-layout-api] childBreakTokens attribute should be FrozenArray<ChildBreakToken>", ["0007.html"]], ["[css-houdini-drafts] [css-typed-om] 'fr' units cannot be used in a calc", ["0017.html", "0006.html"]], ["[css-houdini-drafts] [css-typed-om] 6.3. CSSUnitValue Serialization unit string bug", ["0021.html"]], ["[css-houdini-drafts] [font-metrics-api] Clarify Canvas Glyph Drawing Use Case", ["0011.html"]], ["[css-houdini-drafts] [font-metrics] Strawperson for FontMetrics API", ["0016.html", "0015.html", "0014.html", "0013.html", "0012.html"]], ["[css-houdini-drafts] [worklets] \"destination\" of script fetching should be overridden by each worklet spec", ["0018.html"]], ["[css-houdini-drafts] Change credentials mode default", ["0010.html", "0008.html", "0004.html", "0003.html", "0002.html", "0001.html", "0000.html"]], ["[css-houdini-drafts] Pull Request: [worklets] Change the default credentials mode", ["0005.html"]], ["Closed: [css-houdini-drafts] Change credentials mode default", ["0009.html"]]], [["[css-houdini-drafts] [CSS Typed OM Level 1] Incorrect spelling for \"implementation\", and the favicon is missing", ["0086.html", "0080.html"]], ["[css-houdini-drafts] [css-layout-api] Generator vs. Promise design for the API", ["0110.html", "0109.html", "0077.html", "0062.html", "0047.html"]], ["[css-houdini-drafts] [css-layout-api] Incorrect example yielding an array of LayoutFragmentRequests", ["0067.html"]], ["[css-houdini-drafts] [css-layout-api] LayoutConstraints object - Are we ok with exposing information we don't have compat on?", ["0061.html", "0046.html", "0035.html"]], ["[css-houdini-drafts] [css-layout-api] Lifetime for instance of layout class.", ["0056.html", "0032.html"]], ["[css-houdini-drafts] [css-layout-api] Lifetime policy for passed in objects, e.g. LayoutChild", ["0057.html", "0031.html"]], ["[css-houdini-drafts] [css-layout-api] Naming of LayoutFragment#inlineSize, blockSize.", ["0059.html", "0049.html", "0038.html", "0037.html", "0034.html"]], ["[css-houdini-drafts] [css-layout-api] Need to select policy for selecting global scopes.", ["0055.html", "0030.html"]], ["[css-houdini-drafts] [css-layout-api] Review the LayoutOptions.sizing parameter", ["0058.html", "0033.html"]], ["[css-houdini-drafts] [css-paint-api] Cannot get custom properties defined in body element", ["0008.html"]], ["[css-houdini-drafts] [css-paint-api] Rename paint(name, args) to paint-name(args)", ["0102.html", "0100.html", "0099.html", "0098.html", "0097.html", "0096.html", "0095.html", "0094.html", "0093.html", "0089.html", "0079.html", "0078.html", "0076.html", "0075.html", "0074.html", "0073.html", "0072.html", "0071.html", "0069.html", "0064.html", "0060.html"]], ["[css-houdini-drafts] [css-paint-api] Running author function without proper preparation.", ["0068.html", "0044.html", "0043.html", "0036.html", "0029.html", "0028.html", "0024.html", "0015.html", "0014.html", "0012.html", "0007.html", "0006.html", "0005.html", "0004.html", "0003.html", "0002.html", "0001.html"]], ["[css-houdini-drafts] [css-paint-api] The paint() function should probably take a <custom-ident>", ["0063.html", "0039.html", "0023.html"]], ["[css-houdini-drafts] [css-paint-api] Unnecessary paint-valid flag?", ["0066.html", "0026.html"]], ["[css-houdini-drafts] [css-paint-api] Use JS export instead of registerPaint", ["0065.html"]], ["[css-houdini-drafts] [css-paint-api]: APIs not exposed in Worklets", ["0040.html", "0011.html"]], ["[css-houdini-drafts] [css-properties-values-api] inherits should be true by default", ["0104.html"]], ["[css-houdini-drafts] [css-typed-om] [css-paint-api] What happens to unsupported property names in the registered paint styleMap?", ["0045.html", "0042.html"]], ["[css-houdini-drafts] [css-typed-om] Change CSSKeywordValue's attribute to allow forward-compatible upgrades", ["0048.html"]], ["[css-houdini-drafts] [css-typed-om] Provide convenience methods to resolve lengths/etc", ["0103.html"]], ["[css-houdini-drafts] [css-worklets] [css-typed-om] CSSResourceValues constructed within Worklets should have state \"unloaded\".", ["0018.html"]], ["[css-houdini-drafts] [typed-om] Trim CSSResourceValue and subclasses to opaque objects for this level, punt rest to level 2", ["0092.html", "0091.html", "0090.html", "0088.html", "0087.html", "0084.html", "0083.html", "0081.html", "0054.html", "0053.html"]], ["[css-houdini-drafts] [worklets] Error handling in WorkletGlobalScope", ["0108.html", "0107.html"]], ["[css-houdini-drafts] [worklets] What are the API-s exposed in Worklets?", ["0022.html", "0020.html"]], ["[css-houdini-drafts] Former editors (Shane and Elliot)", ["0106.html", "0105.html"]], ["[css-houdini-drafts] How are paint worklets picked?", ["0017.html"]], ["[css-houdini-drafts] Pull Request: [css-typed-om] Add detail considering image state change and repaint.", ["0000.html"]], ["[css-houdini-drafts] Restrict workers that `CSSStyleValue` is exposed to", ["0051.html"]], ["[css-houdini-drafts] Should we be using DOMString, USVString, or CSSOMString?", ["0052.html", "0050.html"]], ["Closed: [css-houdini-drafts] [CSS Typed OM Level 1] Incorrect spelling for \"implementation\", and the favicon is missing", ["0085.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Calls to paint function should provide the snapped concrete size.", ["0010.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Cannot get custom properties defined in body element", ["0009.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Converting a URL to a CanvasImageSource?", ["0025.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Rename paint(name, args) to paint-name(args)", ["0101.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Running author function without proper preparation.", ["0013.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] The paint() function should probably take a <custom-ident>", ["0070.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Unnecessary paint-valid flag?", ["0082.html"]], ["Closed: [css-houdini-drafts] [css-paint-api]: APIs not exposed in Worklets", ["0041.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Does the is2D design allow for inconsistent interpretation of CSSTransformComponents?", ["0027.html"]], ["Closed: [css-houdini-drafts] [css-worklets] [css-typed-om] CSSResourceValues constructed within Worklets should have state \"unloaded\".", ["0019.html"]], ["Closed: [css-houdini-drafts] [worklets] What are the API-s exposed in Worklets?", ["0021.html"]], ["Closed: [css-houdini-drafts] How are paint worklets picked?", ["0016.html"]]], [["[css-houdini-drafts] [css-paint-api] The paint() function should probably take a <custom-ident>", ["0054.html"]], ["[css-houdini-drafts] [css-typed-om-1] What does computedStyleMap() do on elements that are in documents with no browsing context?", ["0106.html", "0105.html", "0104.html", "0099.html", "0098.html", "0072.html", "0071.html"]], ["[css-houdini-drafts] [css-typed-om-1] Why is the new thing on ElementCSSInlineStyle called attributeStyleMap, not styleMap", ["0111.html"]], ["[css-houdini-drafts] [css-typed-om] 'fr' units cannot be used in a calc", ["0078.html", "0077.html", "0076.html", "0075.html", "0074.html", "0068.html"]], ["[css-houdini-drafts] [css-typed-om] Add a note about partial implementations?", ["0063.html"]], ["[css-houdini-drafts] [css-typed-om] Canonical units in computed values", ["0060.html", "0044.html", "0043.html"]], ["[css-houdini-drafts] [css-typed-om] Change CSSKeywordValue's attribute to allow forward-compatible upgrades", ["0084.html", "0083.html", "0082.html", "0081.html", "0080.html", "0079.html"]], ["[css-houdini-drafts] [css-typed-om] CSSSkewY serialization typo", ["0102.html"]], ["[css-houdini-drafts] [css-typed-om] Does the is2D design allow for inconsistent interpretation of CSSTransformComponents?", ["0064.html"]], ["[css-houdini-drafts] [css-typed-om] How does Typed OM interact with existing setters on CSSStyleDeclaration?", ["0032.html", "0025.html", "0023.html", "0021.html", "0017.html", "0013.html", "0011.html", "0010.html"]], ["[css-houdini-drafts] [css-typed-om] How is state change in CSSURLImageValue handled?", ["0110.html", "0109.html", "0108.html"]], ["[css-houdini-drafts] [css-typed-om] is2D should be false to serialize with 'translate3d' and true for 'translate'", ["0100.html"]], ["[css-houdini-drafts] [css-typed-om] Missing properties in reification table", ["0107.html"]], ["[css-houdini-drafts] [css-typed-om] Moving cached computedStyleMap to another document", ["0041.html", "0040.html", "0039.html"]], ["[css-houdini-drafts] [css-typed-om] need to specify mappings between syntax, typed OM object tree, and underlying representation", ["0024.html", "0022.html", "0020.html", "0019.html", "0016.html", "0004.html"]], ["[css-houdini-drafts] [css-typed-om] Setting list-valued properties to var() refs.", ["0037.html", "0003.html", "0000.html"]], ["[css-houdini-drafts] [css-typed-om] Simplifying reification language", ["0066.html", "0059.html"]], ["[css-houdini-drafts] [css-typed-om] What does lack of range restriction imply about serialization?", ["0092.html", "0090.html", "0065.html"]], ["[css-houdini-drafts] [css-typed-om] What to do about descriptors?", ["0057.html", "0055.html"]], ["[css-houdini-drafts] [css-typed-om] Why do CSSStyleValues created from strings serialize to the string?", ["0062.html", "0061.html", "0053.html"]], ["[css-houdini-drafts] [css-typed-om] Why does `get` return by reference and `getAll` by value?", ["0030.html", "0015.html", "0008.html"]], ["[css-houdini-drafts] [css-typed-om]What actually happens when sets happen on a StylePropertyMap?", ["0027.html", "0012.html", "0006.html", "0005.html"]], ["[css-houdini-drafts] [css-typed-om]What happens when things inside a StylePropertyMap are mutated in-place?", ["0033.html", "0007.html"]], ["[css-houdini-drafts] [css-typed-om]What is the expected behavior when CSSStyleValues in a readonly map are mutated?", ["0036.html", "0018.html", "0014.html", "0009.html"]], ["[css-houdini-drafts] [font-metrics-api] Potential fingerprinting vector?", ["0091.html", "0089.html", "0088.html"]], ["[css-houdini-drafts] [typed-om] Trim CSSResourceValue and subclasses to opaque objects for this level, punt rest to level 2", ["0070.html", "0052.html", "0051.html", "0050.html", "0002.html", "0001.html"]], ["[css-houdini-drafts] [worklets] What are the API-s exposed in Worklets?", ["0097.html", "0096.html", "0095.html", "0094.html", "0093.html"]], ["[css-houdini-drafts] Add font reification", ["0085.html", "0073.html", "0069.html"]], ["[css-houdini-drafts] Add some more reification", ["0087.html", "0086.html"]], ["[css-houdini-drafts] Add some reification", ["0047.html"]], ["[css-houdini-drafts] CSSImageValue intrinsicWidth/Height should be unsigned long", ["0026.html"]], ["[css-houdini-drafts] Pull Request: Add font reification", ["0058.html"]], ["[css-houdini-drafts] Pull Request: Add some more reification", ["0048.html"]], ["[css-houdini-drafts] Pull Request: Add some reification", ["0046.html", "0045.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSSSkewY serialization typo", ["0103.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] How does Typed OM interact with existing setters on CSSStyleDeclaration?", ["0031.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] is2D should be false to serialize with 'translate3d' and true for 'translate'", ["0101.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Moving cached computedStyleMap to another document", ["0042.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Setting list-valued properties to var() refs.", ["0038.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Shorthands in StylePropertyMap", ["0049.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Simplifying reification language", ["0067.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] What to do about descriptors?", ["0056.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Why does `get` return by reference and `getAll` by value?", ["0029.html"]], ["Closed: [css-houdini-drafts] [css-typed-om]What actually happens when sets happen on a StylePropertyMap?", ["0028.html"]], ["Closed: [css-houdini-drafts] [css-typed-om]What happens when things inside a StylePropertyMap are mutated in-place?", ["0034.html"]], ["Closed: [css-houdini-drafts] [css-typed-om]What is the expected behavior when CSSStyleValues in a readonly map are mutated?", ["0035.html"]]], [["[css-houdini-drafts] [css-paint-api] Cannot get custom properties defined in body element", ["0058.html", "0032.html"]], ["[css-houdini-drafts] [css-properties-values-api] named parameters in custom values", ["0300.html", "0267.html"]], ["[css-houdini-drafts] [css-typed-om-1] \"equal numeric values\" algorithm is possibly problematic", ["0251.html", "0249.html", "0230.html", "0225.html", "0224.html", "0220.html", "0209.html"]], ["[css-houdini-drafts] [css-typed-om-1] \"equal numeric values\" may return false when people might expect true", ["0411.html", "0360.html", "0328.html", "0222.html", "0219.html", "0210.html"]], ["[css-houdini-drafts] [css-typed-om-1] \"invert\" should be clear about what it means by \"inverse\"", ["0208.html"]], ["[css-houdini-drafts] [css-typed-om-1] \"negate\" needs to say what global it's creating things in", ["0198.html"]], ["[css-houdini-drafts] [css-typed-om-1] \"rectify a numberish value\" doesn't define the global it creates the CSSUnitValue in", ["0141.html"]], ["[css-houdini-drafts] [css-typed-om-1] Behavior of indexed setter on CSSUnparsedValue is not defined.", ["0195.html", "0193.html", "0129.html"]], ["[css-houdini-drafts] [css-typed-om-1] CSSUnparsedValue's \"variable\" getter needs to be defined.", ["0189.html", "0133.html"]], ["[css-houdini-drafts] [css-typed-om-1] CSSUnparsedValue's length could be defined more clearly", ["0244.html", "0132.html"]], ["[css-houdini-drafts] [css-typed-om-1] CSSVariableReferenceValue's \"variable\" getter needs to be defined.", ["0246.html", "0191.html"]], ["[css-houdini-drafts] [css-typed-om-1] Does computedStyleMap() always return a new object?", ["0264.html", "0262.html", "0261.html", "0260.html", "0149.html", "0146.html", "0121.html"]], ["[css-houdini-drafts] [css-typed-om-1] Duplicating a CSSVariableReferenceValue is harder than it probably should be", ["0388.html", "0352.html", "0331.html", "0197.html", "0196.html", "0194.html", "0131.html"]], ["[css-houdini-drafts] [css-typed-om-1] Exposed value for partial interface Element makes no sense and is not valid Web IDL", ["0263.html", "0135.html", "0134.html", "0125.html", "0120.html"]], ["[css-houdini-drafts] [css-typed-om-1] Exposed value for partial interface Element makes no sense.", ["0118.html"]], ["[css-houdini-drafts] [css-typed-om-1] How does StylePropertyMap interact with CSSStyleDeclaration?", ["0226.html", "0169.html", "0167.html", "0153.html", "0148.html", "0140.html"]], ["[css-houdini-drafts] [css-typed-om-1] Is it intentional that only existing items in a CSSUnparsedValue can be mutated?", ["0258.html", "0155.html", "0154.html", "0152.html", "0130.html"]], ["[css-houdini-drafts] [css-typed-om-1] liveness behavior not very clear for the set of properties on StylePropertyMaps", ["0123.html"]], ["[css-houdini-drafts] [css-typed-om-1] rectify a keywordish value allows creation of empty-string CSSKeywordValues", ["0233.html", "0229.html", "0136.html"]], ["[css-houdini-drafts] [css-typed-om-1] rectify a keywordish value doesn't define the global it creates the CSSKeywordValue in", ["0231.html", "0223.html", "0192.html", "0168.html", "0156.html", "0150.html", "0147.html", "0144.html", "0143.html", "0137.html"]], ["[css-houdini-drafts] [css-typed-om-1] Should \"negate\" handle a CSSMathSum of CSSMathNegates?", ["0270.html", "0266.html", "0247.html", "0201.html", "0200.html", "0199.html"]], ["[css-houdini-drafts] [css-typed-om-1] Should probably be more explicit about 0 handling in \"invert\"", ["0207.html"]], ["[css-houdini-drafts] [css-typed-om-1] What does computedStyleMap() do on elements that are in documents with no browsing context?", ["0293.html", "0282.html", "0278.html", "0269.html", "0268.html", "0119.html"]], ["[css-houdini-drafts] [css-typed-om-1] Why is the new thing on ElementCSSInlineStyle called attributeStyleMap, not styleMap", ["0138.html", "0126.html", "0122.html"]], ["[css-houdini-drafts] [css-typed-om-1]\"contains\" link in \"delete\" section is broken", ["0114.html", "0103.html"]], ["[css-houdini-drafts] [css-typed-om-1]\"Throw a TypeError and exit this algorithm\" wording is weird", ["0104.html"]], ["[css-houdini-drafts] [css-typed-om-1]has() behavior for StylePropertyMap undefined", ["0158.html", "0116.html"]], ["[css-houdini-drafts] [css-typed-om-1]Likely typo in prose for StylePropertyMapReadOnly", ["0127.html", "0098.html"]], ["[css-houdini-drafts] [css-typed-om-1]Manual definition of the map entries for StylePropertyMapReadOnly contradicts Web IDL", ["0273.html", "0111.html", "0110.html", "0108.html", "0107.html", "0106.html", "0105.html", "0101.html", "0099.html", "0097.html"]], ["[css-houdini-drafts] [css-typed-om-1]Probably need to define the order of additions in add() step 3", ["0265.html", "0259.html", "0204.html"]], ["[css-houdini-drafts] [css-typed-om-1]Probably need to define the order of multiplications in mul() step 3", ["0205.html"]], ["[css-houdini-drafts] [css-typed-om-1]Probably need to define the order of multiplications in mul() step 3 and step 4", ["0240.html", "0206.html"]], ["[css-houdini-drafts] [css-typed-om-1]The IDL for StylePropertyMap is not valid due to multiple maplike declarations", ["0160.html"]], ["[css-houdini-drafts] [css-typed-om-1]The IDL for StylePropertyMapReadOnly has an invalid \"get\" method", ["0172.html", "0095.html"]], ["[css-houdini-drafts] [css-typed-om-1]The IDL for StylePropertyMapReadOnly has an invalid \"has\" method", ["0161.html", "0139.html", "0109.html", "0102.html", "0100.html", "0096.html"]], ["[css-houdini-drafts] [css-typed-om-1]update() behaves a bit oddly for non-single-valued properties", ["0185.html", "0166.html", "0163.html", "0151.html", "0112.html"]], ["[css-houdini-drafts] [css-typed-om] \"get all values from a StylePropertyMap\" assumes underlying model might not be list", ["0027.html"]], ["[css-houdini-drafts] [css-typed-om] Add pseudoElt argument to computedStyleMap(), or wait for PseudoElement interface?", ["0003.html", "0001.html", "0000.html"]], ["[css-houdini-drafts] [css-typed-om] computedStyleMap()", ["0339.html", "0313.html", "0312.html"]], ["[css-houdini-drafts] [css-typed-om] CSSImageValue should specify units of intrinsicWidth and intrinsicHeight", ["0034.html"]], ["[css-houdini-drafts] [css-typed-om] CSSStyleValue normalization", ["0342.html", "0305.html"]], ["[css-houdini-drafts] [css-typed-om] CSSURLImageValue", ["0356.html", "0355.html", "0346.html", "0345.html", "0314.html"]], ["[css-houdini-drafts] [css-typed-om] CSSURLImageValue constructor probably shouldn't require \"url()\" around the URL", ["0276.html", "0036.html"]], ["[css-houdini-drafts] [css-typed-om] CSSURLImageValue url setter should be specified", ["0069.html", "0052.html", "0051.html", "0050.html", "0044.html", "0037.html"]], ["[css-houdini-drafts] [css-typed-om] Describe how the StylePropertyMaps should interact with custom properties", ["0006.html"]], ["[css-houdini-drafts] [css-typed-om] Do we need an updateAll() method that gets and sets a list?", ["0177.html", "0064.html"]], ["[css-houdini-drafts] [css-typed-om] Does the is2D design allow for inconsistent interpretation of CSSTransformComponents?", ["0253.html", "0252.html", "0250.html", "0248.html", "0090.html", "0078.html", "0067.html", "0062.html", "0023.html", "0019.html"]], ["[css-houdini-drafts] [css-typed-om] Editorial: \"If value is an empty string throw\"", ["0315.html"]], ["[css-houdini-drafts] [css-typed-om] If parseMultiple is true, but property is a single-valued property", ["0319.html", "0307.html"]], ["[css-houdini-drafts] [css-typed-om] Let props be the value of this\u2019s [[declarations]] internal slot internal slot", ["0322.html", "0311.html", "0310.html"]], ["[css-houdini-drafts] [css-typed-om] Link \"CSS Values\"", ["0406.html", "0373.html", "0358.html", "0324.html", "0301.html"]], ["[css-houdini-drafts] [css-typed-om] make green block under \"subdivide into iterations\" red", ["0304.html"]], ["[css-houdini-drafts] [css-typed-om] Missing spec definition for CSSTransformValue.set", ["0283.html"]], ["[css-houdini-drafts] [css-typed-om] need to specify mappings between syntax, typed OM object tree, and underlying representation", ["0433.html", "0428.html", "0427.html", "0425.html"]], ["[css-houdini-drafts] [css-typed-om] parse a CSSStyleValue: let usage", ["0323.html", "0309.html", "0306.html"]], ["[css-houdini-drafts] [css-typed-om] Question about computed values", ["0176.html", "0092.html", "0089.html"]], ["[css-houdini-drafts] [css-typed-om] references to the \"match\" definition should link to it", ["0030.html"]], ["[css-houdini-drafts] [css-typed-om] Reifying text-decoration-line", ["0394.html", "0392.html"]], ["[css-houdini-drafts] [css-typed-om] rule on inferring <length-percentage> is too vague", ["0255.html", "0182.html"]], ["[css-houdini-drafts] [css-typed-om] Serialization of CSSStyleValues constructed from string", ["0017.html", "0016.html"]], ["[css-houdini-drafts] [css-typed-om] Setting list-valued properties to var() refs.", ["0395.html", "0390.html", "0351.html", "0350.html"]], ["[css-houdini-drafts] [css-typed-om] Shorthands in StylePropertyMap", ["0091.html", "0088.html", "0076.html", "0057.html"]], ["[css-houdini-drafts] [css-typed-om] Should StylePropertyMapReadonly.size be unsigned long?", ["0337.html"]], ["[css-houdini-drafts] [css-typed-om] Significance of maplike in StylePropertyMap", ["0171.html", "0084.html", "0056.html"]], ["[css-houdini-drafts] [css-typed-om] spec should clarify inheritance of CSSImageValue from CSSResourceValue for non-network image types", ["0035.html", "0033.html"]], ["[css-houdini-drafts] [css-typed-om] Spec up ColorValue", ["0015.html"]], ["[css-houdini-drafts] [css-typed-om] specify CSSMatrixComponentOptions default with IDL defaults?", ["0291.html"]], ["[css-houdini-drafts] [css-typed-om] Stringification behavior", ["0145.html", "0115.html"]], ["[css-houdini-drafts] [css-typed-om] StylePropertyMap order", ["0435.html", "0434.html", "0344.html", "0341.html", "0340.html", "0338.html", "0308.html"]], ["[css-houdini-drafts] [css-typed-om] Transform serialization wording should be rephrased", ["0013.html"]], ["[css-houdini-drafts] [css-typed-om] Unclear how parse a CSSStyleValue returns CSSStyleValue objects", ["0410.html", "0374.html", "0359.html", "0336.html"]], ["[css-houdini-drafts] [css-typed-om] Unsupported color values", ["0296.html", "0294.html", "0281.html"]], ["[css-houdini-drafts] [css-typed-om] What do numeric font weights reify to?", ["0381.html", "0377.html", "0354.html"]], ["[css-houdini-drafts] [css-typed-om] What does lack of range restriction imply about serialization?", ["0290.html", "0289.html", "0288.html", "0174.html", "0117.html", "0093.html", "0061.html", "0054.html", "0029.html", "0018.html"]], ["[css-houdini-drafts] [css-typed-om]Define precisely which properties are list-valued and which aren't, probably in an appendix.", ["0075.html", "0074.html", "0063.html"]], ["[css-houdini-drafts] [typed-om] Trim CSSResourceValue and subclasses to opaque objects for this level, punt rest to level 2", ["0441.html", "0440.html", "0439.html", "0438.html", "0437.html", "0431.html", "0430.html", "0429.html", "0426.html", "0424.html", "0421.html", "0420.html", "0419.html", "0404.html", "0398.html", "0393.html", "0391.html"]], ["[css-houdini-drafts] Add clarification about custom properties in StylePropertyMaps", ["0008.html"]], ["[css-houdini-drafts] Add CSSMathValue Serialization body", ["0005.html"]], ["[css-houdini-drafts] Add full table of properties and what CSSStyleValues types they normalize to", ["0257.html", "0079.html", "0025.html"]], ["[css-houdini-drafts] Clarify CSSNumericValues.equals", ["0011.html"]], ["[css-houdini-drafts] Clarify CSSUnparsedValue and CSSVariableReferenceValue.", ["0241.html"]], ["[css-houdini-drafts] Clarify CSSURLImageValue.url", ["0432.html"]], ["[css-houdini-drafts] computedStyleMap() must return same object", ["0298.html", "0295.html"]], ["[css-houdini-drafts] Create EXPLAINER.md first draft", ["0022.html", "0021.html"]], ["[css-houdini-drafts] CSSImageValue intrinsicWidth/Height should be unsigned long", ["0422.html", "0417.html", "0413.html", "0412.html", "0402.html", "0389.html", "0365.html"]], ["[css-houdini-drafts] CSSImageValue ratio", ["0403.html", "0364.html"]], ["[css-houdini-drafts] CSSImageValue ratio and no-cors fetches", ["0400.html", "0366.html"]], ["[css-houdini-drafts] CSSPositionValue definition should state rules for mapping syntax to objects", ["0031.html", "0028.html"]], ["[css-houdini-drafts] CSSStyleValue static methods do not return anything", ["0302.html"]], ["[css-houdini-drafts] CSSURLImageValue url internal slot links to url IDL attribute", ["0423.html", "0418.html", "0407.html", "0378.html", "0362.html"]], ["[css-houdini-drafts] Editorial: \"initially be\"", ["0405.html", "0379.html", "0357.html"]], ["[css-houdini-drafts] Example 7 should be polling `computedStyleMap()` not attributeStyleMap", ["0039.html"]], ["[css-houdini-drafts] Extend match concept to other style values", ["0009.html"]], ["[css-houdini-drafts] Gather and publish CSS Typed OM performance data in an explainer?", ["0254.html", "0179.html", "0085.html", "0077.html", "0060.html", "0059.html", "0043.html", "0042.html", "0040.html"]], ["[css-houdini-drafts] Pull Request: Add a few examples to the reification table", ["0349.html", "0348.html"]], ["[css-houdini-drafts] Pull Request: Add description of CSSURLImageValue getter", ["0046.html"]], ["[css-houdini-drafts] Pull Request: Add match references", ["0049.html"]], ["[css-houdini-drafts] Pull Request: Add spec text for CSSTransformValue.set", ["0285.html", "0284.html"]], ["[css-houdini-drafts] Pull Request: Add table of what popular properties normalize to", ["0024.html"]], ["[css-houdini-drafts] Pull Request: Add units of `CSSImageValue`.intrinsic{Width, Height}", ["0045.html"]], ["[css-houdini-drafts] Pull Request: Be more explicit about throwing RangeError in CSSMathValue.invert()", ["0212.html", "0211.html"]], ["[css-houdini-drafts] Pull Request: Clarify CSSUnparsedValue and CSSVariableReferenceValue.", ["0203.html", "0202.html"]], ["[css-houdini-drafts] Pull Request: Clarify CSSURLImageValue.url", ["0048.html"]], ["[css-houdini-drafts] Pull Request: Clarify inverse to be multiplicative inverse.", ["0214.html", "0213.html"]], ["[css-houdini-drafts] Pull Request: computedStyleMap() must return same object", ["0280.html", "0279.html"]], ["[css-houdini-drafts] Pull Request: Create EXPLAINER.md first draft", ["0020.html"]], ["[css-houdini-drafts] Pull Request: Enforce ordering on order of operations", ["0218.html", "0217.html"]], ["[css-houdini-drafts] Pull Request: Example 7 - queries computedStyleMap() instead of specified attributeStyleMap", ["0047.html"]], ["[css-houdini-drafts] Pull Request: Extend match concept to other style values", ["0004.html"]], ["[css-houdini-drafts] Pull Request: File issues for remaining issues in Typed OM", ["0066.html", "0065.html"]], ["[css-houdini-drafts] Pull Request: Format table of CSS Properties to StyleValues normalization", ["0026.html"]], ["[css-houdini-drafts] Pull Request: Move comment about resources that don't need network request", ["0041.html"]], ["[css-houdini-drafts] Pull Request: Reference CSSPositionValue normalization where relevant", ["0053.html"]], ["[css-houdini-drafts] Pull Request: Remove redundant reference to exit this algorithm", ["0184.html", "0183.html"]], ["[css-houdini-drafts] Pull Request: Remove references to CSSKeywordish", ["0228.html", "0227.html"]], ["[css-houdini-drafts] Pull Request: Remove StylePropertyMap.update()", ["0188.html", "0187.html"]], ["[css-houdini-drafts] Pull Request: Revert back to no defaults for CSSMatrixComponentOptions.is2D", ["0287.html", "0286.html"]], ["[css-houdini-drafts] Pull Request: Serialize out of range values as calcs", ["0083.html", "0082.html"]], ["[css-houdini-drafts] Remove StylePropertyMap.update()", ["0221.html", "0216.html", "0215.html"]], ["[css-houdini-drafts] Restrict workers that `CSSStyleValue` is exposed to", ["0409.html", "0408.html", "0080.html", "0068.html", "0055.html", "0038.html"]], ["[css-houdini-drafts] Serialization from CSSOM Values", ["0363.html"]], ["[css-houdini-drafts] Serialize out of range values as calcs", ["0333.html"]], ["[css-houdini-drafts] Should we be using DOMString, USVString, or CSSOMString?", ["0416.html", "0415.html", "0414.html", "0376.html", "0375.html", "0372.html", "0371.html", "0370.html", "0369.html", "0368.html", "0367.html", "0353.html", "0347.html", "0316.html", "0274.html"]], ["[css-houdini-drafts] The IDL for StylePropertyMap is not valid", ["0094.html"]], ["[css-houdini-drafts] Unclear how parse a CSSStyleValue returns CSSStyleValue objects", ["0303.html"]], ["[css-houdini-drafts] Use defaults for CSSMatrixComponentOptions", ["0087.html", "0086.html"]], ["[css-houdini-drafts] Why are these exposed in Workers?", ["0385.html", "0380.html", "0361.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1] \"equal numeric values\" algorithm is possibly problematic", ["0277.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1] \"equal numeric values\" may return false when people might expect true", ["0386.html", "0329.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1] \"invert\" should be clear about what it means by \"inverse\"", ["0236.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1] Behavior of indexed setter on CSSUnparsedValue is not defined.", ["0242.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1] CSSUnparsedValue's length could be defined more clearly", ["0243.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1] CSSVariableReferenceValue's \"variable\" getter needs to be defined.", ["0245.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1] Does computedStyleMap() always return a new object?", ["0299.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1] Duplicating a CSSVariableReferenceValue is harder than it probably should be", ["0387.html", "0330.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1] Exposed value for partial interface Element makes no sense and is not valid Web IDL", ["0124.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1] Is it intentional that only existing items in a CSSUnparsedValue can be mutated?", ["0271.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1] rectify a keywordish value allows creation of empty-string CSSKeywordValues", ["0234.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1] rectify a keywordish value doesn't define the global it creates the CSSKeywordValue in", ["0232.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1] Should \"negate\" handle a CSSMathSum of CSSMathNegates?", ["0332.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1] Should probably be more explicit about 0 handling in \"invert\"", ["0238.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1] Why is the new thing on ElementCSSInlineStyle called attributeStyleMap, not styleMap", ["0142.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1]\"contains\" link in \"delete\" section is broken", ["0113.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1]\"Throw a TypeError and exit this algorithm\" wording is weird", ["0186.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1]has() behavior for StylePropertyMap undefined", ["0157.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1]Likely typo in prose for StylePropertyMapReadOnly", ["0128.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1]Manual definition of the map entries for StylePropertyMapReadOnly contradicts Web IDL", ["0272.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1]Probably need to define the order of additions in add() step 3", ["0235.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1]Probably need to define the order of multiplications in mul() step 3 and step 4", ["0239.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1]The IDL for StylePropertyMap is not valid due to multiple maplike declarations", ["0159.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1]The IDL for StylePropertyMapReadOnly has an invalid \"get\" method", ["0173.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1]The IDL for StylePropertyMapReadOnly has an invalid \"has\" method", ["0162.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1]update() behaves a bit oddly for non-single-valued properties", ["0237.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Add pseudoElt argument to computedStyleMap(), or wait for PseudoElement interface?", ["0002.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] algorithm for coercing value doesn't describe how to check grammar", ["0010.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSSImageValue should specify units of intrinsicWidth and intrinsicHeight", ["0164.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSSStyleValue normalization", ["0343.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSSStyleValue static methods do not return anything", ["0320.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSSURLImageValue constructor probably shouldn't require \"url()\" around the URL", ["0275.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSSURLImageValue url setter should be specified", ["0165.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] definition of CSSMathValue.equals() should be a little clearer", ["0012.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Describe how the StylePropertyMaps should interact with custom properties", ["0007.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Do we need an updateAll() method that gets and sets a list?", ["0178.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Does the is2D design allow for inconsistent interpretation of CSSTransformComponents?", ["0190.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Editorial: \"If value is an empty string throw\"", ["0327.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] If parseMultiple is true, but property is a single-valued property", ["0318.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Let props be the value of this\u2019s [[declarations]] internal slot internal slot", ["0321.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Link \"CSS Values\"", ["0325.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] make green block under \"subdivide into iterations\" red", ["0317.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Missing spec definition for CSSTransformValue.set", ["0292.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] parse a CSSStyleValue: let usage", ["0326.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Question about computed values", ["0175.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] references to the \"match\" definition should link to it", ["0070.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Reifying text-decoration-line", ["0396.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] rule on inferring <length-percentage> is too vague", ["0256.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Setting list-valued properties to var() refs.", ["0397.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Should StylePropertyMapReadonly.size be unsigned long?", ["0401.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Significance of maplike in StylePropertyMap", ["0170.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] spec should clarify inheritance of CSSImageValue from CSSResourceValue for non-network image types", ["0073.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] StylePropertyMap order", ["0436.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Transform serialization wording should be rephrased", ["0014.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Unclear how parse a CSSStyleValue returns CSSStyleValue objects", ["0335.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Unsupported color values", ["0297.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] What do numeric font weights reify to?", ["0382.html"]], ["Closed: [css-houdini-drafts] [typed-om] Trim CSSResourceValue and subclasses to opaque objects for this level, punt rest to level 2", ["0399.html"]], ["Closed: [css-houdini-drafts] Add full table of properties and what CSSStyleValues types they normalize to", ["0181.html"]], ["Closed: [css-houdini-drafts] CSSPositionValue definition should state rules for mapping syntax to objects", ["0072.html"]], ["Closed: [css-houdini-drafts] Editorial: \"initially be\"", ["0383.html"]], ["Closed: [css-houdini-drafts] Example 7 should be polling `computedStyleMap()` not attributeStyleMap", ["0071.html"]], ["Closed: [css-houdini-drafts] Gather and publish CSS Typed OM performance data in an explainer?", ["0180.html"]], ["Closed: [css-houdini-drafts] Restrict workers that `CSSStyleValue` is exposed to", ["0081.html"]], ["Closed: [css-houdini-drafts] Should we be using DOMString, USVString, or CSSOMString?", ["0334.html"]], ["Closed: [css-houdini-drafts] Why are these exposed in Workers?", ["0384.html"]]], [["[css-houdini-drafts] [css-paint-api] Use JS export instead of registerPaint", ["0055.html", "0054.html", "0053.html", "0052.html", "0051.html", "0050.html", "0049.html", "0048.html", "0047.html"]], ["[css-houdini-drafts] [css-paint-api]: APIs not exposed in Worklets", ["0227.html", "0163.html", "0161.html", "0133.html"]], ["[css-houdini-drafts] [css-properties-values-api] Allowing a default invalid initialValue when syntax is not \"*\"", ["0001.html"]], ["[css-houdini-drafts] [css-typed-om]", ["0234.html"]], ["[css-houdini-drafts] [css-typed-om] \"algorithm that coerces value into an appropriate type for a given property\" calls \"parse a CSSStyleValue\" with missing arg", ["0143.html", "0096.html"]], ["[css-houdini-drafts] [css-typed-om] \"Create a CSSUnitValue from a string\" invents its own CSS parsing", ["0186.html", "0153.html", "0151.html", "0145.html"]], ["[css-houdini-drafts] [css-typed-om] \"delete a StylePropertyMap\" algorithm is poorly named", ["0169.html", "0092.html", "0073.html"]], ["[css-houdini-drafts] [css-typed-om] \"get all values from a StylePropertyMap\" assumes underlying model might not be list", ["0171.html", "0074.html"]], ["[css-houdini-drafts] [css-typed-om] [css-paint-api] What happens to unsupported property names in the registered paint styleMap?", ["0040.html", "0023.html", "0021.html", "0020.html"]], ["[css-houdini-drafts] [css-typed-om] Add a typed OM spec for ColorValue", ["0225.html"]], ["[css-houdini-drafts] [css-typed-om] Add example of normalizing n-ary math operators", ["0115.html"]], ["[css-houdini-drafts] [css-typed-om] Add shortcuts for other arithmetic operations", ["0038.html"]], ["[css-houdini-drafts] [css-typed-om] algorithm for coercing value doesn't describe how to check grammar", ["0233.html", "0232.html", "0197.html", "0108.html", "0069.html"]], ["[css-houdini-drafts] [css-typed-om] algorithm for coercing value should specify parseMultiple flag", ["0144.html", "0070.html"]], ["[css-houdini-drafts] [css-typed-om] Behaviour of unsupported CSSStyleValues", ["0008.html", "0007.html", "0006.html", "0005.html", "0004.html"]], ["[css-houdini-drafts] [css-typed-om] can <calc> normalization from parsing/cssom simplify the expression?", ["0029.html", "0000.html"]], ["[css-houdini-drafts] [css-typed-om] Constructor for CSSUnparsedValue takes rest params rather than sequence", ["0239.html"]], ["[css-houdini-drafts] [css-typed-om] CSSNumericValue.div() and invert don't specify handling of divide-by-zero", ["0199.html", "0078.html"]], ["[css-houdini-drafts] [css-typed-om] CSSNumericValue.parse() should accept 'min()' and 'max()'", ["0198.html", "0084.html"]], ["[css-houdini-drafts] [css-typed-om] CSSNumericValue.to could return a CSSUnitValue", ["0061.html"]], ["[css-houdini-drafts] [css-typed-om] CSSPositionValues should be created as a function of what the property accepts", ["0149.html"]], ["[css-houdini-drafts] [css-typed-om] CSSTransformComponent attributes that are CSSNumberish should spec getters", ["0205.html"]], ["[css-houdini-drafts] [css-typed-om] CSSVariableReferenceValue constructor should throw TypeError for invalid variables", ["0226.html"]], ["[css-houdini-drafts] [css-typed-om] custom properties should not be treated as case-insensitive", ["0072.html"]], ["[css-houdini-drafts] [css-typed-om] definition of CSSMathValue.equals() should be a little clearer", ["0079.html"]], ["[css-houdini-drafts] [css-typed-om] Does the is2D design allow for inconsistent interpretation of CSSTransformComponents?", ["0216.html", "0207.html", "0204.html"]], ["[css-houdini-drafts] [css-typed-om] have a note saying when CSSTransformValue.toMatrix() doesn't work", ["0222.html", "0202.html"]], ["[css-houdini-drafts] [css-typed-om] introduction to CSSNumericValue should be clearer that list is interfaces inheriting from it", ["0076.html"]], ["[css-houdini-drafts] [css-typed-om] Is CSSKeywordish used anywhere?", ["0036.html", "0026.html"]], ["[css-houdini-drafts] [css-typed-om] List-valued property iteration of property", ["0157.html"]], ["[css-houdini-drafts] [css-typed-om] need to define (or link to?) concept of unioning unit maps", ["0098.html", "0083.html"]], ["[css-houdini-drafts] [css-typed-om] prose description of CSSNumericValue.toSum() should explain empty units behavior", ["0082.html", "0080.html"]], ["[css-houdini-drafts] [css-typed-om] Restrict unsupported CSSStyleValues to the property that it was parsed with", ["0032.html"]], ["[css-houdini-drafts] [css-typed-om] rule on inferring <length-percentage> is too vague", ["0181.html", "0086.html"]], ["[css-houdini-drafts] [css-typed-om] Serialization of CSSStyleValues constructed from string", ["0064.html", "0044.html", "0016.html", "0015.html", "0013.html", "0012.html"]], ["[css-houdini-drafts] [css-typed-om] Should CSSTransformComponent have a toMatrix()?", ["0211.html", "0209.html", "0203.html"]], ["[css-houdini-drafts] [css-typed-om] Should StylePropertyMap.set be exposed to worklets?", ["0126.html", "0124.html", "0123.html", "0121.html", "0120.html", "0042.html"]], ["[css-houdini-drafts] [css-typed-om] Should StylePropertyMap.set work even when the property is not in the property model?", ["0187.html"]], ["[css-houdini-drafts] [css-typed-om] should the percent hint concept allow percentages to be numbers?", ["0182.html", "0085.html"]], ["[css-houdini-drafts] [css-typed-om] Should the product of two unit maps be addition instead of union?", ["0132.html"]], ["[css-houdini-drafts] [css-typed-om] specify CSSMatrixComponentOptions default with IDL defaults?", ["0206.html"]], ["[css-houdini-drafts] [css-typed-om] Stringification behavior", ["0179.html", "0162.html", "0003.html"]], ["[css-houdini-drafts] [css-typed-om] StylePropertyMap definitions incorrectly refer to \"supported property name\" definition", ["0071.html"]], ["[css-houdini-drafts] [css-typed-om] the style map on a CSSStyleRule shouldn't be called attributeStyleMap", ["0087.html", "0075.html"]], ["[css-houdini-drafts] [css-typed-om] Transform serialization wording should be rephrased", ["0215.html", "0125.html", "0122.html"]], ["[css-houdini-drafts] [css-typed-om] What does lack of range restriction imply about serialization?", ["0240.html", "0185.html", "0184.html", "0077.html"]], ["[css-houdini-drafts] [css-typed-om] What should CSSNumericValue.type() do?", ["0165.html"]], ["[css-houdini-drafts] [css-typed-om] What to do when CSSNumericValues form a cycle?", ["0065.html"]], ["[css-houdini-drafts] [css-typed-om] what's a \"list-valued property\"?", ["0135.html", "0113.html", "0099.html", "0094.html", "0088.html"]], ["[css-houdini-drafts] [css-typed-om] Why the property model is defined to be a list of pairs, rather than an ordered map?", ["0138.html"]], ["[css-houdini-drafts] [css-worklets] [css-typed-om] CSSResourceValues constructed within Worklets should have state \"unloaded\".", ["0173.html"]], ["[css-houdini-drafts] Add CSSMathValue Serialization body", ["0236.html", "0235.html", "0046.html"]], ["[css-houdini-drafts] Add CSSTransformComponent.is2D", ["0221.html"]], ["[css-houdini-drafts] Add full table of properties and what CSSStyleValues types they normalize to", ["0152.html", "0150.html", "0043.html"]], ["[css-houdini-drafts] Add text for computed CSSMathValue objects", ["0228.html", "0045.html", "0041.html"]], ["[css-houdini-drafts] Add wording for CSSNumericValue.type()", ["0134.html", "0058.html", "0057.html", "0056.html"]], ["[css-houdini-drafts] Ask for tests for normative changes in README", ["0201.html", "0200.html"]], ["[css-houdini-drafts] Background wiki page links to spam site", ["0090.html", "0063.html"]], ["[css-houdini-drafts] Change CSSPositionValue normalization to use auto bias", ["0022.html"]], ["[css-houdini-drafts] Clarify the union of two unit maps", ["0118.html"]], ["[css-houdini-drafts] Clarify when CSSTransformValue.toMatrix() throws TypeError", ["0224.html"]], ["[css-houdini-drafts] Invoke parsing algorithm correctly in style value coercion text", ["0148.html"]], ["[css-houdini-drafts] Observer for property being applied?", ["0014.html", "0011.html", "0010.html", "0009.html"]], ["[css-houdini-drafts] Pull Request: [css-layout-api] Fix incorrect extension of <<display-inside>>", ["0019.html", "0018.html"]], ["[css-houdini-drafts] Pull Request: [css-typed-om] Add shortcuts for other arithmetic operations", ["0024.html"]], ["[css-houdini-drafts] Pull Request: [css-typed-om] Remove CSSKeywordValue stringifier", ["0027.html"]], ["[css-houdini-drafts] Pull Request: [css-typed-om] Restrict unsupported CSSStyleValues to the property that it was parsed with", ["0031.html"]], ["[css-houdini-drafts] Pull Request: Add CSSTransformComponent.is2D", ["0218.html"]], ["[css-houdini-drafts] Pull Request: Add validation to CSSVariableReferenceValue constructor", ["0229.html"]], ["[css-houdini-drafts] Pull Request: Cater for RangeError caused by dividing by 0", ["0104.html"]], ["[css-houdini-drafts] Pull Request: Change CSSPositionValue normalization to use auto bias", ["0017.html"]], ["[css-houdini-drafts] Pull Request: Change parse/parseAll to throw TypeError", ["0025.html"]], ["[css-houdini-drafts] Pull Request: Clarify bulleted list about CSSNumericValues", ["0101.html"]], ["[css-houdini-drafts] Pull Request: Clarify CSSNumericValues.equals", ["0106.html"]], ["[css-houdini-drafts] Pull Request: Clarify the union of two unit maps", ["0110.html"]], ["[css-houdini-drafts] Pull Request: Clarify when CSSTransformValue.toMatrix() throws TypeError", ["0219.html"]], ["[css-houdini-drafts] Pull Request: CSSNumericValue.parse() allows {max, min, calc}()", ["0105.html"]], ["[css-houdini-drafts] Pull Request: CSSStyleValue.parseAll should always return a list", ["0112.html"]], ["[css-houdini-drafts] Pull Request: define a valid CSS property in Typed OM spec", ["0103.html"]], ["[css-houdini-drafts] Pull Request: Invoke parsing algorithm correctly in style value coercion text", ["0097.html"]], ["[css-houdini-drafts] Pull Request: Make CSSNumericArray an iterable", ["0189.html"]], ["[css-houdini-drafts] Pull Request: Make CSSNumericValue members readonly", ["0164.html"]], ["[css-houdini-drafts] Pull Request: Remove references to case sensitivity in StylePropertyMap definition", ["0102.html"]], ["[css-houdini-drafts] Pull Request: Remove references to font face", ["0168.html"]], ["[css-houdini-drafts] Pull Request: Rename CSSTranslation/CSSRotation", ["0128.html"]], ["[css-houdini-drafts] Pull Request: Rephrase \"delete a stylepropertymap\"", ["0095.html"]], ["[css-houdini-drafts] Pull Request: s/[=list-valued property iteration=]/comma separated iteration of a [=list-valued property=]", ["0111.html"]], ["[css-houdini-drafts] Pull Request: Sanitize the declared and inline StylePropertyMaps", ["0117.html"]], ["[css-houdini-drafts] Pull Request: StylePropertyMap's model is sequence<CSSStyleValue> pairs", ["0107.html"]], ["[css-houdini-drafts] Pull Request: StylePropertyMap.set should throw when setting multiple values to non list prop", ["0129.html"]], ["[css-houdini-drafts] Pull Request: Update CSSUnparsedValue constructor", ["0237.html"]], ["[css-houdini-drafts] Pull Request: Use defaults for CSSMatrixComponentOptions", ["0208.html"]], ["[css-houdini-drafts] Pull Request: Use indexed getters for CSSTransformComponent", ["0167.html"]], ["[css-houdini-drafts] Pull Request: Use indexed getters for CSSUnparsedValue", ["0177.html"]], ["[css-houdini-drafts] Rephrase \"delete a stylepropertymap\"", ["0142.html"]], ["[css-houdini-drafts] s/[=list-valued property iteration=]/comma separated iteration of a [=list-valued property=]", ["0155.html"]], ["[css-houdini-drafts] StylePropertyMap's model is sequence<CSSStyleValue> pairs", ["0116.html"]], ["[css-houdini-drafts] StylePropertyMap.set should throw on receiving a list for a single valued property", ["0147.html", "0140.html"]], ["[css-houdini-drafts] Use defaults for CSSMatrixComponentOptions", ["0213.html", "0212.html", "0210.html"]], ["[css-houdini-drafts] Use indexed getters for CSSTransformComponent", ["0174.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Allowing a default invalid initialValue when syntax is not \"*\"", ["0002.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] \"Create a CSSUnitValue from a string\" invents its own CSS parsing", ["0192.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] \"delete a StylePropertyMap\" algorithm is poorly named", ["0170.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] \"get all values from a StylePropertyMap\" assumes underlying model might not be list", ["0172.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Add example of normalizing n-ary math operators", ["0114.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] algorithm for coercing value doesn't describe how to check grammar", ["0109.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] algorithm for coercing value should specify parseMultiple flag", ["0146.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Behaviour of unsupported CSSStyleValues", ["0033.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] can <calc> normalization from parsing/cssom simplify the expression?", ["0028.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Constructor for CSSUnparsedValue takes rest params rather than sequence", ["0238.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Could CSSVariableReferenceValue have a constructor?", ["0194.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSSKeywordValue stringifier unnecessary?", ["0034.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSSNumericValue.div() and invert don't specify handling of divide-by-zero", ["0159.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSSNumericValue.parse() should accept 'min()' and 'max()'", ["0158.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSSNumericValue.to could return a CSSUnitValue", ["0060.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSSTransformComponent attributes that are CSSNumberish should spec getters", ["0217.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSSUnparsedValue constructor behaviour if arguments are not alternating", ["0093.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSSVariableReferenceValue constructor should throw TypeError for invalid variables", ["0231.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] custom properties should not be treated as case-insensitive", ["0160.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Do CSSMathValue subclasses copy their constructor arguments?", ["0176.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] have a note saying when CSSTransformValue.toMatrix() doesn't work", ["0223.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] introduction to CSSNumericValue should be clearer that list is interfaces inheriting from it", ["0154.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Is CSSKeywordish used anywhere?", ["0035.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Is CSSTransformValue.is2D true when given no transforms?", ["0196.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] is this intentionally thing to throw different errors when failed converting to unit type from string?", ["0067.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] List-valued property iteration of property", ["0156.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] need to define (or link to?) concept of unioning unit maps", ["0119.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Normalizing 'top' as CSSPositionValue", ["0030.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] prose description of CSSNumericValue.toSum() should explain empty units behavior", ["0081.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Should CSSNumericValue attributes accept doubles?", ["0195.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Should CSSTransformComponent have a toMatrix()?", ["0220.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Should CSSURLImageValue serialize with quotes?", ["0062.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Should CSSVariableReferenceValue.variable setter reject invalid variable names?", ["0191.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Should it be illegal to construct CSSKeywordValue objects with empty strings?", ["0089.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Should percents be allowed for CSSTranslation.z?", ["0136.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Should StylePropertyMap.set be exposed to worklets?", ["0127.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Should StylePropertyMap.set work even when the property is not in the property model?", ["0188.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] should the percent hint concept allow percentages to be numbers?", ["0183.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Should the product of two unit maps be addition instead of union?", ["0131.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Should type of CSSMathNegate be the same as its argument?", ["0068.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Simplifying expressions in CSSMathValue subclasses.", ["0039.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] specify CSSMatrixComponentOptions default with IDL defaults?", ["0214.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Spell out the obvious", ["0059.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Stringification behavior", ["0180.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] StylePropertMap.set for non-list properties", ["0130.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] StylePropertyMap definitions incorrectly refer to \"supported property name\" definition", ["0141.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] What should CSSNumericValue.type() do?", ["0166.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] What should CSSStyleValue.parseAll do for non-list-valued properties?", ["0137.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] What to do when CSSNumericValues form a cycle?", ["0066.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] what's a \"list-valued property\"?", ["0100.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Why the property model is defined to be a list of pairs, rather than an ordered map?", ["0139.html"]], ["Closed: [css-houdini-drafts] [css-typed-om]: There's no nice way to represent CSSUnparsedValue as a \"list-plus\" style object.", ["0178.html"]], ["Closed: [css-houdini-drafts] Add CSSMathValue Serialization body", ["0193.html"]], ["Closed: [css-houdini-drafts] Add spec text for arraylike<CSSTransformComponent> in CSSTransformValue", ["0175.html"]], ["Closed: [css-houdini-drafts] Add text for computed CSSMathValue objects", ["0230.html"]], ["Closed: [css-houdini-drafts] Background wiki page links to spam site", ["0091.html"]], ["Closed: [css-houdini-drafts] CSSNumericArray should be an Array-like restricted to containing CSSNumericValue objects.", ["0190.html"]], ["Closed: [css-houdini-drafts] When doing CSSStyleValue.parse(), what should throw vs return null?", ["0037.html"]]], [["[css-houdini-drafts] [css-paint-api]: APIs not exposed in Worklets", ["0030.html"]], ["[css-houdini-drafts] [css-properties-values-api] named parameters in custom values", ["0053.html"]], ["[css-houdini-drafts] [css-properties-values-api] var() references to <length> type properties with font-relative lengths", ["0048.html"]], ["[css-houdini-drafts] [css-typed-om] [css-paint-api] What happens to unsupported property names in the registered paint styleMap?", ["0020.html"]], ["[css-houdini-drafts] [css-typed-om] can <calc> normalization from parsing/cssom simplify the expression?", ["0043.html", "0042.html", "0041.html", "0039.html", "0021.html", "0009.html"]], ["[css-houdini-drafts] [css-typed-om] CSS.q() should be CSS.Q() or CSS.Hz() should be CSS.hz()", ["0024.html"]], ["[css-houdini-drafts] [css-typed-om] CSSKeywordValue stringifier unnecessary?", ["0052.html"]], ["[css-houdini-drafts] [css-typed-om] CSSNumericValue.to could return a CSSUnitValue", ["0006.html", "0002.html"]], ["[css-houdini-drafts] [css-typed-om] Is CSSTransformValue.is2D true when given no transforms?", ["0027.html", "0015.html"]], ["[css-houdini-drafts] [css-typed-om] List-valued property iteration of property", ["0023.html"]], ["[css-houdini-drafts] [css-typed-om] Normalizing 'top' as CSSPositionValue", ["0050.html", "0029.html"]], ["[css-houdini-drafts] [css-typed-om] Serializing transforms", ["0049.html"]], ["[css-houdini-drafts] [css-typed-om] Should CSSURLImageValue serialize with quotes?", ["0028.html"]], ["[css-houdini-drafts] [css-typed-om] Should CSSVariableReferenceValue.variable setter reject invalid variable names?", ["0000.html"]], ["[css-houdini-drafts] [css-typed-om] Should percents be allowed for CSSTranslation.z?", ["0026.html", "0011.html"]], ["[css-houdini-drafts] [css-typed-om] Should StylePropertyMap.set be exposed to worklets?", ["0051.html"]], ["[css-houdini-drafts] [css-typed-om] Should the product of two unit maps be addition instead of union?", ["0001.html"]], ["[css-houdini-drafts] [css-typed-om] Should type of CSSMathNegate be the same as its argument?", ["0005.html"]], ["[css-houdini-drafts] [css-typed-om] StylePropertMap.set for non-list properties", ["0025.html"]], ["[css-houdini-drafts] [css-typed-om] What should CSSNumericValue.type() do?", ["0022.html"]], ["[css-houdini-drafts] Add CSSMathValue Serialization body", ["0047.html", "0040.html"]], ["[css-houdini-drafts] Change CSSMathNegate and CSSMathInvert to take numberishes", ["0046.html", "0007.html", "0004.html"]], ["[css-houdini-drafts] Pull Request: [css-typed-om] Change CSSMathNegate type to same as its argument.", ["0010.html"]], ["[css-houdini-drafts] Pull Request: Add constructor to CSSVariableReferenceValue", ["0045.html"]], ["[css-houdini-drafts] Pull Request: Add example of normalizing N-ary operators", ["0013.html"]], ["[css-houdini-drafts] Pull Request: Add wording for CSSNumericValue.type()", ["0044.html"]], ["[css-houdini-drafts] Pull Request: Change .to to return CSSUnitValue", ["0008.html"]], ["[css-houdini-drafts] Pull Request: Change CSSMathNegate and CSSMathInvert to take numberishes", ["0003.html"]], ["[css-houdini-drafts] Pull Request: CSSStyleValue.parseAll should always return a list", ["0019.html"]], ["[css-houdini-drafts] Pull Request: CSSTranslation.z shouldn't allow percents", ["0033.html"]], ["[css-houdini-drafts] Pull Request: CSSURLImageValue should serialize url with quotes", ["0034.html"]], ["[css-houdini-drafts] Pull Request: CSSVariableReferenceValue.variable setter rejects invalid variable names", ["0031.html"]], ["[css-houdini-drafts] Pull Request: Ensure at least one transform component in CSSTransformValue", ["0038.html"]], ["[css-houdini-drafts] Pull Request: Expand CSSOM to Cascading Style Sheets Object Model at start of spec", ["0016.html"]], ["[css-houdini-drafts] Pull Request: Express that tokens can be a mix of DOMStrings and CSSVariableReferenceValues", ["0017.html"]], ["[css-houdini-drafts] Pull Request: rename CSS.q() to CSS.Q()", ["0032.html"]], ["[css-houdini-drafts] Pull Request: Setting/modifiying CSSUnitValue.unit should be consistent on Error thrown", ["0014.html"]], ["[css-houdini-drafts] Pull Request: Setting/modifiying value to empty string throws a TypeError", ["0012.html"]], ["[css-houdini-drafts] Pull Request: StylePropertyMap.set should throw on receiving a list for a single valued property", ["0037.html"]], ["[css-houdini-drafts] Pull Request: StylePropertyMap.set shouldn't exit algo if property not in property model", ["0018.html"]], ["[css-houdini-drafts] Pull Request: StylePropertyMapReadonly property model should be an ordered set", ["0035.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSS.q() should be CSS.Q() or CSS.Hz() should be CSS.hz()", ["0036.html"]]], [["[css-houdini-drafts] [CSS Paint API] Pass snapped concrete size to paint function", ["0078.html"]], ["[css-houdini-drafts] [css-paint-api] Allow long running scripts to be informed that they are being treated as unresponsive?", ["0022.html", "0021.html", "0018.html", "0017.html"]], ["[css-houdini-drafts] [css-paint-api] Are PaintWorkletGlobalScopes allowed to go away?", ["0059.html"]], ["[css-houdini-drafts] [css-paint-api] Box concrete object size", ["0049.html"]], ["[css-houdini-drafts] [css-paint-api] Calls to paint function should provide the snapped concrete size.", ["0031.html", "0024.html"]], ["[css-houdini-drafts] [css-paint-api] Consider adding property for expected rendered bitmap size.", ["0050.html"]], ["[css-houdini-drafts] [css-paint-api] Consider making Path2D the only way to render paths with PaintRenderingContext2D.", ["0041.html"]], ["[css-houdini-drafts] [css-paint-api] Remove alpha flag, in favour of a contextSettings flag?", ["0046.html"]], ["[css-houdini-drafts] [css-paint-api] why no fillText/strokeText ?", ["0045.html"]], ["[css-houdini-drafts] [css-properties-values-api] var() references to <length> type properties with font-relative lengths", ["0058.html"]], ["[css-houdini-drafts] [css-typed-om] [css-paint-api] What happens to unsupported property names in the registered paint styleMap?", ["0086.html"]], ["[css-houdini-drafts] [css-typed-om] Add example of normalizing n-ary math operators", ["0081.html", "0080.html"]], ["[css-houdini-drafts] [css-typed-om] Could CSSVariableReferenceValue have a constructor?", ["0063.html"]], ["[css-houdini-drafts] [css-typed-om] CSS.q() should be CSS.Q() or CSS.Hz() should be CSS.hz()", ["0001.html", "0000.html"]], ["[css-houdini-drafts] [css-typed-om] CSSUnparsedValue constructor behaviour if arguments are not alternating", ["0011.html", "0009.html"]], ["[css-houdini-drafts] [css-typed-om] Do CSSMathValue subclasses copy their constructor arguments?", ["0010.html", "0006.html", "0002.html"]], ["[css-houdini-drafts] [css-typed-om] is this intentionally thing to throw different errors when failed converting to unit type from string?", ["0008.html"]], ["[css-houdini-drafts] [css-typed-om] List-valued property iteration of property", ["0043.html"]], ["[css-houdini-drafts] [css-typed-om] Normalizing 'top' as CSSPositionValue", ["0083.html"]], ["[css-houdini-drafts] [css-typed-om] Should CSSURLImageValue serialize with quotes?", ["0076.html"]], ["[css-houdini-drafts] [css-typed-om] Should StylePropertyMap.set work even when the property is not in the property model?", ["0007.html"]], ["[css-houdini-drafts] [css-typed-om] Should the product of two unit maps be addition instead of union?", ["0079.html"]], ["[css-houdini-drafts] [css-typed-om] Should type of CSSMathNegate be the same as its argument?", ["0073.html"]], ["[css-houdini-drafts] [css-typed-om] Simplifying expressions in CSSMathValue subclasses.", ["0057.html", "0003.html"]], ["[css-houdini-drafts] [css-typed-om] Spec up ColorValue", ["0054.html"]], ["[css-houdini-drafts] [css-typed-om] StylePropertMap.set for non-list properties", ["0044.html"]], ["[css-houdini-drafts] [css-typed-om] What should CSSNumericValue.type() do?", ["0065.html", "0064.html", "0055.html"]], ["[css-houdini-drafts] [css-typed-om] What should CSSStyleValue.parseAll do for non-list-valued properties?", ["0005.html", "0004.html"]], ["[css-houdini-drafts] [css-typed-om] What to do when CSSNumericValues form a cycle?", ["0060.html"]], ["[css-houdini-drafts] [css-typed-om] Why the property model is defined to be a list of pairs, rather than an ordered map?", ["0074.html"]], ["[css-houdini-drafts] [worklets] addModule() should reject a promise with a more specific exception", ["0032.html", "0027.html", "0026.html"]], ["[css-houdini-drafts] [worklets] dynamic import()", ["0085.html", "0084.html", "0082.html", "0077.html", "0071.html", "0069.html", "0068.html", "0067.html", "0066.html", "0061.html", "0053.html", "0039.html", "0038.html", "0037.html", "0036.html", "0035.html", "0034.html", "0029.html", "0028.html", "0023.html", "0020.html", "0019.html", "0016.html", "0015.html"]], ["[css-houdini-drafts] [worklets] Post-resolution tasks for `addModule()` call", ["0033.html"]], ["[css-houdini-drafts] [worklets] restrict worklets to SecureContexts", ["0014.html", "0013.html", "0012.html"]], ["[css-houdini-drafts] [worklets] WebAudio API does allow multiple global scopes", ["0030.html"]], ["[css-houdini-drafts] Add spec text for arraylike<CSSTransformComponent> in CSSTransformValue", ["0070.html", "0056.html"]], ["[css-houdini-drafts] Allow speculative evaluation", ["0062.html"]], ["[css-houdini-drafts] Ask for tests for normative changes in README", ["0025.html"]], ["[css-houdini-drafts] Pull Request: [CSS Paint API] Pass snapped concrete size to paint function", ["0075.html"]], ["[css-houdini-drafts] Pull Request: [css-paint-api] Typo in registerProperty: inherit -> inherits", ["0072.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Box concrete object size", ["0048.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Consider adding property for expected rendered bitmap size.", ["0051.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Consider making Path2D the only way to render paths with PaintRenderingContext2D.", ["0042.html", "0040.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Remove alpha flag, in favour of a contextSettings flag?", ["0047.html"]], ["Closed: [css-houdini-drafts] [worklets] Speculative evaluation", ["0052.html"]]], [["[css-houdini-drafts] [all] Move Houdini APIs to `window.CSS`", ["0029.html"]], ["[css-houdini-drafts] [css-paint-api] Specify explicitly that PaintSize.{width, height} may be fractional", ["0014.html", "0013.html"]], ["[css-houdini-drafts] [css-paint-api] why no fillText/strokeText ?", ["0012.html"]], ["[css-houdini-drafts] [css-properties-values-api-1] What is the computed value of a <transform-list> in the middle of a layout dependent matrix decomposed interpolation?", ["0040.html"]], ["[css-houdini-drafts] [css-typed-om] .equals methods for CSSStyleValue subclasses", ["0027.html"]], ["[css-houdini-drafts] [css-typed-om] add detailed descriptions of the rest of the methods on StylePropertyMap", ["0025.html"]], ["[css-houdini-drafts] [css-typed-om] CSSUnparsedValue constructor behaviour if arguments are not alternating", ["0050.html"]], ["[css-houdini-drafts] [css-typed-om] Do CSSMathValue subclasses copy their constructor arguments?", ["0049.html"]], ["[css-houdini-drafts] [css-typed-om] Remove issue #310 from text.", ["0024.html", "0022.html"]], ["[css-houdini-drafts] [css-typed-om] Should CSSNumericValue attributes accept doubles?", ["0064.html", "0063.html", "0059.html", "0055.html", "0054.html"]], ["[css-houdini-drafts] [css-typed-om] Should it be illegal to construct CSSKeywordValue objects with empty strings?", ["0065.html", "0011.html", "0009.html"]], ["[css-houdini-drafts] [css-typed-om] Should StyleMap be case sensitive?", ["0030.html"]], ["[css-houdini-drafts] [css-typed-om] Should StylePropertyMap.set work even when the property is not in the property model?", ["0062.html"]], ["[css-houdini-drafts] [css-typed-om] Simplifying expressions in CSSMathValue subclasses.", ["0068.html"]], ["[css-houdini-drafts] [css-typed-om] Spell out the obvious", ["0007.html"]], ["[css-houdini-drafts] [css-typed-om] What is CSSMathValue.type?", ["0061.html", "0053.html", "0048.html", "0046.html", "0042.html"]], ["[css-houdini-drafts] [css-typed-om] What should CSSNumericValue.type() do?", ["0033.html", "0019.html"]], ["[css-houdini-drafts] [css-typed-om] What should CSSStyleValue.parseAll do for non-list-valued properties?", ["0067.html", "0066.html"]], ["[css-houdini-drafts] [PaintWorklet] Explicit state the PaintSize could be fractional", ["0058.html"]], ["[css-houdini-drafts] [worklets] addModule is either blocking or racey", ["0005.html"]], ["[css-houdini-drafts] [worklets] Restrict worklets to same-origin", ["0006.html", "0004.html", "0003.html", "0002.html", "0001.html", "0000.html"]], ["[css-houdini-drafts] Add CSSMathValue Serialization body", ["0037.html"]], ["[css-houdini-drafts] Add description for StylePropertyMapReadOnly::getAll", ["0017.html"]], ["[css-houdini-drafts] Add full table of properties and what CSSStyleValues types they normalize to", ["0036.html"]], ["[css-houdini-drafts] Add serialization for box-sizing", ["0021.html"]], ["[css-houdini-drafts] Add spec text for arraylike<CSSTransformComponent> in CSSTransformValue", ["0035.html"]], ["[css-houdini-drafts] Add text for computed CSSMathValue objects", ["0038.html"]], ["[css-houdini-drafts] Ask for tests for normative changes in README", ["0051.html", "0045.html", "0044.html"]], ["[css-houdini-drafts] CSSNumericArray should be an Array-like restricted to containing CSSNumericValue objects.", ["0047.html", "0041.html", "0034.html"]], ["[css-houdini-drafts] CSSNumericValue.from() -> CSSNumericValue.to()", ["0016.html", "0010.html"]], ["[css-houdini-drafts] Pull Request: [css-properties-values-api] Bikeshed fix", ["0052.html"]], ["[css-houdini-drafts] Pull Request: [css-typed-om] Remove issue #310 from text.", ["0018.html"]], ["[css-houdini-drafts] Pull Request: [css-typed-om] Track issue 482", ["0020.html"]], ["[css-houdini-drafts] Pull Request: [PaintWorklet] Explicit state the PaintSize could be fractional", ["0057.html", "0056.html"]], ["[css-houdini-drafts] Pull Request: Add clarification about custom properties in StylePropertyMaps", ["0023.html"]], ["[css-houdini-drafts] Pull Request: Add issue numbers to track all issues in spec text", ["0039.html"]], ["[css-houdini-drafts] Pull Request: Ask for tests for normative changes in README", ["0043.html"]], ["[css-houdini-drafts] Pull Request: CSSNumericValue.from() -> CSSNumericValue.to()", ["0008.html"]], ["[css-houdini-drafts] Pull Request: Remove references to CSSNumericValue.from() in the spec", ["0015.html"]], ["[css-houdini-drafts] Pull Request: StylePropertyMap.delete accepts a DOMString property", ["0032.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] .equals methods for CSSStyleValue subclasses", ["0028.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] add detailed descriptions of the rest of the methods on StylePropertyMap", ["0026.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Should StyleMap be case sensitive?", ["0031.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] What is CSSMathValue.type?", ["0060.html"]]], [["[css-houdini-drafts] [css-paint-api] Are PaintWorkletGlobalScopes allowed to go away?", ["0006.html"]], ["[css-houdini-drafts] [css-paint-api] Use of \"the\" to refer to PaintWorkletGlobalScope is misleading", ["0005.html"]], ["[css-houdini-drafts] [worklets] Add language for non-derminism in a note.", ["0010.html"]], ["[css-houdini-drafts] Add [Exposed] to all interfaces", ["0000.html"]], ["[css-houdini-drafts] Add devicePixelRatio property to PaintRenderingContext2D", ["0004.html"]], ["[css-houdini-drafts] How are paint worklets picked?", ["0007.html"]], ["[css-houdini-drafts] Pull Request: [worklets] Add language for non-derminism in a note.", ["0008.html"]], ["[css-houdini-drafts] Replace alpha flag with a PaintRenderingContext2DSettings object", ["0003.html", "0002.html", "0001.html"]], ["[css-houdini-drafts] Why is there a responsible browsing context, but no document?", ["0009.html"]]], [["[css-houdini-drafts] [css-layout] Bikeshedding the percentageInlineSize / percentageBlockSize names?", ["0012.html"]], ["[css-houdini-drafts] [css-paint-api] Add property to context for expected rendered bitmap size.", ["0005.html"]], ["[css-houdini-drafts] [css-paint-api] Consider adding property for expected rendered bitmap size.", ["0010.html"]], ["[css-houdini-drafts] [css-paint-api] Consider making Path2D the only way to render paths with PaintRenderingContext2D.", ["0007.html"]], ["[css-houdini-drafts] [css-paint-api] Remove alpha flag, in favour of a contextSettings flag?", ["0097.html", "0008.html", "0000.html"]], ["[css-houdini-drafts] [css-paint-api] Unnecessary paint-valid flag?", ["0032.html", "0031.html"]], ["[css-houdini-drafts] [css-properties-values-api] Allowing a default invalid initialValue when syntax is not \"*\"", ["0071.html"]], ["[css-houdini-drafts] [css-properties-values-api] inherits should be true by default", ["0014.html", "0011.html", "0009.html", "0004.html", "0003.html"]], ["[css-houdini-drafts] [css-properties-values-api] is initialValue required when syntax is not \"*\"?", ["0070.html", "0069.html", "0068.html", "0067.html", "0066.html", "0065.html", "0064.html", "0063.html", "0062.html", "0061.html", "0060.html", "0059.html", "0058.html"]], ["[css-houdini-drafts] [css-properties-values-api] PropertyDescriptor::name unnecessarily uses CSS syntax", ["0099.html", "0098.html", "0096.html", "0095.html"]], ["[css-houdini-drafts] [css-properties-values-api] Should x and x+ interpolate if the list has only a single element?", ["0055.html", "0052.html"]], ["[css-houdini-drafts] [css-properties-values-api] Typed custom property declarations are syntax-checked at computed-value time, not parse time.", ["0037.html"]], ["[css-houdini-drafts] [css-typed-om] #350 Move getComputedStyleMap to CSS namespace", ["0074.html"]], ["[css-houdini-drafts] [css-typed-om] #350 Rename styleMap and getComputedStyleMap", ["0078.html"]], ["[css-houdini-drafts] [css-typed-om] .equals methods for CSSStyleValue subclasses", ["0043.html", "0039.html"]], ["[css-houdini-drafts] [css-typed-om] Add serialization for 'opacity'", ["0081.html"]], ["[css-houdini-drafts] [css-typed-om] Font Family Name doesn't uniquely identify a font face", ["0053.html", "0051.html", "0050.html", "0045.html", "0041.html", "0038.html"]], ["[css-houdini-drafts] [css-typed-om] Semantics of CSSURLImageValue constructor?", ["0002.html"]], ["[css-houdini-drafts] [css-typed-om] Should StyleMap be case sensitive?", ["0001.html"]], ["[css-houdini-drafts] [css-typed-om] Spec up ColorValue", ["0049.html", "0048.html", "0047.html", "0042.html", "0040.html"]], ["[css-houdini-drafts] [css-typed-om]: There's no nice way to represent CSSUnparsedValue as a \"list-plus\" style object.", ["0044.html"]], ["[css-houdini-drafts] [worklets] Speculative evaluation", ["0015.html", "0006.html"]], ["[css-houdini-drafts] Add description for StylePropertyMapReadOnly.has()", ["0022.html", "0021.html"]], ["[css-houdini-drafts] Add devicePixelRatio property to PaintRenderingContext2D", ["0034.html", "0033.html", "0030.html", "0029.html", "0028.html", "0027.html"]], ["[css-houdini-drafts] Add height/width serialization", ["0091.html", "0076.html"]], ["[css-houdini-drafts] Add note about case-insensitivity of properties on StylePropertyMapReadOnly", ["0072.html"]], ["[css-houdini-drafts] Add serialization for left/right/top/bottom", ["0085.html"]], ["[css-houdini-drafts] css-paint-api should give example of using border-image to draw outside the border-box", ["0036.html"]], ["[css-houdini-drafts] Pull Request: [css-typed-om] #350 Move getComputedStyleMap to CSS namespace", ["0073.html"]], ["[css-houdini-drafts] Pull Request: [css-typed-om] Add serialization for 'opacity'", ["0079.html"]], ["[css-houdini-drafts] Pull Request: [worklets] Add initialization of CSP list.", ["0102.html"]], ["[css-houdini-drafts] Pull Request: Add description for CSSURLImageValue constructor.", ["0017.html"]], ["[css-houdini-drafts] Pull Request: Add description for StylePropertyMapReadOnly.delete()", ["0024.html"]], ["[css-houdini-drafts] Pull Request: Add description for StylePropertyMapReadOnly.get()", ["0018.html"]], ["[css-houdini-drafts] Pull Request: Add description for StylePropertyMapReadOnly.has()", ["0019.html"]], ["[css-houdini-drafts] Pull Request: Add description for StylePropertyMapReadOnly.set()", ["0023.html"]], ["[css-houdini-drafts] Pull Request: Add devicePixelRatio property to PaintRenderingContext2D", ["0026.html"]], ["[css-houdini-drafts] Pull Request: Add height/width", ["0075.html"]], ["[css-houdini-drafts] Pull Request: Add Naina Raisinghani to Typed OM editors", ["0056.html"]], ["[css-houdini-drafts] Pull Request: Add note about case-insensitivity of properties on StylePropertyMapReadOnly", ["0025.html"]], ["[css-houdini-drafts] Pull Request: Add serialization for box-sizing", ["0086.html"]], ["[css-houdini-drafts] Pull Request: Add serialization for left/right/top/bottom", ["0083.html"]], ["[css-houdini-drafts] Pull Request: Add serialization for stroke geometry", ["0082.html"]], ["[css-houdini-drafts] Pull Request: Add serialization for the margin and margin-{bottom, left, right, top}", ["0077.html"]], ["[css-houdini-drafts] Pull Request: Add text for serializing numbers/lengths", ["0080.html"]], ["[css-houdini-drafts] Pull Request: Allow speculative evaluation", ["0016.html"]], ["[css-houdini-drafts] Pull Request: Clean up CSSNumericValue.equals and remove assumption in last step.", ["0057.html"]], ["[css-houdini-drafts] Pull Request: Fixed \"yeild\" -> \"yield\" typo", ["0013.html"]], ["[css-houdini-drafts] Pull Request: Minor language corrections", ["0100.html"]], ["[css-houdini-drafts] Pull Request: Replace alpha flag with a contextAttributes object", ["0046.html"]], ["[css-houdini-drafts] Pull Request: Serialization description for position property", ["0090.html"]], ["[css-houdini-drafts] Pull Request: Serialize property display", ["0084.html"]], ["[css-houdini-drafts] Pull Request: Use [Exposed] consistently (needs fixup, replace \"???\")", ["0094.html"]], ["[css-houdini-drafts] Replace alpha flag with a ContextAttributes object", ["0101.html"]], ["[css-houdini-drafts] Serialization description for position property", ["0093.html"]], ["[css-houdini-drafts] Serialize property display", ["0092.html", "0089.html", "0088.html", "0087.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Should x and x+ interpolate if the list has only a single element?", ["0054.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Semantics of CSSURLImageValue constructor?", ["0020.html"]], ["Closed: [css-houdini-drafts] css-paint-api should give example of using border-image to draw outside the border-box", ["0035.html"]]], [["[css-houdini-drafts] [css-paint-api] Add example which uses ES5 class syntax.", ["0026.html"]], ["[css-houdini-drafts] [css-paint-api]: APIs not exposed in Worklets", ["0036.html", "0035.html", "0033.html", "0032.html", "0031.html", "0030.html", "0029.html", "0028.html", "0025.html", "0024.html", "0023.html", "0022.html", "0021.html", "0020.html", "0019.html", "0013.html"]], ["[css-houdini-drafts] [css-paint-api]: should constructors / parsers be exposed in Worklets?", ["0006.html"]], ["[css-houdini-drafts] [css-properties-values-api-1] What is the computed value of a <transform-list> in the middle of a layout dependent matrix decomposed interpolation?", ["0001.html"]], ["[css-houdini-drafts] [css-properties-values-api] inherits should be true by default", ["0039.html", "0038.html"]], ["[css-houdini-drafts] [css-properties-values-api] var() references to <length> type properties with font-relative lengths", ["0003.html", "0002.html"]], ["[css-houdini-drafts] [css-typed-om] .equals methods for CSSStyleValue subclasses", ["0007.html"]], ["[css-houdini-drafts] [css-typed-om] CSS Typed OM computed style view of transforms should be a function list", ["0010.html"]], ["[css-houdini-drafts] [css-typed-om] is this intentionally thing to throw different errors when when failed converting to unit type from string?", ["0027.html"]], ["[css-houdini-drafts] [css-typed-om] Semantics of CSSURLImageValue constructor?", ["0017.html", "0000.html"]], ["[css-houdini-drafts] [css-worklets] [css-typed-om] CSSResourceValues constructed within Worklets should have state \"unloaded\".", ["0004.html"]], ["[css-houdini-drafts] [worklets] Error handling in WorkletGlobalScope", ["0037.html", "0034.html"]], ["[css-houdini-drafts] Pull Request: [css-typed-om] Add Exposed=PaintWorklet to API", ["0011.html"]], ["[css-houdini-drafts] Pull Request: [css-typed-om] Replace background-position with object-position", ["0008.html"]], ["[css-houdini-drafts] Pull Request: Refactor out value type-checking logic from CSSStyleValue.append to fix issue #145", ["0009.html"]], ["[css-houdini-drafts] Pull Request: StylePropertyMaps are live objects.", ["0014.html"]], ["[css-houdini-drafts] StylePropertyMaps are live objects.", ["0015.html"]], ["Closed: [css-houdini-drafts] [css-paint-api]: should constructors / parsers be exposed in Worklets?", ["0005.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSS Typed OM computed style view of transforms should be a function list", ["0012.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Describe that StylePropertyMaps are not live objects", ["0016.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] When invoking the append(DOMString property (StyleValue or sequence<StyleValue> or DOMString) value) should refactor out value type-checking, as it\u2019ll be needed by the rest of the setters too", ["0018.html"]]], [["[css-houdini-drafts] [CSS Typed OM] What should CSSTransformValue's matrix if one of the components contains a relative length?", ["0049.html", "0043.html", "0042.html"]], ["[css-houdini-drafts] [css-paint-api] Box concrete object size", ["0037.html", "0029.html", "0028.html", "0027.html", "0026.html", "0022.html"]], ["[css-houdini-drafts] [css-paint-api] Converting a URL to a CanvasImageSource?", ["0040.html", "0031.html", "0021.html", "0020.html"]], ["[css-houdini-drafts] [css-properties-values-api] remove duplicated \"&lt; \"", ["0039.html"]], ["[css-houdini-drafts] [css-properties-values-api] What does Typed OM return for <transform-function> type properties?", ["0019.html", "0018.html", "0016.html", "0014.html", "0010.html"]], ["[css-houdini-drafts] [css-typed-om] CSSNumericValue.to should take multiple type inputs", ["0007.html"]], ["[css-houdini-drafts] [css-typed-om] Describe what setting is2D on CSSTransformComponent should do", ["0036.html", "0034.html", "0033.html", "0030.html", "0025.html", "0024.html", "0023.html", "0017.html", "0015.html", "0011.html"]], ["[css-houdini-drafts] [css-typed-om] should have min() and max() functions on CSSNumericValue", ["0052.html"]], ["[css-houdini-drafts] [css-typed-om] Should the CSSPerspective constructor reject negative lengths?", ["0048.html", "0046.html", "0045.html", "0041.html"]], ["[css-houdini-drafts] [css-typed-om] Why don't the transform constructors/attributes accept CSSUnitValues?", ["0053.html"]], ["[css-houdini-drafts] [worklets] Allow lazy construction of WorkletGlobalScope.", ["0044.html"]], ["[css-houdini-drafts] [worklets] Fetching and invoking a nondeterministic worklet script", ["0058.html", "0056.html", "0055.html"]], ["[css-houdini-drafts] [worklets] Post-resolution tasks for `addModule()` call", ["0032.html"]], ["[css-houdini-drafts] Fix for issue 276", ["0003.html", "0002.html"]], ["[css-houdini-drafts] Fix issue 325", ["0009.html", "0005.html", "0004.html"]], ["[css-houdini-drafts] Fix issue 404", ["0008.html"]], ["[css-houdini-drafts] Pull Request: Fix issue 325", ["0000.html"]], ["[css-houdini-drafts] Pull Request: Fix issue 404", ["0001.html"]], ["[css-houdini-drafts] Pull Request: Only allow <transform-list>", ["0012.html"]], ["[css-houdini-drafts] Pull Request: remove duplicated \"&lt; \" in css-properties-values-api.", ["0038.html"]], ["Closed: [css-houdini-drafts] [CSS Typed OM] What should CSSTransformValue's matrix if one of the components contains a relative length?", ["0050.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] What does Typed OM return for <transform-function> type properties?", ["0013.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSSNumericValue.to should take multiple type inputs", ["0006.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Describe what setting is2D on CSSTransformComponent should do", ["0035.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] should have min() and max() functions on CSSNumericValue", ["0051.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Should the CSSPerspective constructor reject negative lengths?", ["0047.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Why don't the transform constructors/attributes accept CSSUnitValues?", ["0054.html"]], ["Closed: [css-houdini-drafts] [worklets] Fetching and invoking a nondeterministic worklet script", ["0057.html"]]], [["[css-houdini-drafts] [CSS Typed OM] CSSFontFaceValue objects can't store source value", ["0027.html"]], ["[css-houdini-drafts] [css-paint-api]: APIs not exposed in Worklets", ["0034.html", "0033.html", "0032.html", "0031.html", "0030.html", "0029.html", "0024.html"]], ["[css-houdini-drafts] [css-paint-api]: should constructors / parsers be exposed in Worklets?", ["0025.html"]], ["[css-houdini-drafts] [css-typed-om] Font Family Name doesn't uniquely identify a font face", ["0014.html", "0013.html", "0012.html"]], ["[css-houdini-drafts] [css-typed-om] should have min() and max() functions on CSSNumericValue", ["0011.html"]], ["[css-houdini-drafts] [css-typed-om] What to do with a 2d CSSMatrixComponent set to a 3d DOMMatrix?", ["0044.html", "0041.html", "0040.html", "0039.html", "0038.html", "0037.html", "0036.html", "0009.html"]], ["[css-houdini-drafts] [css-typed-om] Will need to handle min()/max()", ["0017.html", "0015.html", "0010.html"]], ["[css-houdini-drafts] [worklets] (bikeshedding time!) import() name is potentially confusing...", ["0008.html"]], ["[css-houdini-drafts] [worklets] Fetching and invoking a worklet script which reports an exception", ["0019.html"]], ["[css-houdini-drafts] [worklets] Misc. edits from @domenic review.", ["0005.html", "0002.html"]], ["[css-houdini-drafts] [worklets] Should paintWorklet be a static attribute?", ["0045.html", "0043.html", "0042.html", "0023.html"]], ["[css-houdini-drafts] [worklets] Should worklets inherit their \"HTTPS state\", \"referrer policy\" from the parent document?", ["0007.html", "0004.html", "0003.html"]], ["[css-houdini-drafts] [worklets] Speculative evalution", ["0018.html"]], ["[css-houdini-drafts] Pull Request: [css-paint-api] fixed typo in example", ["0022.html"]], ["[css-houdini-drafts] Pull Request: [worklets] Misc. edits from @domenic review.", ["0001.html", "0000.html"]], ["[css-houdini-drafts] Specify how the event lifecycle/event loop", ["0021.html", "0020.html"]], ["Closed: [css-houdini-drafts] [CSS Typed OM] CSSFontFaceValue objects can't store source value", ["0026.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Returning a new object on every get from an attribute is bad", ["0028.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] What to do with a 2d CSSMatrixComponent set to a 3d DOMMatrix?", ["0035.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Will need to handle min()/max()", ["0016.html"]], ["Closed: [css-houdini-drafts] [worklets] Review", ["0006.html"]]], [["[css-houdini-drafts] [all] Move Houdini APIs to `window.CSS`", ["0259.html", "0244.html", "0139.html", "0029.html"]], ["[css-houdini-drafts] [CSS Typed OM] CSSFontFaceValue objects can't store source value", ["0174.html", "0059.html", "0052.html", "0019.html"]], ["[css-houdini-drafts] [css-paint-api] Add example which uses ES5 class syntax.", ["0106.html"]], ["[css-houdini-drafts] [css-paint-api] Consider different error in step 2 of registerPaint()", ["0097.html"]], ["[css-houdini-drafts] [css-paint-api] Consider making Path2D the only way to render paths with PaintRenderingContext2D.", ["0263.html", "0262.html", "0099.html"]], ["[css-houdini-drafts] [css-paint-api] JavaScript spec usage notes and suggestions", ["0110.html"]], ["[css-houdini-drafts] [css-paint-api] Pull examples into repo", ["0226.html"]], ["[css-houdini-drafts] [css-paint-api] Removes invalidation based on size, and allows user-a\u2026", ["0287.html", "0264.html", "0233.html"]], ["[css-houdini-drafts] [css-paint-api] scope of paint-valid flag being box (not box+use/size) seems wrong", ["0265.html"]], ["[css-houdini-drafts] [css-paint-api] should text be allowed, via CSSFontFaceValue typed OM?", ["0312.html"]], ["[css-houdini-drafts] [css-paint-api]: APIs not exposed in Worklets", ["0230.html", "0164.html", "0108.html"]], ["[css-houdini-drafts] [css-paint-api][css-properties-values-api][css-typed-om][worklets] Add 'Latest published version' links to EDs", ["0148.html", "0051.html", "0050.html", "0024.html"]], ["[css-houdini-drafts] [css-typed-om-1] Interfaces with value iterators need additional attributes and operations", ["0132.html", "0045.html", "0042.html", "0031.html"]], ["[css-houdini-drafts] [css-typed-om] .equals methods for CSSStyleValue subclasses", ["0253.html", "0058.html", "0049.html", "0028.html"]], ["[css-houdini-drafts] [css-typed-om] add detailed descriptions of the rest of the methods on StylePropertyMap", ["0007.html"]], ["[css-houdini-drafts] [css-typed-om] Allow 'none' for CSSImageValue", ["0317.html", "0313.html"]], ["[css-houdini-drafts] [css-typed-om] Consider using properties in addition to .get/.set", ["0256.html", "0021.html"]], ["[css-houdini-drafts] [css-typed-om] CSS Typed OM computed style view of transforms should be a function list", ["0303.html"]], ["[css-houdini-drafts] [css-typed-om] CSSNumericValue.to should take multiple type inputs", ["0258.html", "0245.html"]], ["[css-houdini-drafts] [css-typed-om] Describe how the StylePropertyMaps should interact with custom properties", ["0250.html", "0248.html", "0053.html", "0041.html"]], ["[css-houdini-drafts] [css-typed-om] Describe how the StylePropertyMaps should interact with custom properties and @apply", ["0014.html"]], ["[css-houdini-drafts] [css-typed-om] Describe that StylePropertyMaps are not live objects", ["0247.html", "0008.html"]], ["[css-houdini-drafts] [css-typed-om] Hz/kHz are the only Numeric factory methods containing capital letters", ["0004.html", "0002.html", "0001.html", "0000.html"]], ["[css-houdini-drafts] [css-typed-om] Returning a new object on every get from an attribute is bad", ["0252.html"]], ["[css-houdini-drafts] [css-typed-om] Setting/registering is allowed to be order-dependent", ["0030.html"]], ["[css-houdini-drafts] [css-typed-om] Stringification behavior", ["0013.html"]], ["[css-houdini-drafts] [css-typed-om] Value of 3d parameters in 2d transform components", ["0018.html"]], ["[css-houdini-drafts] [css-typed-om] What to do with a 2d CSSMatrixComponent set to a 3d DOMMatrix?", ["0043.html", "0040.html"]], ["[css-houdini-drafts] [css-typed-om] Why don't the transform constructors/attributes accept CSSUnitValues?", ["0057.html", "0056.html", "0044.html", "0039.html"]], ["[css-houdini-drafts] [css-typed-om] Will need to handle min()/max()", ["0316.html", "0315.html", "0314.html", "0309.html", "0308.html", "0304.html", "0293.html", "0292.html", "0291.html", "0261.html", "0260.html", "0257.html", "0255.html"]], ["[css-houdini-drafts] [css-typed-om]: CSSCalcLength is not defined", ["0064.html", "0060.html", "0048.html", "0035.html", "0034.html", "0009.html"]], ["[css-houdini-drafts] [css-typed-om]: There's no nice way to represent CSSUnparsedValue as a \"list-plus\" style object.", ["0307.html", "0295.html", "0294.html", "0286.html", "0285.html", "0284.html", "0283.html", "0282.html", "0266.html", "0251.html", "0246.html", "0084.html", "0079.html", "0078.html", "0070.html", "0063.html", "0062.html", "0061.html", "0046.html", "0037.html", "0032.html"]], ["[css-houdini-drafts] [isolated-workers] Specify what happens when a script in an isolated worker throws an error.", ["0176.html"]], ["[css-houdini-drafts] [isolated-workers] The event loop infrastructure of HTML is too tied to a normal processing model", ["0069.html"]], ["[css-houdini-drafts] [typed-om] Shorter dimension constructors on the CSS namespace?", ["0026.html"]], ["[css-houdini-drafts] [worklets] \"Multiple instances of WorkletGlobalScope can be created for each Worklet that they belong to.\"", ["0169.html"]], ["[css-houdini-drafts] [worklets] (bikeshedding time!) import() name is potentially confusing...", ["0299.html", "0289.html", "0242.html", "0219.html", "0218.html", "0216.html", "0215.html", "0214.html", "0208.html", "0207.html", "0206.html", "0194.html", "0193.html", "0192.html", "0178.html", "0095.html", "0089.html"]], ["[css-houdini-drafts] [worklets] <script> tag import feature design.", ["0243.html", "0217.html", "0137.html", "0130.html", "0129.html", "0128.html", "0127.html", "0126.html", "0117.html", "0116.html", "0115.html", "0114.html"]], ["[css-houdini-drafts] [worklets] Add [[Worklets]] internal slot to window.", ["0213.html", "0202.html"]], ["[css-houdini-drafts] [worklets] Adds hook for downstream spec to set the destination.", ["0189.html", "0185.html"]], ["[css-houdini-drafts] [worklets] consider \"omit\" for the CORS setting?", ["0158.html"]], ["[css-houdini-drafts] [worklets] could the module responses cache and custom fetch steps be simplified?", ["0113.html"]], ["[css-houdini-drafts] [worklets] Create WorkletOptions dictionary to pass through credentials.", ["0168.html", "0154.html"]], ["[css-houdini-drafts] [worklets] CSP", ["0187.html", "0182.html"]], ["[css-houdini-drafts] [worklets] don't run scripts from \"in parallel\"", ["0077.html", "0076.html", "0074.html", "0073.html"]], ["[css-houdini-drafts] [worklets] Fill in privacy and security sections of worklets.", ["0125.html"]], ["[css-houdini-drafts] [worklets] Fixes the setup of the inside setttings object for worklets.", ["0155.html", "0151.html"]], ["[css-houdini-drafts] [worklets] IDLs for examples is mixed in IDL index", ["0055.html", "0006.html"]], ["[css-houdini-drafts] [worklets] import() method conflicts with new JavaScript feature", ["0091.html", "0075.html"]], ["[css-houdini-drafts] [worklets] imports requires WorkletGlobalScope creation to be immediate", ["0102.html", "0101.html", "0100.html"]], ["[css-houdini-drafts] [worklets] Introduce an \"owner document\" for each WorkletGlobalScope.", ["0305.html", "0300.html", "0241.html", "0240.html", "0239.html", "0238.html", "0237.html", "0236.html"]], ["[css-houdini-drafts] [worklets] Multiple fixes to the {{Worklet/import()}} algorithm.", ["0140.html", "0138.html", "0121.html", "0120.html", "0119.html", "0118.html", "0096.html", "0094.html"]], ["[css-houdini-drafts] [worklets] No Console interface anymore", ["0066.html", "0005.html"]], ["[css-houdini-drafts] [worklets] Owner of a worklet is not a formally defined thing", ["0212.html", "0170.html"]], ["[css-houdini-drafts] [worklets] Passing a promise to \"fetch and invoke a worklet script\" algorithm could be wrong", ["0268.html", "0267.html"]], ["[css-houdini-drafts] [worklets] Provide hook for allowing downstream specs to specify a CSP destination.", ["0205.html", "0204.html", "0122.html"]], ["[css-houdini-drafts] [worklets] relationship to JavaScript agent clusters", ["0302.html", "0301.html", "0298.html", "0297.html", "0296.html", "0281.html", "0280.html", "0279.html", "0278.html", "0277.html", "0276.html", "0275.html", "0274.html", "0273.html", "0272.html", "0271.html", "0270.html", "0221.html", "0220.html", "0190.html", "0171.html", "0146.html", "0133.html"]], ["[css-houdini-drafts] [worklets] Review", ["0324.html", "0323.html", "0322.html", "0321.html", "0320.html", "0306.html"]], ["[css-houdini-drafts] [worklets] Reworks \"Code Idempotency\" section.", ["0199.html", "0196.html", "0186.html", "0181.html"]], ["[css-houdini-drafts] css-paint-api should give example of using border-image to draw outside the border-box", ["0310.html"]], ["[css-houdini-drafts] Fetching worklets", ["0165.html"]], ["[css-houdini-drafts] IDL index contains fake IDL constructs", ["0157.html", "0147.html"]], ["[css-houdini-drafts] import() exception note disagrees with normative text", ["0072.html"]], ["[css-houdini-drafts] import() fetches scripts twice when there's no worklet global", ["0161.html"]], ["[css-houdini-drafts] import() setup is inefficient", ["0162.html"]], ["[css-houdini-drafts] markup language", ["0224.html", "0223.html"]], ["[css-houdini-drafts] markup lanuage", ["0222.html", "0195.html", "0191.html", "0173.html", "0167.html"]], ["[css-houdini-drafts] Only microtasks, but still postMessage()?", ["0088.html", "0087.html", "0086.html", "0085.html", "0083.html", "0082.html", "0080.html"]], ["[css-houdini-drafts] Pull Request: [css-paint-api] Fix image placeholder example", ["0319.html"]], ["[css-houdini-drafts] Pull Request: [css-paint-api] Removes invalidation based on size, and allows user-a\u2026", ["0232.html", "0231.html"]], ["[css-houdini-drafts] Pull Request: [worklets] Add [[Worklets]] internal slot to window.", ["0201.html", "0200.html"]], ["[css-houdini-drafts] Pull Request: [worklets] Adds hook for downstream spec to set the destination.", ["0184.html", "0183.html"]], ["[css-houdini-drafts] Pull Request: [worklets] Create WorkletOptions dictionary to pass through credentials.", ["0153.html", "0152.html"]], ["[css-houdini-drafts] Pull Request: [worklets] Fill in privacy and security sections of worklets.", ["0124.html", "0123.html"]], ["[css-houdini-drafts] Pull Request: [worklets] Fixes the setup of the inside setttings object for worklets.", ["0150.html", "0149.html"]], ["[css-houdini-drafts] Pull Request: [worklets] Multiple fixes to the {{Worklet/import()}} algorithm.", ["0093.html", "0092.html"]], ["[css-houdini-drafts] Pull Request: [worklets] Reworks \"Code Idempotency\" section.", ["0180.html", "0179.html"]], ["[css-houdini-drafts] The Calc* classes need a \"number\" member", ["0015.html"]], ["[css-houdini-drafts] what should css-paint-api allow in terms of filters?", ["0311.html"]], ["[css-houdini-drafts] When doing CSSStyleValue.parse(), what should throw vs return null?", ["0254.html", "0249.html", "0047.html", "0036.html", "0033.html", "0027.html", "0023.html", "0020.html"]], ["[css-houdini-drafts] Why is there a responsible browsing context, but no document?", ["0210.html", "0209.html", "0203.html"]], ["Closed: [css-houdini-drafts] \"fetch a module script tree\" is asynchronous", ["0142.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] [Seattle-2017] Review thread behavior of API.", ["0112.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Add example which uses ES5 class syntax.", ["0105.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Add inputArguments to paint API", ["0135.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Add spec text to describe animation of paint() functions", ["0229.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Add to explainer the large amount of DOM motivation.", ["0107.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Allow paint function arguments, properties, or both?", ["0134.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Consider different error in step 2 of registerPaint()", ["0098.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Decide what to do with 'currentColor' as a fillStyle/strokeStyle on PaintRenderingContext2D", ["0228.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Fix wording in section 8.", ["0227.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] If a class isn't registered and sets to \"invalid\"; log an error to the console", ["0109.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] JavaScript spec usage notes and suggestions", ["0111.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Link to explainer at the top of the spec.", ["0136.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Pull examples into repo", ["0225.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] scope of paint-valid flag being box (not box+use/size) seems wrong", ["0288.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] should normatively require switching between at least 2 worklet global scopes in most cases", ["0235.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] should paintWorker be a property on window (and thus be in the global namespace)?", ["0104.html"]], ["Closed: [css-houdini-drafts] [css-typed-om-1] Interfaces with value iterators need additional attributes and operations", ["0131.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Allow 'none' for CSSImageValue", ["0318.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Hz/kHz are the only Numeric factory methods containing capital letters", ["0003.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] need to distinguish CSSStyleValue.parse vs parseAll", ["0022.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Value of 3d parameters in 2d transform components", ["0017.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Why `.cssText` instead of just using stringifiers?", ["0038.html"]], ["Closed: [css-houdini-drafts] [css-typed-om]: CSSCalcLength is not defined", ["0010.html"]], ["Closed: [css-houdini-drafts] [css-typed-om]: CSSLengthValue cannot represent 0", ["0011.html"]], ["Closed: [css-houdini-drafts] [css-typed-om]: use USVString for URLs", ["0012.html"]], ["Closed: [css-houdini-drafts] [isolated-workers] Specify what happens when a script in an isolated worker throws an error.", ["0175.html"]], ["Closed: [css-houdini-drafts] [isolated-workers] The event loop infrastructure of HTML is too tied to a normal processing model", ["0068.html"]], ["Closed: [css-houdini-drafts] [typed-om] Shorter dimension constructors on the CSS namespace?", ["0025.html"]], ["Closed: [css-houdini-drafts] [worklets] \"Multiple instances of WorkletGlobalScope can be created for each Worklet that they belong to.\"", ["0197.html"]], ["Closed: [css-houdini-drafts] [worklets] (bikeshedding time!) import() name is potentially confusing...", ["0290.html"]], ["Closed: [css-houdini-drafts] [worklets] consider \"omit\" for the CORS setting?", ["0159.html"]], ["Closed: [css-houdini-drafts] [worklets] CSP", ["0188.html"]], ["Closed: [css-houdini-drafts] [worklets] don't run scripts from \"in parallel\"", ["0145.html"]], ["Closed: [css-houdini-drafts] [worklets] fetch a module script tree", ["0141.html"]], ["Closed: [css-houdini-drafts] [worklets] IDLs for examples is mixed in IDL index", ["0054.html"]], ["Closed: [css-houdini-drafts] [worklets] import() method conflicts with new JavaScript feature", ["0090.html"]], ["Closed: [css-houdini-drafts] [worklets] imports requires WorkletGlobalScope creation to be immediate", ["0103.html"]], ["Closed: [css-houdini-drafts] [worklets] JavaScript global environment is no longer a thing", ["0067.html"]], ["Closed: [css-houdini-drafts] [worklets] Make \"Code Idempotency\" section normative and stronger", ["0198.html"]], ["Closed: [css-houdini-drafts] [worklets] No Console interface anymore", ["0065.html"]], ["Closed: [css-houdini-drafts] [worklets] Owner of a worklet is not a formally defined thing", ["0211.html"]], ["Closed: [css-houdini-drafts] [worklets] Passing a promise to \"fetch and invoke a worklet script\" algorithm could be wrong", ["0269.html"]], ["Closed: [css-houdini-drafts] Fetching worklets", ["0166.html"]], ["Closed: [css-houdini-drafts] HTTPS state not defined for worklets", ["0177.html"]], ["Closed: [css-houdini-drafts] IDL index contains fake IDL constructs", ["0156.html"]], ["Closed: [css-houdini-drafts] import() exception note disagrees with normative text", ["0071.html"]], ["Closed: [css-houdini-drafts] import() fetches scripts twice when there's no worklet global", ["0160.html"]], ["Closed: [css-houdini-drafts] import() setup is inefficient", ["0163.html"]], ["Closed: [css-houdini-drafts] import() should grab state before executing in parallel", ["0144.html"]], ["Closed: [css-houdini-drafts] Long running scripts", ["0234.html"]], ["Closed: [css-houdini-drafts] markup lanuage", ["0172.html"]], ["Closed: [css-houdini-drafts] Only microtasks, but still postMessage()?", ["0081.html"]], ["Closed: [css-houdini-drafts] The Calc* classes need a \"number\" member", ["0016.html"]], ["Closed: [css-houdini-drafts] Worklet event loop is not run?", ["0143.html"]]], [["[css-houdini-drafts] [all] Move Houdini APIs to `window.CSS`", ["0018.html"]], ["[css-houdini-drafts] [css-properties-values-api] [css-typed-om] What does Typed OM return for <transform-function> type properties?", ["0015.html"]], ["[css-houdini-drafts] [css-properties-values-api] Registering a property should cause us to validate var() fallback", ["0000.html"]], ["[css-houdini-drafts] [css-typed-om] .equals methods for CSSStyleValue subclasses", ["0017.html", "0016.html"]], ["[css-houdini-drafts] [css-typed-om] Add a superclass for all the dimensions", ["0002.html"]], ["[css-houdini-drafts] [css-typed-om] Hz/kHz are the only Numeric factory methods containing capital letters", ["0021.html", "0020.html", "0019.html"]], ["[css-houdini-drafts] [css-typed-om] Lengths and Angles (and other unit-group objects) should have consistent structure", ["0004.html"]], ["[css-houdini-drafts] [css-typed-om] What to do with a 2d CSSMatrixComponent set to a 3d DOMMatrix?", ["0014.html", "0013.html"]], ["[css-houdini-drafts] [css-typed-om] Why `.cssText` instead of just using stringifiers?", ["0012.html", "0010.html", "0009.html", "0008.html"]], ["[css-houdini-drafts] [css-typed-om] Why don't the transform constructors/attributes accept CSSUnitValues?", ["0011.html"]], ["[css-houdini-drafts] [css-typed-om] Why the no-arg CSSTransformValue() constructor?", ["0007.html", "0005.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Add a superclass for all the dimensions", ["0001.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Lengths and Angles (and other unit-group objects) should have consistent structure", ["0003.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Why the no-arg CSSTransformValue() constructor?", ["0006.html"]]], [["[css-houdini-drafts] [all] Move Houdini APIs to `window.CSS`", ["0001.html"]], ["[css-houdini-drafts] [css-paint-api] Add example which uses ES5 class syntax.", ["0034.html", "0032.html"]], ["[css-houdini-drafts] [css-paint-api] Consider different error in step 2 of registerPaint()", ["0033.html"]], ["[css-houdini-drafts] [css-properties-values-api] Registering a property should cause us to validate var() fallback", ["0031.html"]], ["[css-houdini-drafts] [css-properties-values-api] Substituting registered properties with var()", ["0030.html", "0000.html"]], ["[css-houdini-drafts] [css-typed-om-1] Interfaces with value iterators need additional attributes and operations", ["0024.html", "0022.html"]], ["[css-houdini-drafts] [css-typed-om] Add .update() to styleMap", ["0017.html", "0005.html"]], ["[css-houdini-drafts] [css-typed-om] Add a superclass for all the dimensions", ["0019.html"]], ["[css-houdini-drafts] [css-typed-om] Lengths and Angles (and other unit-group objects) should have consistent structure", ["0027.html", "0026.html", "0021.html", "0015.html"]], ["[css-houdini-drafts] [css-typed-om] Make all the value objects mutable", ["0016.html", "0002.html"]], ["[css-houdini-drafts] [css-typed-om] Move DOMMatrixReadOnly out of CSSTransformComponent to CSSMatrixComponent (and make mutable)", ["0004.html", "0003.html"]], ["[css-houdini-drafts] [css-typed-om] Setting/registering is allowed to be order-dependent", ["0008.html", "0006.html"]], ["[css-houdini-drafts] [css-typed-om] Should talk about 'declared' CSS values rather than 'specified'", ["0007.html"]], ["[css-houdini-drafts] [css-typed-om] Will need to handle min()/max()", ["0028.html"]], ["[css-houdini-drafts] [typed-om] Shorter dimension constructors on the CSS namespace?", ["0020.html"]], ["[css-houdini-drafts] Global CSS Mixins", ["0010.html"]], ["[css-houdini-drafts] One repo per draft?", ["0025.html", "0023.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Substituting registered properties with var()", ["0029.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Add .update() to styleMap", ["0018.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Make all the value objects mutable", ["0012.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Move DOMMatrixReadOnly out of CSSTransformComponent to CSSMatrixComponent (and make mutable)", ["0013.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Should talk about 'declared' CSS values rather than 'specified'", ["0014.html"]], ["Closed: [css-houdini-drafts] Global CSS Mixins", ["0011.html"]], ["Closed: [css-houdini-drafts] One repo per draft?", ["0009.html"]]], [["[css-houdini-drafts] [css-layout-api] Change explainer to use parallel layout when possible.", ["0036.html", "0035.html"]], ["[css-houdini-drafts] [css-layout-api] Decide on how to do min/max Content Sizes.", ["0033.html", "0029.html"]], ["[css-houdini-drafts] [css-layout-api] Fix typo where the wrong variable was accessed.", ["0015.html"]], ["[css-houdini-drafts] [css-layout-api] Have a inputPropertiesForMinMaxContentContribution?", ["0034.html"]], ["[css-houdini-drafts] [css-layout-api] s/dominantBaseline/alignmentBaseline.", ["0031.html"]], ["[css-houdini-drafts] [css-layout-api] VoidFunction is also defined in another spec", ["0012.html", "0008.html", "0007.html"]], ["[css-houdini-drafts] [css-layout] No need for separate inline-layout() function", ["0032.html"]], ["[css-houdini-drafts] [css-paint-api] [Seattle-2017] Review thread behavior of API.", ["0022.html"]], ["[css-houdini-drafts] [css-paint-api] Add inputArguments to paint API", ["0038.html", "0030.html"]], ["[css-houdini-drafts] [css-paint-api] Add to explainer the large amount of DOM motivation.", ["0026.html"]], ["[css-houdini-drafts] [css-paint-api] Adds paint function arguments.", ["0011.html"]], ["[css-houdini-drafts] [css-paint-api] class constructor valid flag is unused", ["0003.html"]], ["[css-houdini-drafts] [css-paint-api] Consider making Path2D the only way to render paths with PaintRenderingContext2D.", ["0039.html"]], ["[css-houdini-drafts] [css-paint-api] If a class isn't registered and sets to \"invalid\"; log an error to the console", ["0027.html"]], ["[css-houdini-drafts] [css-paint-api] Link to explainer at the top of the spec.", ["0024.html"]], ["[css-houdini-drafts] [css-paint-api] Pull examples into repo", ["0025.html"]], ["[css-houdini-drafts] [css-paint-api] should paintWorker be a property on window (and thus be in the global namespace)?", ["0023.html"]], ["[css-houdini-drafts] [worklets] Create ability for code to be loaded into worklets declaratively.", ["0028.html"]], ["[css-houdini-drafts] Pull Request: [css-layout-api] Fix a few minor typos in the spec and the explainer document", ["0040.html"]], ["[css-houdini-drafts] Pull Request: [css-layout-api] Fix typo where the wrong variable was accessed.", ["0006.html"]], ["[css-houdini-drafts] Pull Request: [css-paint-api] Adds paint function arguments.", ["0010.html", "0009.html"]], ["[css-houdini-drafts] Using Invoke/Construct directly without IDL settings machinery is broken", ["0017.html"]], ["Closed: [css-houdini-drafts] [css-layout-api] s/dominantBaseline/alignmentBaseline.", ["0037.html"]], ["Closed: [css-houdini-drafts] [css-layout-api] VoidFunction is also defined in another spec", ["0013.html"]], ["Closed: [css-houdini-drafts] [css-paint-api-1] \"This is how the class should look\" is confusing", ["0001.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Add \"alpha\" as an option.", ["0005.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] algorithm for registering custom paint depends on undefined \"constructor\" variable", ["0002.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Allow paint function arguments, properties, or both?", ["0018.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] class constructor valid flag is unused", ["0004.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] lack of complete examples is problematic", ["0014.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSSFontFaceValue.fontFaceName could be fontFamilyName?", ["0000.html"]], ["Closed: [css-houdini-drafts] draw a paint image is not thread safe", ["0019.html"]], ["Closed: [css-houdini-drafts] registerPaint() behavior is unclear", ["0021.html"]], ["Closed: [css-houdini-drafts] registerPaint() inputProperties is unsafe", ["0020.html"]], ["Closed: [css-houdini-drafts] Using Invoke/Construct directly without IDL settings machinery is broken", ["0016.html"]]], [["[css-houdini-drafts] [css-layout-api] VoidFunction is also defined in another spec", ["0003.html", "0002.html", "0001.html"]], ["[css-houdini-drafts] [css-typed-om] Spec up ColorValue", ["0000.html"]]], [["[css-houdini-drafts] [font-metrics-api] Which line box?", ["0006.html"]], ["[css-houdini-drafts] Global CSS Mixins", ["0009.html", "0004.html", "0003.html", "0002.html", "0001.html", "0000.html"]], ["[css-houdini-drafts] Nested CSS Selectors will be implemented?", ["0008.html", "0005.html"]], ["Closed: [css-houdini-drafts] Nested CSS Selectors will be implemented?", ["0007.html"]]], [["[css-houdini-drafts] [css-paint-api] Add inputArguments to paint API", ["0016.html"]], ["[css-houdini-drafts] [css-paint-api] algorithm for registering custom paint depends on undefined \"constructor\" variable", ["0031.html"]], ["[css-houdini-drafts] [css-paint-api] class constructor valid flag is unused", ["0032.html"]], ["[css-houdini-drafts] [css-paint-api] lack of complete examples is problematic", ["0034.html"]], ["[css-houdini-drafts] [css-paint-api] scope of paint-valid flag being box (not box+use/size) seems wrong", ["0029.html", "0028.html"]], ["[css-houdini-drafts] [css-paint-api] should normatively require switching between at least 2 worklet global scopes in most cases", ["0035.html", "0030.html"]], ["[css-houdini-drafts] [css-paint-api] should paintWorker be a property on window (and thus be in the global namespace)?", ["0033.html"]], ["[css-houdini-drafts] [css-properties-values-api] Substituting registered properties with var()", ["0036.html", "0025.html", "0017.html", "0015.html", "0014.html", "0013.html", "0012.html", "0011.html", "0010.html", "0009.html", "0008.html"]], ["[css-houdini-drafts] [css-typed-om] .equals methods for CSSStyleValue subclasses", ["0027.html", "0026.html"]], ["[css-houdini-drafts] [css-typed-om] CSSFontFaceValue.fontFaceName could be fontFamilyName?", ["0022.html", "0021.html"]], ["[css-houdini-drafts] [typed-om] Shorter dimension constructors on the CSS namespace?", ["0007.html", "0006.html", "0005.html", "0004.html"]], ["[css-houdini-drafts] [worklets] could the module responses cache and custom fetch steps be simplified?", ["0024.html"]], ["[css-houdini-drafts] One repo per draft?", ["0003.html", "0002.html", "0001.html", "0000.html"]], ["[css-houdini-drafts] Proposal, custom script based transitions", ["0020.html", "0018.html"]], ["[css-houdini-drafts] Pull Request: Rename CSSFontFaceValue.fontFaceName to fontFamilyName", ["0023.html"]], ["Closed: [css-houdini-drafts] Proposal, custom script based transitions", ["0019.html"]]], [["[css-houdini-drafts] \"computationally idempotent\" is a bad term", ["0045.html"]], ["[css-houdini-drafts] [CSS Typed OM]", ["0008.html", "0007.html"]], ["[css-houdini-drafts] [css-box-tree][css-layout-api][css-paint-api][css-parser-api][css-properties-values-api][css-typed-om][font-metrics-api][worklets] Add 'Latest version' to EDs", ["0086.html"]], ["[css-houdini-drafts] [css-paint-api-1] \"This is how the class should look\" is confusing", ["0001.html"]], ["[css-houdini-drafts] [css-paint-api] Add \"alpha\" as an option.", ["0074.html", "0073.html"]], ["[css-houdini-drafts] [css-paint-api] should registered paint names be somehow limited to shadow trees they are registered in?", ["0087.html", "0072.html"]], ["[css-houdini-drafts] [css-properties-and-values-api] should initial values be allowed to have variable references?", ["0020.html"]], ["[css-houdini-drafts] [css-properties-values-api] [css-typed-om] What does Typed OM return for <transform-function> type properties?", ["0004.html", "0003.html"]], ["[css-houdini-drafts] [css-properties-values-api] Computed values for <color>", ["0048.html"]], ["[css-houdini-drafts] [css-properties-values-api] is initialValue required when syntax is not \"*\"?", ["0033.html"]], ["[css-houdini-drafts] [css-properties-values-api] mention how animations involving invalid token stream values work", ["0050.html", "0049.html", "0035.html"]], ["[css-houdini-drafts] [css-properties-values-api] var() references to <length> type properties with font-relative lengths", ["0097.html", "0089.html"]], ["[css-houdini-drafts] [css-typed-om] clarify how CSSUnparsedValues compute.", ["0016.html"]], ["[css-houdini-drafts] [css-typed-om] Consider using properties in addition to .get/.set", ["0068.html", "0067.html"]], ["[css-houdini-drafts] [css-typed-om] CSSTokenStream values need to computed to other values in some cases", ["0017.html", "0014.html", "0011.html"]], ["[css-houdini-drafts] [css-typed-om] Describe that StylePropertyMaps are not live objects", ["0066.html"]], ["[css-houdini-drafts] [css-typed-om] Should StyleMap be case sensitive?", ["0084.html", "0080.html", "0079.html", "0078.html", "0070.html", "0065.html"]], ["[css-houdini-drafts] [css-typed-om] Spec up ColorValue", ["0000.html"]], ["[css-houdini-drafts] [css-typed-om] Stringification behavior", ["0051.html"]], ["[css-houdini-drafts] [font-metrics-api] Clarification on internal leadings", ["0076.html", "0075.html", "0063.html", "0062.html", "0061.html", "0060.html"]], ["[css-houdini-drafts] [Typed OM] Add example for CSSResourceValue normalization", ["0083.html", "0058.html"]], ["[css-houdini-drafts] [Typed OM] Add example for CSSTransformValue normalization", ["0059.html"]], ["[css-houdini-drafts] [worklets] Make \"Code Idempotency\" section normative and stronger", ["0081.html", "0077.html", "0071.html", "0069.html", "0064.html"]], ["[css-houdini-drafts] Fetching worklets", ["0091.html"]], ["[css-houdini-drafts] How to handle properties with optionality in the list of property mappings?", ["0031.html"]], ["[css-houdini-drafts] How to handle reorderable properties in the list of property mappings?", ["0030.html"]], ["[css-houdini-drafts] List of property mappings doesn't handle shorthands", ["0029.html"]], ["[css-houdini-drafts] List of property mappings is incomplete and incorrect", ["0028.html"]], ["[css-houdini-drafts] need to define the exact grammar accepted by \"syntax\"", ["0044.html", "0043.html"]], ["[css-houdini-drafts] One repo per draft?", ["0090.html"]], ["[css-houdini-drafts] Only microtasks, but still postMessage()?", ["0094.html", "0093.html"]], ["[css-houdini-drafts] PairValue/etc aren't documented anywhere", ["0032.html"]], ["[css-houdini-drafts] Proposal, custom script based transitions", ["0085.html"]], ["[css-houdini-drafts] Pull Request: [css-typed-om] Attempt at serialization section.", ["0025.html", "0024.html"]], ["[css-houdini-drafts] Pull Request: [css-typed-om] clarify how CSSUnparsedValues compute.", ["0013.html", "0012.html"]], ["[css-houdini-drafts] Pull Request: [font-metrics-api] Initial FontMetrics draft", ["0010.html"]], ["[css-houdini-drafts] Pull Request: [Typed OM] Add example for CSSResourceValue normalization", ["0015.html"]], ["[css-houdini-drafts] Pull Request: [Typed OM] Add example for CSSTransformValue normalization", ["0019.html"]], ["[css-houdini-drafts] Pull Request: Delete Issue 6", ["0006.html"]], ["[css-houdini-drafts] Pull Request: Fix up linking now that WebIDL is in Bikeshed.", ["0002.html"]], ["[css-houdini-drafts] Pull Request: Merge changes", ["0082.html"]], ["[css-houdini-drafts] Pull Request: Merge pull request #2 from w3c/master", ["0057.html"]], ["[css-houdini-drafts] Pull Request: Reference Issue 282 in the spec", ["0005.html"]], ["[css-houdini-drafts] Pull Request: Remove fatal errors from Typed OM Version 1 spec", ["0009.html"]], ["[css-houdini-drafts] Put together a explainer doc for what the parser api should be able to accomplish", ["0095.html", "0088.html"]], ["[css-houdini-drafts] When doing CSSStyleValue.parse(), what should throw vs return null?", ["0056.html", "0055.html", "0053.html"]], ["[css-houdini-drafts] Worklet event loop is not run?", ["0092.html"]], ["Closed: [css-houdini-drafts] \"computationally idempotent\" is a bad term", ["0046.html"]], ["Closed: [css-houdini-drafts] [css-properties-and-values-api] should initial values be allowed to have variable references?", ["0021.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Computed values for <color>", ["0047.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Computed values for <transform>", ["0054.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Example 2: should explain more clearly why `inherit` instead of `green` in description", ["0052.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] Interpolate lists as simple or repeatable lists?", ["0022.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] is initialValue required when syntax is not \"*\"?", ["0034.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSSTokenStream values need to computed to other values in some cases", ["0018.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Should use 'as specified' rather than 'identical'", ["0026.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] When invoked, the append(DOMString property (StyleValue or sequence<StyleValue> or DOMString) value) first need to check whether the property is a valid property.", ["0027.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] When invoking the append(DOMString property (StyleValue or sequence<StyleValue> or DOMString) value) need a robust description of what \"a type that property can\u2019t accept\" means.", ["0036.html"]], ["Closed: [css-houdini-drafts] CSS operations static or not static?", ["0023.html"]], ["Closed: [css-houdini-drafts] How to handle properties with optionality in the list of property mappings?", ["0040.html"]], ["Closed: [css-houdini-drafts] How to handle reorderable properties in the list of property mappings?", ["0041.html"]], ["Closed: [css-houdini-drafts] List of property mappings doesn't handle shorthands", ["0042.html"]], ["Closed: [css-houdini-drafts] List of property mappings is incomplete and incorrect", ["0039.html"]], ["Closed: [css-houdini-drafts] PairValue/etc aren't documented anywhere", ["0038.html"]], ["Closed: [css-houdini-drafts] Put together a explainer doc for what the parser api should be able to accomplish", ["0096.html"]], ["Closed: [css-houdini-drafts] registerProperty/unregisterProperty should be clearer about escaping of property name", ["0037.html"]]], [["[css-houdini-drafts] \"computationally idempotent\" is a bad term", ["0094.html", "0091.html", "0090.html", "0084.html", "0082.html", "0081.html"]], ["[css-houdini-drafts] [box-tree-api] Explain css pseudo elements", ["0021.html"]], ["[css-houdini-drafts] [css-properties-and-values-api] define how typed custom properties influence @supports", ["0075.html", "0074.html", "0073.html", "0020.html"]], ["[css-houdini-drafts] [css-properties-values-api] <image> gradient values computed", ["0045.html", "0002.html", "0000.html"]], ["[css-houdini-drafts] [css-properties-values-api] Computed values for <color>", ["0078.html", "0077.html", "0076.html"]], ["[css-houdini-drafts] [css-properties-values-api] is initialValue required when syntax is not \"*\"?", ["0105.html"]], ["[css-houdini-drafts] [css-properties-values-api] mention how animations involving invalid token stream values work", ["0095.html"]], ["[css-houdini-drafts] [css-typed-om] CSSLengthValue normalization typo?", ["0041.html"]], ["[css-houdini-drafts] [css-typed-om] CSSMatrix class conflicts with old prefixed Matrix classes", ["0102.html", "0048.html", "0042.html"]], ["[css-houdini-drafts] [css-typed-om] CSSRotation/Skew can be constructed with doubles, but not CSSTranslation/Perspective", ["0047.html", "0044.html", "0012.html", "0011.html", "0010.html", "0009.html", "0004.html"]], ["[css-houdini-drafts] [css-typed-om] CSSTokenStream values need to computed to other values in some cases", ["0008.html"]], ["[css-houdini-drafts] [css-typed-om] CSSTokenStreamValue", ["0055.html", "0052.html", "0029.html"]], ["[css-houdini-drafts] [css-typed-om] Describe how the StylePropertyMaps should interact with custom properties and @apply", ["0019.html"]], ["[css-houdini-drafts] [css-typed-om] getProperties should specify an order in which the properties is returned", ["0097.html", "0024.html"]], ["[css-houdini-drafts] [css-typed-om] Remove double constructors for CSSRotation and CSSSkew", ["0059.html"]], ["[css-houdini-drafts] [css-typed-om] Rename CSSTokenStream to something that doesn't talk about tokens", ["0098.html", "0027.html"]], ["[css-houdini-drafts] [css-typed-om] Spec up ColorValue", ["0023.html"]], ["[css-houdini-drafts] [css-typed-om] Stringification behavior", ["0043.html"]], ["[css-houdini-drafts] [css-typed-om] StylePropertyMap iterable", ["0003.html"]], ["[css-houdini-drafts] [css-typed-om] Value of 3d parameters in 2d tranform components", ["0087.html", "0086.html"]], ["[css-houdini-drafts] [css-typed-om] Value of 3d parameters in 2d transform components", ["0093.html", "0089.html", "0088.html"]], ["[css-houdini-drafts] [css-typed-om]: CSSCalcDictionary needs a different name", ["0100.html", "0034.html"]], ["[css-houdini-drafts] [css-typed-om]: CSSLengthValue cannot represent 0", ["0037.html"]], ["[css-houdini-drafts] [css-typed-om]: CSSTokenStreamValue is not valid IDL", ["0069.html", "0068.html", "0067.html", "0066.html", "0065.html", "0064.html", "0061.html", "0060.html", "0056.html", "0050.html", "0049.html", "0030.html"]], ["[css-houdini-drafts] [css-typed-om]: number and length representations might be wrong", ["0038.html"]], ["[css-houdini-drafts] [css-typed-om]: should constructors / parsers be exposed in Worklets?", ["0054.html", "0053.html", "0051.html", "0033.html", "0032.html", "0031.html"]], ["[css-houdini-drafts] Consider supporting existing CSS Property parsings", ["0080.html", "0072.html", "0071.html", "0018.html", "0017.html", "0016.html", "0015.html", "0014.html"]], ["[css-houdini-drafts] CSS operations static or not static?", ["0092.html"]], ["[css-houdini-drafts] Do any StyleValue subclasses other than LengthValue need a 'from' method?", ["0026.html", "0025.html"]], ["[css-houdini-drafts] IDL index contains fake IDL constructs", ["0063.html", "0062.html"]], ["[css-houdini-drafts] need to define the exact grammar accepted by \"syntax\"", ["0104.html", "0079.html"]], ["[css-houdini-drafts] Proposal, custom script based transitions", ["0013.html"]], ["[css-houdini-drafts] Pull Request: [css-layout-api] fix typo", ["0106.html"]], ["[css-houdini-drafts] Pull Request: [css-typed-om] Remove double constructors for CSSRotation and CSSSkew", ["0058.html"]], ["[css-houdini-drafts] Pull Request: [css-typed-om] Remove skew/rotate double constructors, and change angle member type", ["0057.html"]], ["[css-houdini-drafts] registerProperty/unregisterProperty should be clearer about escaping of property name", ["0083.html"]], ["[css-houdini-drafts] Should use 'as specified' rather than 'identical'", ["0001.html"]], ["[css-houdini-drafts] The Calc* classes need a \"number\" member", ["0036.html", "0035.html"]], ["Closed: [css-houdini-drafts] [css-properties-values-api] <image> gradient values computed", ["0046.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSSFontFaceValue should say a bit more about what it is", ["0006.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSSLengthValue normalization typo?", ["0040.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSSMatrix class conflicts with old prefixed Matrix classes", ["0103.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSSRotation/Skew can be constructed with doubles, but not CSSTranslation/Perspective", ["0085.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSSTokenStreamValue", ["0028.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] getProperties should specify an order in which the properties is returned", ["0096.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Need to specify how fonts (and other blobs) get passed into Typed OM stuff", ["0007.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Rename CSSTokenStream to something that doesn't talk about tokens", ["0099.html"]], ["Closed: [css-houdini-drafts] [css-typed-om]: CSSCalcDictionary needs a different name", ["0101.html"]], ["Closed: [css-houdini-drafts] [css-typed-om]: number and length representations might be wrong", ["0039.html"]], ["Closed: [css-houdini-drafts] Consider supporting existing CSS Property parsings", ["0070.html"]], ["Closed: [css-houdini-drafts] StyleValue.parse() should also allow no validation", ["0022.html"]], ["Closed: [css-houdini-drafts] Typed OM *must* support shorthands", ["0005.html"]]], [["[css-houdini-drafts] \"This version\" link is wrong", ["0030.html", "0020.html"]], ["[css-houdini-drafts] [css-layout-api] Come up with a better name for \"Box\"?", ["0005.html", "0004.html", "0000.html"]], ["[css-houdini-drafts] [css-layout-api] Specify which anonymous boxes generate boxes for the purposes of the layout API.", ["0009.html", "0001.html"]], ["[css-houdini-drafts] [css-layout-api] What type of breaks are needed on ChildBreakTokens", ["0010.html"]], ["[css-houdini-drafts] [css-paint-api] Issue with GIF, APNG, WebP (animated images)", ["0019.html", "0015.html"]], ["[css-houdini-drafts] [css-properties-values-api] <custom-ident> in syntax string?", ["0028.html"]], ["[css-houdini-drafts] [css-properties-values-api] Interpolate lists as simple or repeatable lists?", ["0052.html", "0051.html"]], ["[css-houdini-drafts] [css-properties-values-api] Specific identifier syntax & CSS-wide keywords", ["0024.html", "0023.html", "0022.html", "0014.html", "0013.html"]], ["[css-houdini-drafts] [css-typed-om] CSSRotation/Skew can be constructed with doubles, but not CSSTranslation/Perspective", ["0055.html", "0053.html", "0050.html", "0049.html", "0048.html"]], ["[css-houdini-drafts] [css-typed-om] Describe that StylePropertyMaps are not live objects", ["0054.html", "0042.html", "0041.html", "0039.html", "0033.html"]], ["[css-houdini-drafts] [css-typed-om] Gradients support", ["0017.html", "0016.html"]], ["[css-houdini-drafts] [css-typed-om] Make attributes readonly in CSSTokenStreamValue, CSSNumberValue and CSSLengthValues", ["0007.html"]], ["[css-houdini-drafts] [css-typed-om] Make CSSSkew constructor work with CSSAngleValue args", ["0029.html"]], ["[css-houdini-drafts] [css-typed-om] Stringification behavior", ["0032.html"]], ["[css-houdini-drafts] [css-typed-om] StylePropertyMap iterable", ["0040.html", "0038.html", "0037.html", "0035.html", "0034.html", "0031.html"]], ["[css-houdini-drafts] [worklets] First pass of fixing import for worklets.", ["0003.html", "0002.html"]], ["[css-houdini-drafts] [worklets] Fix module loading when creating a new worklet global scope.", ["0027.html"]], ["[css-houdini-drafts] Add constructor for CSSSkew with CSSAngleValues", ["0044.html"]], ["[css-houdini-drafts] Incorrect Contribution Policy Link on wiki homepage.", ["0021.html"]], ["[css-houdini-drafts] Make CSSSkew and CSSRotation store their angle members as CSSAngleValues instead of doubles", ["0046.html"]], ["[css-houdini-drafts] Proposal, custom script based transitions", ["0056.html", "0036.html"]], ["[css-houdini-drafts] Pull Request: [css-typed-om] Also make KeywordValue's keywordValue attribute readonly", ["0008.html"]], ["[css-houdini-drafts] Pull Request: [worklets] Fix module loading when creating a new worklet global scope.", ["0026.html", "0025.html"]], ["[css-houdini-drafts] Pull Request: Add constructor for CSSSkew with CSSAngleValues", ["0043.html"]], ["[css-houdini-drafts] Pull Request: Make attributes readonly in CSSTokenStreamValue, CSSNumberValue and CSSLengthValues", ["0006.html"]], ["[css-houdini-drafts] Pull Request: Make CSSSkew and CSSRotation store their angle members as CSSAngleValues instead of doubles", ["0045.html"]], ["Closed: [css-houdini-drafts] [css-layout-api] Come up with a better name for \"Box\"?", ["0011.html"]], ["Closed: [css-houdini-drafts] [css-layout-api] Specify which anonymous boxes generate boxes for the purposes of the layout API.", ["0012.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Issue with GIF, APNG, WebP (animated images)", ["0018.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Make CSSSkew constructor work with CSSAngleValue args", ["0047.html"]]], [["[css-houdini-drafts] \"fetch a module script tree\" is asynchronous", ["0049.html"]], ["[css-houdini-drafts] [css-paint-api] Add \"alpha\" as an option.", ["0019.html"]], ["[css-houdini-drafts] [css-paint-api] Add inputArguments to paint API", ["0018.html"]], ["[css-houdini-drafts] [css-paint-api] API spec should support accelerated rendering via declarative context such as servo webrender", ["0016.html"]], ["[css-houdini-drafts] [css-paint-api] JavaScript spec usage notes and suggestions", ["0025.html"]], ["[css-houdini-drafts] [css-paint-api] Make prexfixes allowed.", ["0036.html"]], ["[css-houdini-drafts] [css-paint-api] Rename \"Geometry\" to \"PaintSize\"", ["0034.html", "0017.html"]], ["[css-houdini-drafts] [css-paint-api] should registered paint names be somehow limited to shadow trees they are registered in?", ["0032.html", "0031.html", "0030.html", "0029.html", "0028.html", "0027.html", "0026.html"]], ["[css-houdini-drafts] [css-properties-values-api] Computed values for <color>", ["0112.html", "0110.html", "0105.html", "0095.html"]], ["[css-houdini-drafts] [css-properties-values-api] Computed values for <transform>", ["0121.html"]], ["[css-houdini-drafts] [css-typed-om] Add an aspectRatio to CSSImageValue", ["0130.html"]], ["[css-houdini-drafts] [css-typed-om] CSSLengthValue normalization typo?", ["0117.html"]], ["[css-houdini-drafts] [css-typed-om] Make missing intrinsic dimensions null, not 0", ["0133.html"]], ["[css-houdini-drafts] [css-typed-om]: APIs not exposed in Worklets", ["0123.html", "0104.html"]], ["[css-houdini-drafts] [css-typed-om]: CSSTokenStreamValue is not valid IDL", ["0103.html", "0101.html", "0098.html"]], ["[css-houdini-drafts] [css-typed-om]: number and length representations might be wrong", ["0096.html"]], ["[css-houdini-drafts] [css-typed-om]: should constructors / parsers be exposed in Worklets?", ["0102.html", "0100.html", "0099.html"]], ["[css-houdini-drafts] [Typed OM] rotate3d syntax in old OM is \"rotate3d(x, y, z, a)\", but in Typed OM it is Constructor(angle, x, y, z)", ["0091.html", "0090.html"]], ["[css-houdini-drafts] [worklets] First pass of fixing import for worklets.", ["0125.html", "0124.html"]], ["[css-houdini-drafts] CSS operations static or not static?", ["0040.html", "0039.html", "0038.html", "0037.html", "0015.html", "0014.html", "0013.html", "0012.html", "0011.html", "0010.html", "0009.html", "0008.html", "0006.html", "0005.html", "0004.html"]], ["[css-houdini-drafts] CSS Typed: APIs not exposed in Worklets", ["0059.html"]], ["[css-houdini-drafts] CSS Typed: CSSCalcDictionary needs a different name", ["0068.html", "0063.html"]], ["[css-houdini-drafts] CSS Typed: CSSCalcLength is not defined", ["0074.html", "0062.html"]], ["[css-houdini-drafts] CSS Typed: CSSLengthValue cannot represent 0", ["0077.html", "0070.html", "0067.html", "0064.html"]], ["[css-houdini-drafts] CSS Typed: CSSTokenStreamValue is not valid IDL", ["0078.html", "0076.html", "0075.html", "0073.html", "0072.html", "0071.html", "0069.html", "0061.html"]], ["[css-houdini-drafts] CSS Typed: number and length representations might be wrong", ["0066.html", "0065.html"]], ["[css-houdini-drafts] CSS Typed: should constructors / parsers be exposed in Worklets?", ["0060.html"]], ["[css-houdini-drafts] CSS Typed: use USVString for URLs", ["0088.html"]], ["[css-houdini-drafts] CSSTokenStreamValue", ["0097.html", "0024.html", "0023.html", "0022.html"]], ["[css-houdini-drafts] draw a paint image is not thread safe", ["0084.html", "0083.html", "0082.html", "0080.html", "0056.html", "0050.html"]], ["[css-houdini-drafts] Fix extremely important article use before 'box'", ["0126.html"]], ["[css-houdini-drafts] HTTPS state not defined for worklets", ["0045.html", "0044.html"]], ["[css-houdini-drafts] import() exception note disagrees with normative text", ["0043.html"]], ["[css-houdini-drafts] import() fetches scripts twice when there's no worklet global", ["0047.html", "0046.html"]], ["[css-houdini-drafts] import() setup is inefficient", ["0120.html", "0119.html", "0118.html", "0116.html", "0115.html", "0113.html", "0111.html", "0109.html", "0108.html", "0107.html", "0106.html", "0048.html"]], ["[css-houdini-drafts] import() should grab state before executing in parallel", ["0042.html"]], ["[css-houdini-drafts] Long running scripts", ["0087.html", "0086.html", "0085.html", "0081.html", "0079.html", "0057.html", "0055.html"]], ["[css-houdini-drafts] Provide generalized resource mechanism", ["0003.html"]], ["[css-houdini-drafts] Pull Request: [CSS Typed OM] Add misssing animation, multi-column and transform properties to table of accepted types", ["0114.html"]], ["[css-houdini-drafts] Pull Request: [worklets] First pass of fixing import for worklets.", ["0127.html", "0122.html"]], ["[css-houdini-drafts] Pull Request: Change order of CSSRotation arguments to be consistent with rotate3d.", ["0092.html"]], ["[css-houdini-drafts] Pull Request: Fix register/unregisterProperty on CSS interface to be static.", ["0007.html"]], ["[css-houdini-drafts] Pull Request: fixing typo", ["0001.html"]], ["[css-houdini-drafts] Pull Request: fixing typos", ["0000.html"]], ["[css-houdini-drafts] registerPaint() behavior is unclear", ["0051.html"]], ["[css-houdini-drafts] registerPaint() inputProperties is unsafe", ["0052.html"]], ["[css-houdini-drafts] Rename CSSTokenStreamValue", ["0020.html"]], ["[css-houdini-drafts] s/scratch bitmap/output bitmap/ to fix broken link", ["0002.html"]], ["[css-houdini-drafts] Using Invoke/Construct directly without IDL settings machinery is broken", ["0094.html", "0058.html", "0054.html"]], ["[css-houdini-drafts] Variable paint in registerPaint not defined", ["0053.html"]], ["[css-houdini-drafts] Why is there a responsible browsing context, but no document?", ["0041.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Make prexfixes allowed.", ["0035.html"]], ["Closed: [css-houdini-drafts] [css-paint-api] Rename \"Geometry\" to \"PaintSize\"", ["0033.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Add an aspectRatio to CSSImageValue", ["0131.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] CSSResourceValue should inherit from CSSStyleValue", ["0132.html"]], ["Closed: [css-houdini-drafts] [css-typed-om] Make missing intrinsic dimensions null, not 0", ["0134.html"]], ["Closed: [css-houdini-drafts] [questions] Right or Lie about CSS Houdini?", ["0128.html"]], ["Closed: [css-houdini-drafts] [Typed OM] rotate3d syntax in old OM is \"rotate3d(x, y, z, a)\", but in Typed OM it is Constructor(angle, x, y, z)", ["0093.html"]], ["Closed: [css-houdini-drafts] CSSTokenStreamValue", ["0021.html"]], ["Closed: [css-houdini-drafts] Variable paint in registerPaint not defined", ["0089.html"]], ["Closed: [css-houdini-drafts] Why is CSS extended in JavaScript files instead of in CSS files?", ["0129.html"]]], [["[css-houdini-drafts] [css-paint-api] API spec should support accelerated rendering via declarative context such as servo webrender", ["0004.html"]], ["[css-houdini-drafts] [css-properties-values-api] Example 2: should explain more clearly why `inherit` instead of `green` in description", ["0029.html"]], ["[css-houdini-drafts] [css-typed-om] Rename CSSTokenStream to something that doesn't talk about tokens", ["0011.html", "0010.html", "0009.html", "0008.html", "0007.html", "0006.html", "0005.html"]], ["[css-houdini-drafts] API spec should support accelerated rendering via declarative context such as servo webrender", ["0003.html"]], ["[css-houdini-drafts] CSS Parser API Link Update", ["0030.html"]], ["[css-houdini-drafts] CSSColorValue missing from TypedOM?", ["0033.html", "0031.html"]], ["[css-houdini-drafts] test", ["0001.html"]], ["[css-houdini-drafts] TypedOM returning an array of strings isn't a helpful behavior", ["0028.html", "0027.html", "0025.html", "0024.html", "0023.html", "0022.html", "0021.html", "0020.html", "0019.html", "0018.html", "0017.html", "0016.html", "0015.html", "0014.html", "0013.html", "0012.html"]], ["Closed: [css-houdini-drafts] CSSColorValue missing from TypedOM?", ["0032.html"]], ["Closed: [css-houdini-drafts] test", ["0002.html"]], ["Closed: [css-houdini-drafts] TypedOM returning an array of strings isn't a helpful behavior", ["0026.html"]], ["test", ["0000.html"]]]]